{"version":3,"sources":["routes.js","config/index.js","config/aeonsData.js","config/marketSetups.js","config/turnOrderSetups.js","globalContexts.js","hooks/useSelectedSets.jsx","components/ShuffleButton.jsx","components/pages/helpers.js","components/pages/Nemeses.jsx","components/pages/Mages/MageCountPicker.jsx","components/pages/Mages/MageList.jsx","components/pages/Mages/index.jsx","components/pages/Supply/supplyStyles.js","components/pages/Supply/ListWrapper.jsx","components/pages/Supply/MarketTile.jsx","components/pages/Supply/SupplyList.jsx","components/pages/Supply/MarketOptions.jsx","components/pages/Supply/index.jsx","components/pages/Settings/settingStyles.js","components/pages/Settings/ActiveSets.jsx","components/pages/Settings/index.jsx","components/pages/TurnOrder/TurnOrderTableCell.jsx","components/pages/TurnOrder/TurnOrderTable.jsx","components/pages/TurnOrder/ActiveTurnOrder.jsx","components/pages/TurnOrder/TurnOrderSetup.jsx","components/pages/TurnOrder/hooks.js","components/pages/TurnOrder/index.jsx","components/Content.jsx","components/App/TopBar.jsx","components/RouteItem.jsx","components/Routes.jsx","components/App/DrawerMenu.jsx","components/App/index.jsx","components/App/appStyles.js","serviceWorker.js","index.js"],"names":["ROUTES","config","DATA","sets","WE","nemeses","set","name","id","mages","cards","type","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","MARKETSETUPS","market1","tiles","operation","threshold","market2","market3","values","market4","market5","market6","random","TURNORDERSETUPS","onePlayerThreeToc","turnOrderCards","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","SetConfigurationContext","React","createContext","useSelectedSets","configurationOfSets","useContext","selectedSets","Object","keys","filter","key","noSelectedSetsComponent","length","react_default","a","createElement","Typography_default","paragraph","ShuffleButton","withStyles","root","position","bottom","right","Fab","createSlotList","amount","Array","from","getListOfAvailableEntity","entity","reduce","acc","concat","toConsumableArray","getRandomEntity","availableEntities","Math","floor","createEntityList","blueprintList","blueprint","i","last","hasCostOperation","undefined","newEntity","card","setupBlueprint","indexOf","filterByCost","result","Nemeses","_useSelectedSets","_useState","useState","_useState2","slicedToArray","nemesis","setNemesis","availableNemeses","Fragment","components_ShuffleButton","onClick","color","variant","MageCountPicker","_ref","selectedValue","handleAmountChange","FormControl_default","component","FormLabel_default","RadioGroup_default","aria-label","value","onChange","FormControlLabel_default","control","Radio_default","label","MageList","List_default","map","mage","ListItem_default","ListItemText_default","Mages","setMages","_useState3","_useState4","setAmount","availableMages","hasEmptySlots","Mages_MageCountPicker","toString","e","parseInt","target","Mages_MageList","slotList","supplyStyles","theme","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","gridList","width","height","minWidth","ListWrapper","styled","withConfig","displayName","componentId","MarketTile","tileSetup","index","classes","rest","objectWithoutProperties","GridListTile_default","assign","cols","Card_default","className","style","CardContent_default","title","gutterBottom","join","thresholdValue","getOperationString","pos","SupplyList","marketSetup","Supply_ListWrapper","GridList_default","cellHeight","spacing","Supply_MarketTile","renderTiles","MarketOptions","marketSetupId","changeHandler","setup","getRandomCardsByType","availableCards","tileSetups","cardType","cardSlots","availableCardsOfType","_ref2","_ref3","expanded","setExpanded","setMarketSetup","emptySlotList","_useState5","_useState6","setCards","panel","ExpansionPanel_default","event","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","_createSupply","gems","relics","spells","createSupply","settingStyles","ActiveSets","allSetsSelected","handleSelectAll","handleChange","Checkbox_default","checked","FormGroup_default","renderConfiguredSets","_useContext","setSets","every","val","Settings_ActiveSets","newSets","objectSpread","defineProperty","setToDb","DiscardTableCell","padding","TableCell","TurnOrderTable","handlers","Table_default","TableBody_default","TableRow_default","TurnOrderTableCell","align","IconButton_default","addToTop","index_es","addToBottom","shuffleIntoDeck","renderTableRows","ActiveTurnOrder","deckIsEmpty","discard","Button_default","startNewRound","drawTurnOrderCard","TurnOrder_TurnOrderTable","handleResetGame","TurnOrderSetup","turnOrderSetup","startGame","chooseSetup","renderTurnOrderSetups","shuffleDeck","deck","TurnOrder","_useTurnOrderSetup","setTurnOrderSetup","useEffect","getFromDb","then","handleTurnOrderSetupChange","useTurnOrderSetup","_useGameState","turnOrderState","setTurnOrderState","started","gameState","setGameState","state","cardId","newState","find","cardToAdd","cardDrawn","stated","deckAndDiscardState","handleStartGame","cardToShuffle","newDeck","useGameState","TurnOrder_ActiveTurnOrder","TurnOrder_TurnOrderSetup","Content","_ROUTES$nemeses$ROUTE","route","drawerHeader","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","primary","Routes","locationhandler","components_RouteItem","Build_default","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","appInfo","process","Link_default","href","githubLink","src","alt","githubLogo","display","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","alignItems","mixins","toolbar","justifyContent","content","flexGrow","unit","contentShift","margin","lineHeight","marginTop","verticalAlign","withTheme","setDrawerIsOpen","setCurrentLocation","defaultSets","CssBaseline_default","App_TopBar","App_DrawerMenu","Provider","components_Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a366c6a5.chunk.js","sourcesContent":["export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { DATA } from './aeonsData'\nimport MARKETSETUPS from './marketSetups'\nimport TURNORDERSETUPS from './turnOrderSetups'\n\nexport default {\n  DATA,\n  MARKETSETUPS,\n  TURNORDERSETUPS\n}\n","export const DATA = {\n  sets: [\"WE\", \"AE\", \"BS\", \"Legacy\", \"Nameless\", \"Depths\", \"TV\", \"OD\"],\n  \"WE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"nemeses\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"nemeses\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Rage Borne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","export default {\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n}\n\n","export default {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player with 3 turn order cards',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 1' },\n      { id: 4, name: 'Nemesis' },\n      { id: 5, name: 'Nemesis' }\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player with 4 turn order cards',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 1' },\n      { id: 4, name: 'Player 1' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 2' },\n      { id: 4, name: 'Player 2' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 2' },\n      { id: 3, name: 'Player 3' },\n      { id: 4, name: 'Wild' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 2' },\n      { id: 3, name: 'Player 3' },\n      { id: 4, name: 'Player 4' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  }\n}\n","import React from 'react'\n\nexport const SetConfigurationContext = React.createContext(null)\n\n","import React, { useContext } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from 'globalContexts'\n\n/**\n * Custom hook to make the users configured sets available to a component.\n * If no sets have been selected a simple noSelectedSetsComponent will\n * be created, which can be rendered to warn the user. (this component will otherwise be null)\n *\n * returns { selectedSets, noSelectedSetsComponent } \n  */\nconst useSelectedSets = () => {\n  const { configurationOfSets } = useContext(SetConfigurationContext)\n  const selectedSets = Object\n    .keys(configurationOfSets)\n    .filter( key => configurationOfSets[key])\n  const noSetsSelected = selectedSets.length < 1\n\n  const noSelectedSetsComponent = noSetsSelected\n    ? (<Typography paragraph>\n        There is currently no set selected. Please activate at least one set in the settings.\n      </Typography>)\n    : null\n\n  return {\n    selectedSets,\n    noSelectedSetsComponent\n  }\n}\n\nexport default useSelectedSets\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '30px',\n    right: '30px'\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import config from 'config'\n\n/**\n * Creates a list containing \"EMPTY\" strings. The length of the list\n * is determined by the amount of empty slots (\"amount\" parameter)\n  */\nexport const createSlotList = (amount) => {\n    return Array.from({ length: amount }, () => \"EMPTY\");\n}\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = {\n *    AE: { mages: [ \"a\", \"b\" ] },\n *    WE: { mages: [ \"c\", \"d\" ] }\n *  }\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ \"a\", \"b\", \"c\", \"d\" ]\n  */\nexport const getListOfAvailableEntity = (selectedSets, entity) => selectedSets.reduce(\n  (acc, set) => {\n    return [ ...acc, ...config.DATA[set][entity] ]\n  },[]\n)\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = (availableEntities) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (card, setupBlueprint) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"=\": {\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\n/**\n * Given a list of available entities (e.g. \"mages\" or \"cards\") and a list\n * of slots to fill, this returns a new list where each \"slot\" has been replaced\n * by a random entity from the list of available entities.\n * If the entities have an operation specified, the available entities will\n * be filtered by cost and operation before a random entity is determined. (currently only relevant for cards)\n * Also do note, that each entity is unique and therefore will be removed from the\n * list of available entities for the rest of the function run, as soon as it has been\n * picked for a slot once.\n  */\nexport const createEntityList = (availableEntities, blueprintList) => {\n  const entities = blueprintList.reduce(\n    (acc, blueprint, i) => {\n      const last = i === blueprintList.length - 1\n\n      // Check for cards\n      const hasCostOperation = blueprint.operation !== undefined\n      const newEntity = hasCostOperation\n        ? getRandomEntity(acc.availableEntities.filter(entity => filterByCost(entity, blueprint)))\n        : getRandomEntity(acc.availableEntities)\n\n      if (last) {\n        return [ ...acc.result, newEntity ]\n      }\n\n      // Make sure each entity will only be added to the result list once\n      const remainingEntitites = acc.availableEntities.filter(\n        entity => entity.id !== newEntity.id\n      )\n\n      return {\n        availableEntities: remainingEntitites,\n        result: [ ...acc.result, newEntity]\n      }\n  }, { availableEntities, result: [] })\n\n  return entities\n}\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from './helpers.js'\n\n\nconst Nemeses = () => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [nemesis, setNemesis] = useState(null)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableNemeses = getListOfAvailableEntity(selectedSets, \"nemeses\")\n  const handleShuffle = () => {\n    setNemesis(getRandomEntity(availableNemeses))\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? <Typography>{nemesis['name']}, {nemesis['set']}</Typography>\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default Nemeses\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst MageCountPicker = ({ selectedValue, handleAmountChange }) => (\n  <FormControl component=\"fieldset\">\n    <FormLabel component=\"legend\">Amount of Mages</FormLabel>\n    <RadioGroup\n      aria-label=\"Amount of Mages\"\n      name=\"mageAmount\"\n      value={selectedValue}\n      onChange={handleAmountChange}\n    >\n      <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n      <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n      <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n      <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nexport default MageCountPicker\n","import React from 'react'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst MageList = ({ mages }) => (\n  <List>\n    {\n      mages.map(mage => (\n        <ListItem key={mage.name}>\n          <ListItemText>{mage.name}, {mage.set}</ListItemText>\n        </ListItem>\n      ))\n    }\n  </List>\n)\n\nexport default MageList\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from 'components/pages/helpers.js'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\n\n\nconst Mages = () => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [mages, setMages] = useState([])\n  const [amount, setAmount] = useState(1)\n  const handleAmountChange = (e) => {\n    setAmount(parseInt(e.target.value))\n  }\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableMages = getListOfAvailableEntity(selectedSets, \"mages\")\n  const handleShuffle = () => {\n    const slotList = createSlotList(amount)\n    const mages = createEntityList(availableMages, slotList)\n    setMages(mages)\n  }\n\n  const hasEmptySlots = mages.indexOf(\"EMPTY\") > -1 || mages.length === 0\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={amount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        hasEmptySlots\n          ? <Typography>Tap button to recruit mages</Typography>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default Mages\n","const supplyStyles = (theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  gridList: {\n    width: 330,\n    height: 450,\n  },\n  card: {\n    minWidth: 30,\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 20px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport Typography from '@material-ui/core/Typography'\n\nconst getOperationString = (operation, values, threshold) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}\n\nconst MarketTile = ({ tileSetup, index, cards, classes, ...rest }) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <GridListTile cols={1} {...rest}>\n      <Card className={classes.card} style={{ height: '145px' }}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography component=\"p\">\n            { cards[index].name !== undefined ? cards[index].name : \"-\" }\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            Set: { cards[index].set !== undefined ? cards[index].set : \"-\" }\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            Cost: { cards[index].cost !== undefined ? cards[index].cost : \"-\" }\n          </Typography>\n        </CardContent>\n      </Card>\n    </GridListTile>\n  )\n}\n\nexport default MarketTile\n","import React from 'react'\n\nimport GridList from '@material-ui/core/GridList'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (marketSetup, cards, classes) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        index={i}\n        cards={cards}\n        classes={classes}\n        style={{ height: '150px' }}\n      />\n    )\n  )\n}\n\nconst SupplyList = ({marketSetup, cards, classes}) => (\n  <ListWrapper>\n    <GridList\n      cellHeight={180}\n      className={classes.gridList}\n      cols={2}\n      spacing={8}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </GridList>\n  </ListWrapper>\n)\n\nexport default SupplyList\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport config from 'config'\n\nconst renderMarketOptions = () => Object\n  .values(config.MARKETSETUPS)\n  .map(setup => (\n    <FormControlLabel\n      key={setup.id}\n      value={setup.id}\n      control={<Radio />}\n      label={setup.name}\n    />\n  ))\n\nconst MarketOptions = ({ marketSetupId, changeHandler }) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={changeHandler}\n  >\n    { renderMarketOptions() }\n  </RadioGroup>\n)\n\nexport default MarketOptions\n","import React, { useState } from 'react'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\nimport config from 'config'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from '../helpers.js'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (availableCards, tileSetups, cardType) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createEntityList(availableCardsOfType, cardSlots)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nconst createSupply = (selectedSets, tileSetups) => {\n  const availableCards = getListOfAvailableEntity(selectedSets, \"cards\")\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\n// Component\nconst Supply = ({ classes }) => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState(null)\n  const handleExpansion = (panel) => (event, expanded) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  // Market setup handling\n  const [ marketSetup, setMarketSetup ] = useState(config.MARKETSETUPS['market1'])\n  const handleMarketSetup = (event) => {\n    setMarketSetup(config.MARKETSETUPS[event.target.value])\n    setExpanded(false)\n  }\n\n  // Set handling\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const emptySlotList = createSlotList(9)\n  const [cards, setCards] = useState(emptySlotList)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const handleShuffle = () => {\n    const { gems, relics, spells } = createSupply(selectedSets, marketSetup.tiles)\n    setCards([...gems, ...relics, ...spells])\n  }\n\n  return (\n    <React.Fragment>\n      <ExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            changeHandler={handleMarketSetup}\n          />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default withStyles(supplyStyles)(Supply)\n","const settingStyles = (theme) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\n\nconst renderConfiguredSets = (configurationOfSets, sets, handleChange) => sets.map(set => (\n  <FormControlLabel\n    key={set}\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={set}\n  />\n))\n\nconst ActiveSets = ({\n  allSetsSelected,\n  handleSelectAll,\n  sets,\n  configurationOfSets,\n  handleChange\n}) => (\n  <FormControl component=\"fieldset\">\n    <FormLabel component=\"legend\">Select active sets</FormLabel>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={allSetsSelected}\n          onChange={handleSelectAll}\n          value={ allSetsSelected\n            ? \"Deselect All\"\n            : \"Select All\"\n          }\n        />\n      }\n      label={ allSetsSelected\n        ? \"Deselect All\"\n        : \"Select All\"\n      }\n    />\n    <FormGroup>\n      {\n        renderConfiguredSets(configurationOfSets, sets, handleChange)\n      }\n    </FormGroup>\n  </FormControl>\n)\n\nexport default ActiveSets\n","import React, { useContext, useState } from 'react'\n\nimport { set as setToDb } from 'idb-keyval'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = ({ classes }) => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState(null)\n  const handleExpansion = (panel) => (event, expanded) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  // Sets\n  const { configurationOfSets, sets, setSets } = useContext(SetConfigurationContext)\n  const handleChange= (set) => {\n    const newSets = { ...configurationOfSets, [set]: !configurationOfSets[set] }\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  const allSetsSelected = Object.values(configurationOfSets).every(val => val === true)\n  const handleSelectAll = () => {\n    const newSets = sets.reduce((acc, set) => {\n      return { ...acc, [set]: !allSetsSelected }\n    }, {})\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  return (\n    <ExpansionPanel expanded={expanded === 'sets'} onChange={handleExpansion('sets')}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Configured Sets</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets\n          allSetsSelected={allSetsSelected}\n          handleSelectAll={handleSelectAll}\n          sets={sets}\n          configurationOfSets={configurationOfSets}\n          handleChange={handleChange}\n        />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst DiscardTableCell = withStyles({\n    root: {\n        padding: '4px'\n    }\n})(TableCell)\n\nexport default DiscardTableCell","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport TurnOrderTableCell from './TurnOrderTableCell'\n\nconst renderTableRows = (cards, handlers) => cards.map((card, i) => (\n  <TableRow key={i}>\n    <TurnOrderTableCell>\n      <Typography component='p'>{card.name}</Typography>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"center\">\n      <IconButton\n        aria-label=\"Add to top\" \n        title=\"Add to top\" \n        onClick={() => handlers.addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"center\">\n      <IconButton \n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => handlers.addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"center\">\n      <IconButton \n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => handlers.shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n  </TableRow>\n))\n\nconst TurnOrderTable = ({ cards, handlers }) => (\n <Table>\n   <TableBody>\n     { renderTableRows(cards, handlers) }\n   </TableBody>\n </Table>\n)\n\nexport default TurnOrderTable\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport ShuffleButton from 'components/ShuffleButton.jsx'\n\nimport TurnOrderTable from './TurnOrderTable'\n\nconst ActiveTurnOrder = ({\n  deckIsEmpty,\n  discard,\n  handlers\n}) => (\n  <React.Fragment>\n    {\n      deckIsEmpty\n        ? (<Button color='secondary' onClick={handlers.startNewRound}>New Round</Button>)\n        : (\n          <Button\n            color='secondary' \n            onClick={handlers.drawTurnOrderCard}\n          >\n            Draw a card\n          </Button>\n        )\n    }\n\n    <TurnOrderTable\n      cards={discard}\n      handlers={handlers}\n    />\n\n  <ShuffleButton \n    color='primary'\n    variant='extended'\n    onClick={handlers.handleResetGame}\n  >\n        Reset Game\n    </ShuffleButton>\n  </React.Fragment>\n)\n\nexport default ActiveTurnOrder\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport ShuffleButton from 'components/ShuffleButton.jsx'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from 'config'\n\nconst renderSetupOptions = () => Object.values(config.TURNORDERSETUPS).map(setup => (\n  <FormControlLabel\n    key={setup.id}\n    value={setup.id}\n    control={<Radio />}\n    label={setup.name} />\n))\n\nconst renderTurnOrderSetups = (turnOrderSetup) => turnOrderSetup\n  .turnOrderCards\n  .map(\n    (card, i) => (\n      <Typography component='p' key={i}>\n        {card.name}\n      </Typography>\n    )\n  )\n\nconst TurnOrderSetup = ({\n  turnOrderSetup,\n  startGame,\n  chooseSetup\n}) => (\n  <React.Fragment>\n    <RadioGroup\n      aria-label='Players'\n      name='turnOrderOptions'\n      value={turnOrderSetup.id}\n      onChange={chooseSetup}>\n      {renderSetupOptions()}\n    </RadioGroup>\n    { renderTurnOrderSetups(turnOrderSetup) }\n    <ShuffleButton color='primary' variant='extended' onClick={startGame}>\n     Start Game\n    </ShuffleButton>\n  </React.Fragment>\n)\n\nexport default TurnOrderSetup\n","import { useState, useEffect } from 'react'\n\nimport {\n  get as getFromDb,\n  set as setToDb\n} from 'idb-keyval'\n\nimport config from 'config'\n\nimport {\n  createEntityList\n} from '../helpers'\n\n\nconst shuffleDeck = (deck) => {\n  return createEntityList(deck, deck)\n}\n\nexport const useTurnOrderSetup = () => {\n  const [turnOrderSetup, setTurnOrderSetup] = useState(\n    config.TURNORDERSETUPS['onePlayerThreeToc']\n  )\n  const handleTurnOrderSetupChange = (event) => {\n    const setup = config.TURNORDERSETUPS[event.target.value]\n    setTurnOrderSetup(setup)\n    setToDb('turnOrderSetup', setup)\n  }\n\n  useEffect(() => {\n    getFromDb('turnOrderSetup').then(setup => {\n      if (setup !== undefined) {\n        setTurnOrderSetup(setup)\n      }\n    })\n  }, [])\n\n  return {\n    turnOrderSetup,\n    handleTurnOrderSetupChange\n  }\n}\n\nexport const useGameState = (turnOrderSetup) => {\n  const TURNORDERSTATE = 'turnOrderState'\n\n  const [turnOrderState, setTurnOrderState] = useState({\n    deck: [],\n    discard: []\n  })\n\n  const [gameState, setGameState] = useState({\n    started: false\n  })\n\n  const drawTurnOrderCard = () => {\n    const { deck } = turnOrderState\n\n    if(deck.length === 0) return\n\n    const cardDrawn = deck[deck.length - 1];\n\n    const newState = {\n      deck: deck.filter(card => card.id !== cardDrawn.id),\n      discard: [cardDrawn, ...turnOrderState.discard ]\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const startNewRound = () => {\n    const newState = {\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards),\n      discard: []\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToTop = (cardId) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    const newState = {\n      deck: [...turnOrderState.deck, cardToAdd],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToBottom = (cardId) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    const newState = {\n      deck: [cardToAdd, ...turnOrderState.deck],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const shuffleIntoDeck = (cardId) => {\n    const cardToShuffle = turnOrderState.discard.find(card => card.id === cardId)\n    const newDeck = [...turnOrderState.deck, cardToShuffle]\n    const shuffledDeck = shuffleDeck(newDeck)\n\n    const newState = {\n      deck: shuffledDeck,\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  // Game state handling\n  const handleStartGame = () => {\n    const gameState = { started: true }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = {\n      ...turnOrderState,\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards)\n    }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  const handleResetGame = () => {\n    const gameState = { stated: false }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = { ...turnOrderState, discard: [] }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  useEffect(() => {\n    getFromDb(TURNORDERSTATE).then(state => {\n      const isValidState = (\n        state !== undefined &&\n        state.turnOrderState &&\n        state.turnOrderState.deck &&\n        state.turnOrderState.discard\n      )\n      if (isValidState) {\n        setGameState(state.gameState)\n        setTurnOrderState(state.turnOrderState)\n      }\n    })\n  }, [])\n\n  return {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  }\n}\n","import React from 'react'\n\nimport ActiveTurnOrder from './ActiveTurnOrder'\nimport TurnOrderSetup from './TurnOrderSetup'\nimport {\n  useTurnOrderSetup,\n  useGameState\n} from './hooks'\n\n\nconst TurnOrder = () => {\n  const { turnOrderSetup, handleTurnOrderSetupChange } = useTurnOrderSetup()\n\n  const {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  } = useGameState(turnOrderSetup)\n\n  return (\n    <React.Fragment>\n      {gameState.started\n          ? (\n            <ActiveTurnOrder\n              deckIsEmpty={turnOrderState.deck.length === 0}\n              discard={turnOrderState.discard}\n              handlers={{\n                addToBottom,\n                addToTop,\n                drawTurnOrderCard,\n                handleResetGame,\n                shuffleIntoDeck,\n                startNewRound\n              }}\n            />\n          )\n          : (\n            <TurnOrderSetup\n              turnOrderSetup={turnOrderSetup}\n              startGame={handleStartGame}\n              chooseSetup={handleTurnOrderSetupChange}\n            />\n          )}\n    </React.Fragment>\n  )\n}\n\nexport default TurnOrder\n","import React from 'react'\n\nimport Nemeses from 'components/pages/Nemeses'\nimport Mages from 'components/pages/Mages'\nimport Supply from 'components/pages/Supply'\nimport Settings from 'components/pages/Settings'\nimport TurnOrder from 'components/pages/TurnOrder'\n\nimport { ROUTES } from 'routes'\n\n\nconst Content = ({ classes, route, ...rest }) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      {\n        [ROUTES.nemeses]: <Nemeses />,\n        [ROUTES.mages]: <Mages />,\n        [ROUTES.supply]: <Supply />,\n        [ROUTES.turnOrder]: <TurnOrder />,\n        [ROUTES.settings]: <Settings />\n      }[route]\n    }\n  </div>\n)\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = ({ classes, drawerIsOpen, currentLocation, toggleDrawer }) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n)\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = ({ route, clickhandler, children }) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n)\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes.js'\nimport RouteItem from './RouteItem.jsx'\n\nconst Routes = ({ locationhandler }) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n)\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport Routes from 'components/Routes.jsx'\n\n\n\nconst DrawerMenu = ({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography className={classes.appInfo}>\n      Version: {process.env.REACT_APP_VERSION}\n      <Link href=\"https://github.com/on3iro/aeons-end-randomizer\" color=\"inherit\" className={classes.githubLink} target=\"_blank\">\n        <img src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" className={classes.githubLogo} />Github\n      </Link>\n    </Typography>\n  </Drawer>\n)\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react';\n\nimport { get as getFromDb } from 'idb-keyval'\n\nimport classNames from 'classnames'\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles.js'\nimport { ROUTES } from 'routes.js'\nimport config from 'config'\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport Content from 'components/Content.jsx'\n\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\n\nconst App = ({ classes, theme }) => {\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const defaultSets = config.DATA.sets.reduce(\n    (acc, set) => ({ ...acc, [set]: false }) , {}\n  )\n  const [ configurationOfSets, setSets ] = useState(defaultSets)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    getFromDb('sets').then(sets => {\n      if (sets !== undefined) {\n        setSets(sets)\n      }\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <SetConfigurationContext.Provider value={{ configurationOfSets, setSets, sets: config.DATA.sets }}>\n        <Content\n          route={currentLocation}\n          classes={classes}\n          className={classNames(classes.content, {\n            [classes.contentShift]: drawerIsOpen,\n          })}\n        />\n      </SetConfigurationContext.Provider>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","const drawerWidth = 240;\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  appInfo: {\n    margin: theme.spacing.unit * 2\n  },\n  githubLink: {\n    display: 'block',\n    lineHeight: '24px',\n    marginTop: theme.spacing.unit * 2\n  },\n  githubLogo: {\n    width: '24px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing.unit\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}