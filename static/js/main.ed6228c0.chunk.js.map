{"version":3,"sources":["mainTheme.ts","config/aeonsData.ts","config/turnOrderSetups.ts","config/index.ts","config/marketSetups.ts","Redux/Store/Settings/Expansions/Selected.ts","Redux/Store/MainContentLoading/index.ts","Redux/Store/Settings/Expansions/index.ts","Redux/Store/Settings/SupplySetups/index.ts","Redux/Store/Nemesis/index.ts","Redux/Store/Settings/index.ts","Redux/helpers.ts","Redux/Store/Mages/Count/index.ts","Redux/Store/Mages/Recruited/index.ts","Redux/Store/Mages/index.ts","Redux/Store/Supply/Selection/index.ts","Redux/Store/Supply/RandomSetup/helpers.ts","Redux/Store/Supply/RandomSetup/index.ts","Redux/Store/Supply/index.ts","Redux/Store/TurnOrder/ActiveGame/index.ts","Redux/Store/TurnOrder/Configuration/index.ts","Redux/Store/index.ts","Redux/Store/TurnOrder/index.ts","routes.ts","components/pages/Nemeses/NemesisTile/Card.tsx","components/pages/Nemeses/NemesisTile/CardContent.tsx","components/pages/Nemeses/NemesisTile/CardTypeIcon.tsx","components/pages/Nemeses/NemesisTile/ExpansionName.tsx","components/pages/Nemeses/NemesisTile/Name.tsx","components/pages/Nemeses/NemesisTile/index.tsx","components/pages/Nemeses/EmptyNemesisHint.tsx","components/ShuffleButton.tsx","components/NoSelectedExpansions.tsx","components/pages/Nemeses/index.tsx","components/pages/Mages/MageCountPicker.tsx","components/pages/Mages/MageList/MageGridWrapper.tsx","components/pages/Mages/MageTile/Wrapper.tsx","components/pages/Mages/MageTile/Card.tsx","components/pages/Mages/MageTile/CardContent.tsx","components/pages/Mages/MageTile/CardTypeIcon.tsx","components/pages/Mages/MageTile/ExpansionName.tsx","components/pages/Mages/MageTile/Name.tsx","components/pages/Mages/MageTile/index.tsx","components/pages/Mages/MageList/index.tsx","components/pages/Mages/EmptyMageListHint.tsx","components/pages/Mages/index.tsx","hooks/useExpansionHandling.tsx","components/ExpansionPanel/StyledExpansionPanel.tsx","components/ExpansionPanel/StyledExpansionPanelSummary.tsx","components/Heading.tsx","components/ExpansionPanel/index.tsx","components/pages/Supply/ListWrapper.tsx","types.ts","components/pages/Supply/MarketTile/Card.tsx","components/pages/Supply/MarketTile/CardContent.tsx","components/pages/Supply/MarketTile/CardName.tsx","components/pages/Supply/MarketTile/CardTypeIcon.tsx","components/pages/Supply/MarketTile/CardInfoItem.tsx","components/pages/Supply/MarketTile/Info.tsx","components/pages/Supply/MarketTile/InfoLabel.tsx","components/pages/Supply/MarketTile/CostInfo.tsx","components/pages/Supply/MarketTile/CostOperation.tsx","components/pages/Supply/MarketTile/ExpansionInfo.tsx","components/pages/Supply/MarketTile/index.tsx","components/pages/Supply/SupplyList.tsx","components/pages/Supply/MarketOptionsWrapper.tsx","components/SupplyPreview/Wrapper.tsx","components/SupplyPreview/TileList.tsx","components/SupplyPreview/TileListItem.tsx","components/SupplyPreview/SupplyName.tsx","components/SupplyPreview/index.tsx","components/pages/Supply/MarketOptions.tsx","components/pages/Supply/index.tsx","components/CheckboxList/Item.tsx","components/CheckboxList/index.tsx","components/pages/Settings/Expansions/ActiveSets.tsx","components/pages/Settings/Expansions/index.tsx","components/pages/Settings/Supply/SettingsSupplyPreview.tsx","components/pages/Settings/Supply/CheckboxWithPreviewWrapper.tsx","components/pages/Settings/Supply/CheckboxWithPreview.tsx","components/pages/Settings/Supply/CustomSetupEdit/InputField.tsx","components/pages/Settings/Supply/CustomSetupEdit/SelectField.tsx","components/pages/Settings/Supply/CustomSetupEdit/SelectFieldsWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrintWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/CancelButton.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrint.tsx","components/pages/Settings/Supply/CustomSetupEdit/ListWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrintList.tsx","components/pages/Settings/Supply/CustomSetupEdit/MainControlsWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/MainControls.tsx","components/pages/Settings/Supply/CustomSetupEdit/Wrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/index.tsx","components/pages/Settings/Supply/CheckboxWithPreviewControls.tsx","components/pages/Settings/Supply/CustomSetups.tsx","components/pages/Settings/Supply/PredefinedSetups.tsx","components/pages/Settings/Supply/SetupSelectionWrapper.tsx","components/pages/Settings/Supply/SetupSelection.tsx","components/pages/Settings/Supply/index.tsx","components/pages/Settings/index.tsx","components/pages/TurnOrder/DiscardTable/Cell.tsx","components/pages/TurnOrder/DiscardTable/RowWrapper.tsx","components/pages/TurnOrder/DiscardTable/Row.tsx","components/pages/TurnOrder/DiscardTable/Table.tsx","components/pages/TurnOrder/DiscardTable/index.tsx","components/pages/TurnOrder/ActiveGame.tsx","components/pages/TurnOrder/Card.tsx","components/pages/TurnOrder/CardNameDisplay.tsx","components/pages/TurnOrder/ModeSelection.tsx","components/pages/TurnOrder/PlayerCountSelection.tsx","components/pages/TurnOrder/SetupSelection.tsx","components/pages/TurnOrder/TurnOrderConfiguration.tsx","components/pages/TurnOrder/index.tsx","components/Content/HeaderPlaceholder.tsx","components/Content/Wrapper.tsx","components/Content/index.tsx","components/TopBar/Title.tsx","components/TopBar/AppBar.tsx","components/TopBar/MenuButton/index.tsx","components/TopBar/index.tsx","components/RouteItem.tsx","components/Routes.tsx","components/DrawerMenu/Header.tsx","components/DrawerMenu/AppInfo.tsx","components/DrawerMenu/GitHubLink.tsx","components/DrawerMenu/GitHubLogo.tsx","components/DrawerMenu/Drawer.tsx","components/DrawerMenu/index.tsx","components/App/MainApp.tsx","components/App/Wrapper.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","Redux/configureStore.ts"],"names":["muiTheme","createMuiTheme","palette","primary","blue","secondary","pink","typography","useNextVariants","playerColors","player1","normal","light","player2","player3","player4","mainTheme","heading","fontSize","pxToRem","spacing","drawerWidth","muiTransitions","appBarShift","transitions","create","easing","easeOut","duration","enteringScreen","content","sharp","leavingScreen","contentShift","colors","text","turnOrderCards","_objectSpread","player12","concat","player34","wild","wild-token","nemesis","maelstrom","blitz","cards","gem","color","background","relic","spell","mage","DATA","NA","id","name","type","nemeses","expansion","mages","cost","IW","SD","TA","WE","TV","OD","Nameless","Legacy","Depths","BS","AE","p-1","p-2","p-3","p-4","p-5","p-6","p-7","p-8","p-9","p-10","TURNORDERCARDS","player1-1","player1-2","player1-3","player1-4","player2-1","player2-2","player3-1","player4-1","player12-1","player12-2","player34-1","player34-2","wildToken","nemesis-1","nemesis-2","TURNORDERSETUPS","onePlayer","variations","default","4toc","twoPlayers","threePlayers","fourPlayers","splitPlayers","config","DEFAULTSUPPLYCOUNT","EXPANSIONS","Object","keys","MARKETSETUPS","market1Inc","active","tiles","operation","threshold","market1","market2","market3","values","market4","market5","market6","random","ActionTypes","initialState","reduce","acc","set","Selected_objectSpread","defineProperty","actions","toggleAll","createAction","TOGGLE_ALL","toggleExpansion","TOGGLE_EXPANSION","setToDB","state","SET_TO_DB","setToDBSuccessful","SET_TO_DB_SUCCESS","setToDBFailed","error","SET_TO_DB_FAILURE","fetchFromDB","FETCH_FROM_DB","fetchFromDBSuccessful","FETCH_FROM_DB_SUCCESS","fetchFromDBFailed","FETCH_FROM_DB_FAILURE","allSetsAreSelected","every","val","getSelectedExpansionsState","Settings","Expansions","Selected","getSelectedExpansionsArray","createSelector","selectedExpansions","filter","key","selectors","getAllSetsSelected","getHasStandaloneSet","some","getIsLoading","MainContentLoading","Reducer","combineReducers","arguments","length","undefined","action","allSetsSelected","newState","loop","Cmd","run","setToDb","args","successActionCreator","failActionCreator","payload","getFromDb","getExpansionNamesByType","getStandaloneExpansions","sort","getMiniExpansions","getPromos","a","b","promoA","promoB","Predefined","Custom","noOp","toggleSetup","setup","setupType","TOGGLE_SETUP","createCustomSetup","CREATE_CUSTOM_SETUP","shortid","generate","saveCustomSetup","SAVE_CUSTOM_SETUP","cancelEdit","CANCEL_EDIT_SETUP","editCustomSetup","EDIT_CUSTOM_SETUP","deleteCustomSetup","DELETE_CUSTOM_SETUP","SupplySetups_objectSpread","getPredefined","SupplySetups","getCustom","getPredefinedAsArray","predefined","getCustomAsArray","custom","getCustomAndPredefined","getAllAsArray","customAndPredefined","getAllExceptDefaultSets","allSets","getActiveSetups","makeGetCustomAndPredefined","_action$payload","isDirty","isNew","toConsumableArray","_state$Custom","rest","objectWithoutProperties","map","_toPropertyKey","_state$Custom2","createSlotList","amount","Array","from","getListOfAvailableEntity","selectedSets","entity","shuffleDeck","deck","availableCards","slots","getEntity","getRandomEntity","slot","i","card","result","availableEntities","Math","floor","getOperationString","join","thresholdValue","setRandomNemesis","expansions","SET_RANDOM","getNemesis","Nemesis","setCount","count","SET","getCount","Mages","Count","Recruited","getMages","setRandomMages","availableMages","createMageList","selectSetup","SELECT_SETUP","getSelectedSetup","Supply","Selection","getRandomCardsByType","tileSetups","cardType","cardSlots","_ref","blueprints","blueprint","filteredByCost","setupBlueprint","indexOf","filterByCost","createCardList","_ref2","Cards","RandomSetup","resetMarket","RESET","createMarket","CREATE","getCards","Selection_objectSpread","SupplySelection","_createSupply","gems","relics","spells","createSupply","RandomSetup_objectSpread","newStateWithDBWrite","setTurnOrderToDbSuccess","setTurnOrderToDbFailure","discard","started","init","INIT","draw","DRAW","newRound","NEW_ROUND","addToTop","cardId","ADD_TO_TOP","addToBottom","ADD_TO_BOTTOM","shuffleIntoDeck","SHUFFLE_INTO_DECK","SET_TURNORDER_TO_DB_SUCCESS","SET_TURNORDER_TO_DB_FAILURE","startGame","START_GAME","resetGame","RESET_GAME","getDeck","TurnOrder","ActiveGame","getDiscard","getHasStarted","INITIAL_PLAYER_SETUP","Mode","SelectedPlayerCount","SelectedSetup","setMode","mode","SET_MODE","selectPlayerCount","playerCountId","SELECT_PLAYER_COUNT","setupId","getMode","Configuration","getConfiguration","selectedSetup","adjustSetup","getAvailableCards","getSelectedPlayerCount","Configuration_objectSpread","activeGameActions","cardDrawn","ActiveGame_objectSpread","cardToAdd","find","cardToShuffle","newDeck","Main","getUserConfiguration","USER_CONFIGURATION_GET","ContentLoading","RootReducer","reduceReducers","list","SelectedExpansions","availableNemeses","ROUTES","Card","styled","MuiCard","withConfig","displayName","componentId","CardContent","MuiCardContent","Icon","props","theme","CardTypeIcon","React","memo","react_default","createElement","className","ExpansionName","Typography","Name","NemesisTile","NemesisTile_Card","NemesisTile_CardContent","NemesisTile_ExpansionName","NemesisTile_Name","variant","component","NemesisTile_CardTypeIcon","EmptyNemesisHint","ShuffleButton","Fab","NoSelectedExpansions","Typography_default","paragraph","mapDispatchToProps","Nemeses","hasStandaloneExpansionSelected","Fragment","Nemeses_NemesisTile","Nemeses_EmptyNemesisHint","components_ShuffleButton","onClick","components_NoSelectedExpansions","connect","MageCountPicker","selectedValue","handleAmountChange","Card_default","CardContent_default","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","Wrapper","Grid","CardTypeIcon_Icon","MageTile","MageTile_Wrapper","item","xs","md","MageTile_Card","MageTile_CardContent","MageTile_ExpansionName","MageTile_Name","MageTile_CardTypeIcon","MageList","MageList_MageGridWrapper","Grid_default","container","Mages_MageTile","EmptyMageListHint","setMageCount","setMages","mageCount","noMagesGeneratedYet","Mages_MageCountPicker","toString","e","parseInt","currentTarget","Mages_EmptyMageListHint","Mages_MageList","useExpandedHandling","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","createExpansionHandler","panel","event","StyledExpansionPanel","ExpansionPanel","StyledExpansionPanelSummary","ExpansionPanelSummary","Heading","children","expansionHandler","expansionKey","summary","ExpansionPanel_StyledExpansionPanel","ExpansionPanel_StyledExpansionPanelSummary","expandIcon","ExpandMore_default","components_Heading","ExpansionPanelDetails_default","ListWrapper","CARD_TYPES","THRESHOLD_OPERATIONS","SUPPLY_OPERATIONS","isCard","MODES","CardName","MarketTile_CardTypeIcon_Icon","CardInfoItem","ListItem","Info","InfoLabel","CostInfo","MarketTile_CardInfoItem","MarketTile_InfoLabel","MarketTile_Info","CostOperation","ExpansionInfo","MarketTile","tileSetup","assign","MarketTile_Card","toLowerCase","MarketTile_CardContent","MarketTile_CostOperation","MarketTile_CardName","List_default","MarketTile_ExpansionInfo","MarketTile_CostInfo","MarketTile_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","MarketOptionsWrapper","selected","main","TileList","TileListItem","SupplyName","SupplyPreview","clickHandler","_ref$selected","_ref$showName","showName","SupplyPreview_Wrapper","data-value","SupplyPreview_TileList","tile","index","SupplyPreview_TileListItem","SupplyPreview_SupplyName","MarketOptions","activeMarketSetups","allMarketSetups","Supply_MarketOptionsWrapper","components_SupplyPreview","dataset","_useExpandedHandling","components_ExpansionPanel","Supply_MarketOptions","Supply_SupplyList","DefaultCheckbox","checked","changeHandler","Checkbox_default","Item","_ref2$Component","Component","CheckboxList","items","style","marginTop","FormGroup_default","handleChange","CheckboxList_Item","renderCheckboxes","handleSelectAll","ActiveSets","standalones","miniExpansions","promos","expansionsToItems","marginBottom","components_CheckboxList","_useExpansionHandling","useExpansionHandling","Expansions_ActiveSets","SettingsSupplyPreview","_templateObject","CheckboxWithPreviewWrapper","CheckboxWithPreviewWrapper_templateObject","CheckboxWithPreview","Supply_CheckboxWithPreviewWrapper","Supply_SettingsSupplyPreview","InputField","TextField","InputField_templateObject","MuiFormControl","SelectField_templateObject","Select","MuiSelect","_templateObject2","SelectField","SelectField_Wrapper","SelectField_Select","SelectFieldsWrapper","SelectFieldsWrapper_templateObject","BluePrintWrapper","BluePrintWrapper_templateObject","CancelButton","IconButton_default","Cancel_default","StyledCancelButton","CancelButton_templateObject","renderInputFieldsByOperation","bluePrint","dispatch","types","includes","CustomSetupEdit_InputField","BluePrint_objectSpread","target","margin","valueA","valueB","BluePrint","CustomSetupEdit_BluePrintWrapper","CustomSetupEdit_CancelButton","CustomSetupEdit_SelectFieldsWrapper","CustomSetupEdit_SelectField","inputProps","TYPE","MenuItem_default","OPERATION","ListWrapper_templateObject","BluePrintList","bluePrintList","CustomSetupEdit_ListWrapper","Button_default","CustomSetupEdit_BluePrint","MainControlsWrapper","MainControlsWrapper_templateObject","MainControls","setupName","setSetupName","CustomSetupEdit_MainControlsWrapper","placeholder","MainControls_objectSpread","Save_default","div","Wrapper_templateObject","initialStateFromTiles","CustomSetupEdit_objectSpread","bluePrintReducer","CustomSetupEdit_toPropertyKey","CustomSetupEdit","_useReducer","useReducer","_useReducer2","bluePrints","reverse","CustomSetupEdit_Wrapper","CustomSetupEdit_MainControls","CustomSetupEdit_BluePrintList","CheckboxWithPreviewControls","CheckboxWithPreviewControls_templateObject","createSetup","editSetup","deleteSetup","CustomSetups","customSetups","customItems","Supply_CustomSetupEdit","Supply_CheckboxWithPreview","Supply_CheckboxWithPreviewControls","Edit_default","Delete_default","PredefinedSetups","predefinedSetups","predefinedItems","SetupSelectionWrapper","FormControl","SetupSelectionWrapper_templateObject","SetupSelection","Supply_SetupSelectionWrapper","Supply_CustomSetups","Supply_PredefinedSetups","Supply_SetupSelection","Settings_Expansions","Settings_Supply","Cell","MuiTableCell","RowWrapper","MuiTableRow","turnOrderCardColors","Row","DiscardTable_RowWrapper","DiscardTable_Cell","align","title","icons_index_es","Table","MuiTable","DiscardTable","DiscardTable_Table","TableBody_default","DiscardTable_Row","renderRows","drawCard","ActiveTurnOrder","size","TurnOrder_DiscardTable","CardNameDisplay","turnOrderSetup","TurnOrder_Card","gutterBottom","renderCardNames","ModeSelection","PlayerCountSelection","selectedPlayerCount","playerCount","renderSetupOptions","TurnOrderConfiguration","currentConfiguration","hasMoreThanOneVariant","TurnOrder_PlayerCountSelection","TurnOrder_SetupSelection","TurnOrder_ModeSelection","TurnOrder_CardNameDisplay","gameHasStarted","TurnOrder_TurnOrderConfiguration","HeaderPlaceholder","openDrawerMixin","css","Content_Wrapper_templateObject","unit","drawerIsOpen","isLoading","Content","_ROUTES$nemeses$ROUTE","route","Content_Wrapper","Content_HeaderPlaceholder","CircularProgress_default","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","Title","AppBar_templateObject","AppBar","AppBar_default","IconButton","MuiIconButton","MenuButton","MenuButton_Wrapper","MenuButton_IconButton","Menu_default","TopBar","currentLocation","toggleDrawer","TopBar_AppBar","Toolbar_default","disableGutters","TopBar_MenuButton","TopBar_Title","RouteItem","clickhandler","ListItem_default","button","ListItemIcon_default","ListItemText_default","Routes","locationhandler","components_RouteItem","Build_default","width","Header","AppInfo","GithHubLink","Link","GitHubLogo","Drawer","MuiDrawer","withStyles","paper","DrawerMenu","moveTo","DrawerMenu_Drawer","open","onClose","anchor","DrawerMenu_Header","ChevronLeft_default","Divider_default","components_Routes","DrawerMenu_AppInfo","process","GitHubLink","href","DrawerMenu_GitHubLogo","src","alt","MainApp","setCurrentLocation","_useState3","_useState4","setDrawerIsOpen","useEffect","components_TopBar","components_DrawerMenu","components_Content","App","styled_components_browser_esm","styles","App_Wrapper","CssBaseline_default","App_MainApp","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","store","enhancers","applyMiddleware","apply","install","composeEnhancers","compose","enhancedCreateStore","createStore","configureStore","generateClassName","createGenerateClassName","jss","src_objectSpread","jssPreset","insertionPoint","document","getElementById","ReactDOM","render","es","JssProvider_default","components_App","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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AAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,SAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,uBACND,GAAI,sBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,aACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,sBACND,GAAI,qBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,KAIZC,GAAI,CACFP,GAAI,KACJC,KAAM,gBACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,aACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,UAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,KAIZE,GAAI,CACFR,GAAI,KACJC,KAAM,mBACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,cACND,GAAI,gBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,OACND,GAAI,SAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,KAIZG,GAAI,CACFT,GAAI,KACJC,KAAM,eACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,eACND,GAAI,iBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,KACND,GAAI,OAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,KAIZI,GAAI,CACFV,GAAI,KACJC,KAAM,cACNC,KAAM,aACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,aACND,GAAI,aAEN,CACEI,UAAW,KACXH,KAAM,eACND,GAAI,eAEN,CACEI,UAAW,KACXH,KAAM,kBACND,GAAI,iBAEN,CACEI,UAAW,KACXH,KAAM,cACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,WACND,GAAI,YAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,MACND,GAAI,OAEN,CACEI,UAAW,KACXH,KAAM,cACND,GAAI,eAEN,CACEI,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,YACND,GAAI,aAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,uBACND,GAAI,sBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,KAIZK,GAAI,CACFX,GAAI,KACJC,KAAM,OACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,qBACND,GAAI,oBAEN,CACEI,UAAW,KACXH,KAAM,mBACND,GAAI,mBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,YAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,KAIZM,GAAI,CACFZ,GAAI,KACJC,KAAM,aACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,sBACND,GAAI,qBAEN,CACEI,UAAW,KACXH,KAAM,eACND,GAAI,iBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,YAGRT,MAAO,CACL,CACEW,KAAM,QACNE,UAAW,KACXH,KAAM,OACND,GAAI,OACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,KAIZO,SAAU,CACRb,GAAI,WACJC,KAAM,WACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,WACXH,KAAM,cACND,GAAI,cAEN,CACEI,UAAW,WACXH,KAAM,cACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,WACXH,KAAM,WACND,GAAI,aAGRT,MAAO,CACL,CACEW,KAAM,QACNE,UAAW,WACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,QACND,GAAI,QACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,WACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,KAIZQ,OAAQ,CACNd,GAAI,SACJC,KAAM,SACNC,KAAM,aACNC,QAAS,CACP,CACEC,UAAW,SACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,SACXH,KAAM,YACND,GAAI,aAEN,CACEI,UAAW,SACXH,KAAM,cACND,GAAI,cAEN,CACEI,UAAW,SACXH,KAAM,kBACND,GAAI,kBAEN,CACEI,UAAW,SACXH,KAAM,kBACND,GAAI,kBAEN,CACEI,UAAW,SACXH,KAAM,iBACND,GAAI,kBAGRK,MAAO,CACL,CACED,UAAW,SACXH,KAAM,eACND,GAAI,eAEN,CACEI,UAAW,SACXH,KAAM,gBACND,GAAI,gBAEN,CACEI,UAAW,SACXH,KAAM,gBACND,GAAI,gBAEN,CACEI,UAAW,SACXH,KAAM,cACND,GAAI,eAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,KAIZS,OAAQ,CACNf,GAAI,SACJC,KAAM,SACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,SACXH,KAAM,cACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,SACXH,KAAM,MACND,GAAI,OAEN,CACEI,UAAW,SACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,SACXH,KAAM,QACND,GAAI,UAGRT,MAAO,CACL,CACEW,KAAM,QACNE,UAAW,SACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,aACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,wBACND,GAAI,uBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,iBACND,GAAI,iBACJM,KAAM,KAIZU,GAAI,CACFhB,GAAI,KACJC,KAAM,iBACNC,KAAM,OACNC,QAAS,GACTE,MAAO,GACPd,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,KAIZW,GAAI,CACFjB,GAAI,KACJC,KAAM,YACNC,KAAM,aACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,iBACND,GAAI,iBAEN,CACEI,UAAW,KACXH,KAAM,eACND,GAAI,eAEN,CACEI,UAAW,KACXH,KAAM,qBACND,GAAI,oBAEN,CACEI,UAAW,KACXH,KAAM,YACND,GAAI,cAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,WACND,GAAI,YAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,YACND,GAAI,aAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,UAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,OACND,GAAI,OACJM,KAAM,GAER,CA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","file":"static/js/main.ed6228c0.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\nimport pink from '@material-ui/core/colors/pink'\n\nexport const muiTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nconst playerColors = {\n  player1: {\n    normal: '#8BC34A',\n    light: '#F1F8E9',\n  },\n  player2: {\n    normal: '#FF9800',\n    light: '#FFF3E0',\n  },\n  player3: {\n    normal: '#2196F3',\n    light: '#E3F2FD',\n  },\n  player4: {\n    normal: '#9C27B0',\n    light: '#F3E5F5',\n  },\n}\n\nexport const mainTheme = {\n  heading: {\n    fontSize: muiTheme.typography.pxToRem(15),\n  },\n  spacing: muiTheme.spacing,\n  drawerWidth: 240,\n  muiTransitions: {\n    appBarShift: muiTheme.transitions.create(['margin', 'width'], {\n      easing: muiTheme.transitions.easing.easeOut,\n      duration: muiTheme.transitions.duration.enteringScreen,\n    }),\n    content: muiTheme.transitions.create('margin', {\n      easing: muiTheme.transitions.easing.sharp,\n      duration: muiTheme.transitions.duration.leavingScreen,\n    }),\n    contentShift: muiTheme.transitions.create('margin', {\n      easing: muiTheme.transitions.easing.easeOut,\n      duration: muiTheme.transitions.duration.enteringScreen,\n    }),\n  },\n  colors: {\n    primary: muiTheme.palette.primary,\n    secondary: muiTheme.palette.secondary,\n    text: muiTheme.palette.text,\n    turnOrderCards: {\n      ...playerColors,\n      player12: {\n        normal: `linear-gradient(135deg, ${playerColors.player1.normal} 0%, ${\n          playerColors.player1.normal\n        } 50%, ${playerColors.player2.normal} 50%, ${\n          playerColors.player2.normal\n        } 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player1.light} 0%, ${\n          playerColors.player1.light\n        } 50%, ${playerColors.player2.light} 50%, ${\n          playerColors.player2.light\n        } 100%)`,\n      },\n      player34: {\n        normal: `linear-gradient(135deg, ${playerColors.player3.normal} 0%, ${\n          playerColors.player3.normal\n        } 50%, ${playerColors.player4.normal} 50%, ${\n          playerColors.player4.normal\n        } 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player3.light} 0%, ${\n          playerColors.player3.light\n        } 50%, ${playerColors.player4.light} 50%, ${\n          playerColors.player4.light\n        } 100%)`,\n      },\n      wild: {\n        normal: '#9E9E9E',\n        light: '#FAFAFA',\n      },\n      'wild-token': {\n        normal: `linear-gradient(135deg, ${playerColors.player1.normal} 0%, ${\n          playerColors.player1.normal\n        } 33%, ${playerColors.player2.normal} 33%, ${\n          playerColors.player2.normal\n        } 66%, ${playerColors.player3.normal} 66%, ${\n          playerColors.player3.normal\n        } 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player1.light} 0%, ${\n          playerColors.player1.light\n        } 33%, ${playerColors.player2.light} 33%, ${\n          playerColors.player2.light\n        } 66%, ${playerColors.player3.light} 66%, ${\n          playerColors.player3.light\n        } 100%)`,\n      },\n      nemesis: {\n        normal: '#f44336',\n        light: '#ffebee',\n      },\n      maelstrom: {\n        normal: '#795548',\n        light: '#EFEBE9',\n      },\n      blitz: {\n        normal: '#607D8B',\n        light: '#ECEFF1',\n      },\n    },\n    cards: {\n      gem: {\n        color: '#B39DDB',\n        background: '#EDE7F6',\n      },\n      relic: {\n        color: '#90CAF9',\n        background: '#E3F2FD',\n      },\n      spell: {\n        color: '#FFCC80',\n        background: '#FFF3E0',\n      },\n      nemesis: {\n        color: '#E0E0E0',\n      },\n      mage: {\n        color: '#E0E0E0',\n      },\n    },\n  },\n}\n\nexport type TurnOrderColors = typeof mainTheme.colors.turnOrderCards\n","import { IExpansionData } from '../types'\n\nexport const DATA: IExpansionData = {\n  NA: {\n    id: 'NA',\n    name: 'The New Age',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'NA',\n        name: 'Maggoth',\n        id: 'Maggoth',\n      },\n      {\n        expansion: 'NA',\n        name: 'Arachnos',\n        id: 'Arachnos',\n      },\n      {\n        expansion: 'NA',\n        name: 'Ageless Walker',\n        id: 'Ageless Walker',\n      },\n      {\n        expansion: 'NA',\n        name: 'Fenrix',\n        id: 'Fenrix',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'NA',\n        name: 'Sahala',\n        id: 'Sahala',\n      },\n      {\n        expansion: 'NA',\n        name: 'Gygar',\n        id: 'Gygar',\n      },\n      {\n        expansion: 'NA',\n        name: 'Soskel',\n        id: 'Soskel',\n      },\n      {\n        expansion: 'NA',\n        name: 'Taqren',\n        id: 'Taqren',\n      },\n      {\n        expansion: 'NA',\n        name: 'Talix',\n        id: 'Talix',\n      },\n      {\n        expansion: 'NA',\n        name: 'Rhia',\n        id: 'Rhia',\n      },\n      {\n        expansion: 'NA',\n        name: 'Claudia',\n        id: 'Claudia',\n      },\n      {\n        expansion: 'NA',\n        name: 'Lost',\n        id: 'Lost',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Lurking Sionite',\n        id: 'LurkingSionite',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Unrefined Blaststone',\n        id: 'UnrefinedBlaststone',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Exogranite',\n        id: 'Exogranite',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Recurring Jasper',\n        id: 'RecurringJasper',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Energized Rubidium',\n        id: 'EnergizedRubidium',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Resonant Pearl',\n        id: 'ResonantPearl',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Caged Fire',\n        id: 'CagedFire',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Galvanized Bauble',\n        id: 'GalvanizedBauble',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Aether Conduit',\n        id: 'AetherConduit',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Well of Energy',\n        id: 'WellOfEnergy',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Pain Conduit',\n        id: 'PainConduit',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Link Conduit',\n        id: 'LinkConduit',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Marble Galaxy',\n        id: 'MarbleGalaxy',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Deluge of Power',\n        id: 'DelugeOfPower',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Reverberating Shock',\n        id: 'ReverberatingShock',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Fatal Harmony',\n        id: 'FatalHarmony',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Bouncing Boom',\n        id: 'BouncingBoom',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Spirit Lift',\n        id: 'SpiritLift',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Tethered Darts',\n        id: 'Tethered Darts',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Force Amplifier',\n        id: 'ForceAmplifier',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Imbued Smash',\n        id: 'ImbuedSmash',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Pattern Strike',\n        id: 'PatternStrike',\n        cost: 7,\n      },\n    ],\n  },\n  IW: {\n    id: 'IW',\n    name: 'Into The Wild',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'IW',\n        name: 'Necroswarm',\n        id: 'Necroswarm',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'IW',\n        name: 'Inco',\n        id: 'Inco',\n      },\n      {\n        expansion: 'IW',\n        name: 'Razra',\n        id: 'Razra',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'IW',\n        name: 'Jeweled Brain',\n        id: 'JeweledBrain',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'IW',\n        name: 'Blast Sphere',\n        id: 'BlastSphere',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'IW',\n        name: 'Wound Mender',\n        id: 'WoundMender',\n        cost: 8,\n      },\n    ],\n  },\n  SD: {\n    id: 'SE',\n    name: 'Shattered Dreams',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'SD',\n        name: 'The Wailing',\n        id: 'The Wailing',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'SD',\n        name: 'Nook',\n        id: 'Nook',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'SD',\n        name: 'Olivinite',\n        id: 'Olivinite',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'SD',\n        name: 'Cache Glass',\n        id: 'CacheGlass',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'SD',\n        name: 'Reflective Conduit',\n        id: 'ReflectiveConduit',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'SD',\n        name: 'Will Weaver',\n        id: 'WillWeaver',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Breach Seeker',\n        id: 'BreachSeeker',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Crescendo Ray',\n        id: 'CrescendoRay',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Storm Vapors',\n        id: 'StormVapors',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Mantra of Strength',\n        id: 'MantraOfStrength',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Embody Flame',\n        id: 'EmbodyFlame',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Snap Ritual',\n        id: 'SnapRitual',\n        cost: 6,\n      },\n    ],\n  },\n  TA: {\n    id: 'TA',\n    name: 'The Ancients',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'TA',\n        name: 'The Wanderer',\n        id: 'The Wanderer',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'TA',\n        name: 'Mazra',\n        id: 'Mazra',\n      },\n      {\n        expansion: 'TA',\n        name: 'Qu',\n        id: 'Qu',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'TA',\n        name: 'Shining Fluorite',\n        id: 'ShiningFluorite',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TA',\n        name: 'Polyphase Turbine',\n        id: 'PolyphaseTurbine',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TA',\n        name: 'Breach Extractor',\n        id: 'BreachExtractor',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TA',\n        name: 'Focusing Conduit',\n        id: 'FocusingConduit',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TA',\n        name: 'Dual Flash',\n        id: 'DualFlash',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TA',\n        name: 'Dust Caller',\n        id: 'DustCaller',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TA',\n        name: 'Symbiotic Synapse',\n        id: 'SymbioticSynapse',\n        cost: 7,\n      },\n    ],\n  },\n  WE: {\n    id: 'WE',\n    name: 'War Eternal',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'WE',\n        name: 'Gate Witch',\n        id: 'GateWitch',\n      },\n      {\n        expansion: 'WE',\n        name: 'Hollow Crown',\n        id: 'HollowCrown',\n      },\n      {\n        expansion: 'WE',\n        name: 'Magus Of Cloaks',\n        id: 'MagusOfCloaks',\n      },\n      {\n        expansion: 'WE',\n        name: 'Umbra Titan',\n        id: 'UmbraTitan',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'WE',\n        name: 'Dezmodia',\n        id: 'Dezmodia',\n      },\n      {\n        expansion: 'WE',\n        name: 'Garu',\n        id: 'Garu',\n      },\n      {\n        expansion: 'WE',\n        name: 'Gex',\n        id: 'Gex',\n      },\n      {\n        expansion: 'WE',\n        name: 'Mazahaedron',\n        id: 'Mazahaedron',\n      },\n      {\n        expansion: 'WE',\n        name: 'MistWE',\n        id: 'MistWE',\n      },\n      {\n        expansion: 'WE',\n        name: 'Quilius',\n        id: 'Quilius',\n      },\n      {\n        expansion: 'WE',\n        name: 'Ulgimor',\n        id: 'Ulgimor',\n      },\n      {\n        expansion: 'WE',\n        name: 'Yan Magda',\n        id: 'YanMagda',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Erratic Ingot',\n        id: 'ErraticIngot',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Reduce To Ash',\n        id: 'ReduceToAsh',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Vortex Gauntlet',\n        id: 'VortexGauntlet',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Carbonize',\n        id: 'Carbonize',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Equilibrium',\n        id: 'Equilibrium',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Volcanic Glass',\n        id: 'VolcanicGlass',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Convection Field',\n        id: 'ConvectionField',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Jagged Lightning',\n        id: 'JaggedLightning',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Bloodstone Jewel',\n        id: 'BloodstoneJewel',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Kindle',\n        id: 'Kindle',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Thoughtform Familiar',\n        id: 'ThoughtformFamiliar',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Crystallize',\n        id: 'Crystallize',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Fiery Torrent',\n        id: 'FieryTorrent',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Celestial Spire',\n        id: 'CelestialSpire',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Conjure The Lost',\n        id: 'ConjureTheLost',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Nova Forge',\n        id: 'NovaForge',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Dread Diamond',\n        id: 'DreadDiamond',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Cairn Compass',\n        id: 'CairnCompass',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Scoria Slag',\n        id: 'ScoriaSlag',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Breach Ore',\n        id: 'BreachOre',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Fiend Catcher',\n        id: 'FiendCatcher',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Pyrotechnic Surge',\n        id: 'PyrotechnicSurge',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Aurora',\n        id: 'Aurora',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Conclave Scroll',\n        id: 'ConclaveScroll',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Primordial Fetish',\n        id: 'PrimordialFetish',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Frozen Magmite',\n        id: 'FrozenMagmite',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Mages Totem',\n        id: 'MagesTotem',\n        cost: 2,\n      },\n    ],\n  },\n  TV: {\n    id: 'TV',\n    name: 'Void',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'TV',\n        name: 'Knight Of Shackles',\n        id: 'KnightOfShackles',\n      },\n      {\n        expansion: 'TV',\n        name: 'Maiden Of Thorns',\n        id: 'MaidenOfThorns',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'TV',\n        name: 'Sparrow',\n        id: 'Sparrow',\n      },\n      {\n        expansion: 'TV',\n        name: 'XaxosTV',\n        id: 'XaxosTV',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'TV',\n        name: 'Fossilized Scarab',\n        id: 'FossilizedScarab',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Thermal Dart',\n        id: 'ThermalDart',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Resonate',\n        id: 'Resonate',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Conflagration',\n        id: 'Conflagration',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TV',\n        name: 'Dimensional Key',\n        id: 'DimensionalKey',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Inner Fire',\n        id: 'InnerFire',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Fulminate',\n        id: 'Fulminate',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TV',\n        name: 'Eternity Charm',\n        id: 'EternityCharm',\n        cost: 3,\n      },\n    ],\n  },\n  OD: {\n    id: 'OD',\n    name: 'Outer Dark',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'OD',\n        name: 'Thrice Dead Prophet',\n        id: 'ThriceDeadProphet',\n      },\n      {\n        expansion: 'OD',\n        name: 'Wraithmonger',\n        id: 'Wraithmonger',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'OD',\n        name: 'Indira',\n        id: 'Indira',\n      },\n      {\n        expansion: 'OD',\n        name: 'Remnant',\n        id: 'Remnant',\n      },\n    ],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Char',\n        id: 'Char',\n        cost: 8,\n      },\n      {\n        type: 'Gem',\n        expansion: 'OD',\n        name: 'Alien Element',\n        id: 'AlienElement',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Scorch',\n        id: 'Scorch',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Pyromancy',\n        id: 'Pyromancy',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Feedback Aura',\n        id: 'FeedbackAura',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Catalyst',\n        id: 'Catalyst',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'OD',\n        name: 'Pain Stone',\n        id: 'PainStone',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'OD',\n        name: 'Astral Cube',\n        id: 'AstralCube',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'OD',\n        name: 'Riddle Sphere',\n        id: 'RiddleSphere',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Nether Conduit',\n        id: 'NetherConduit',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'OD',\n        name: 'Haunted Berylite',\n        id: 'HauntedBerylite',\n        cost: 3,\n      },\n    ],\n  },\n  Nameless: {\n    id: 'Nameless',\n    name: 'Nameless',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'Nameless',\n        name: 'Blight Lord',\n        id: 'BlightLord',\n      },\n      {\n        expansion: 'Nameless',\n        name: 'Wayward One',\n        id: 'WaywardOne',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'Nameless',\n        name: 'Malastar',\n        id: 'Malastar',\n      },\n    ],\n    cards: [\n      {\n        type: 'Relic',\n        expansion: 'Nameless',\n        name: 'Molten Hammer',\n        id: 'MoltenHammer',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Radiance',\n        id: 'Radiance',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Blaze',\n        id: 'Blaze',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Scrying Bolt',\n        id: 'ScryingBolt',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Sages Brand',\n        id: 'SagesBrand',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Nameless',\n        name: 'Leeching Agate',\n        id: 'LeechingAgate',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Nameless',\n        name: 'Temporal Helix',\n        id: 'TemporalHelix',\n        cost: 7,\n      },\n    ],\n  },\n  Legacy: {\n    id: 'Legacy',\n    name: 'Legacy',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'Legacy',\n        name: 'Bladius',\n        id: 'Bladius',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Deathmind',\n        id: 'Deathmind',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Fungal Mesh',\n        id: 'FungalMesh',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Maelstrom Risen',\n        id: 'MaelstromRisen',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Spawning Horror',\n        id: 'SpawningHorror',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Xaxos Ascended',\n        id: 'XaxosAscended',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Green',\n        id: 'LegacyGreen',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Yellow',\n        id: 'LegacyYellow',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Orange',\n        id: 'LegacyOrange',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Blue',\n        id: 'LegacyBlue',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Branching Radite',\n        id: 'BranchingRadite',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Fire Chakram',\n        id: 'FireChakram',\n        cost: 2,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Brane Knife',\n        id: 'BraneKnife',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Fulmite Slab',\n        id: 'FulmiteSlab',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Gilded Marble',\n        id: 'GildedMarble',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Voltaic Relay',\n        id: 'VoltaicRelay',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Sparking Siphon',\n        id: 'SparkingSiphon',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Breach Communion',\n        id: 'BreachCommunion',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Infernal Mirror',\n        id: 'InfernalMirror',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Geophage',\n        id: 'Geophage',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Force Transfusion',\n        id: 'ForceTransfusion',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Conductive Grit',\n        id: 'ConductiveGrit',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Ancient Cyanolith',\n        id: 'AncientCyanolith',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Ethereal Hand',\n        id: 'EtherealHand',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Bending Beam',\n        id: 'BendingBeam',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Entangled Shard',\n        id: 'EntangledShard',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Arcane Salvo',\n        id: 'ArcaneSalvo',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Phased Portalite',\n        id: 'PhasedPortalite',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Pyro Geist',\n        id: 'PyroGeist',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Breach Flare',\n        id: 'BreachFlare',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Thunderous Oath',\n        id: 'ThunderousOath',\n        cost: 8,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Soothing Torporene',\n        id: 'SoothingTorporene',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Arcing Silicate',\n        id: 'ArcingSilicate',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Warping Haze',\n        id: 'WarpingHaze',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Incinerating Fist',\n        id: 'IncineratingFist',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Reality Stabilizer',\n        id: 'RealityStabilizer',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Breach Collision',\n        id: 'BreachCollision',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Fiery Conclusion',\n        id: 'FieryConclusion',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Starfire Frenzy',\n        id: 'StarfireFrenzy',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Crumbling Compound',\n        id: 'CrumblingCompound',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Prophetic Lens',\n        id: 'PropheticLens',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Adrenal Batteries',\n        id: 'AdrenalBatteries',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Refined Lumenium',\n        id: 'RefinedLumenium',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Void Mill',\n        id: 'VoidMill',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Gravity Node',\n        id: 'GravityNode',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Neural Wreath',\n        id: 'NeuralWreath',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Sphere OfInversion',\n        id: 'SphereOfInversion',\n        cost: 9,\n      },\n    ],\n  },\n  Depths: {\n    id: 'Depths',\n    name: 'Depths',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'Depths',\n        name: 'Horde Crone',\n        id: 'HordeCrone',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'Depths',\n        name: 'Nym',\n        id: 'Nym',\n      },\n      {\n        expansion: 'Depths',\n        name: 'Reeve',\n        id: 'Reeve',\n      },\n      {\n        expansion: 'Depths',\n        name: 'Zhana',\n        id: 'Zhana',\n      },\n    ],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Void Bond',\n        id: 'VoidBond',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Combustion',\n        id: 'Combustion',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Depths',\n        name: 'Vim Dynamo',\n        id: 'VimDynamo',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Disintegrating Scythe',\n        id: 'DisintegratingScythe',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Monstrous Inferno',\n        id: 'MonstrousInferno',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Devouring Shadow',\n        id: 'DevouringShadow',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Depths',\n        name: 'Banishing Topaz',\n        id: 'BanishingTopaz',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Depths',\n        name: 'Transmogrifier',\n        id: 'Transmogrifier',\n        cost: 4,\n      },\n    ],\n  },\n  BS: {\n    id: 'BS',\n    name: 'Buried Secrets',\n    type: 'mini',\n    nemeses: [],\n    mages: [],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Triplite Core',\n        id: 'TripliteCore',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Nerve Jab',\n        id: 'NerveJab',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Double Tap',\n        id: 'DoubleTap',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Oblivium Resin',\n        id: 'ObliviumResin',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Summonite',\n        id: 'Summonite',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Manifold Container',\n        id: 'ManifoldContainer',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Draining Touch',\n        id: 'DrainingTouch',\n        cost: 2,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Jolting Crust',\n        id: 'JoltingCrust',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Mentite Chunk',\n        id: 'MentiteChunk',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Soul Cords',\n        id: 'SoulCords',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Voidium Spike',\n        id: 'VoidiumSpike',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Precision Shot',\n        id: 'PrecisionShot',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Muted Lacosite',\n        id: 'MutedLacosite',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Blade Of Wisdom',\n        id: 'BladeOfWisdom',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Stunning Force',\n        id: 'StunningForce',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Flash Of Intellect',\n        id: 'FlashOfIntellect',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Scholars Opus',\n        id: 'ScholarsOpus',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Bottled Star',\n        id: 'BottledStar',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Burning Current',\n        id: 'BurningCurrent',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Psychic Eruption',\n        id: 'PsychicEruption',\n        cost: 8,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Living Gauntlet',\n        id: 'LivingGauntlet',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Shining Tetrite',\n        id: 'ShiningTetrite',\n        cost: 6,\n      },\n    ],\n  },\n  AE: {\n    id: 'AE',\n    name: 'Aeons End',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'AE',\n        name: 'Carapace Queen',\n        id: 'CarapaceQueen',\n      },\n      {\n        expansion: 'AE',\n        name: 'Crooked Mask',\n        id: 'CrookedMask',\n      },\n      {\n        expansion: 'AE',\n        name: 'Prince Of Gluttons',\n        id: 'PrinceOfGluttons',\n      },\n      {\n        expansion: 'AE',\n        name: 'Rageborne',\n        id: 'RageBorne',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'AE',\n        name: 'Adelheim',\n        id: 'Adelheim',\n      },\n      {\n        expansion: 'AE',\n        name: 'Brama',\n        id: 'Brama',\n      },\n      {\n        expansion: 'AE',\n        name: 'Jian',\n        id: 'Jian',\n      },\n      {\n        expansion: 'AE',\n        name: 'Kadir',\n        id: 'Kadir',\n      },\n      {\n        expansion: 'AE',\n        name: 'Lash',\n        id: 'Lash',\n      },\n      {\n        expansion: 'AE',\n        name: 'Mist',\n        id: 'Mist',\n      },\n      {\n        expansion: 'AE',\n        name: 'Phaedraxa',\n        id: 'Phaedraxa',\n      },\n      {\n        expansion: 'AE',\n        name: 'Xaxos',\n        id: 'Xaxos',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Diamond Cluster',\n        id: 'DiamondCluster',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Chaos Arc',\n        id: 'ChaosArc',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Ignite',\n        id: 'Ignite',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Essence Theft',\n        id: 'EssenceTheft',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Searing Ruby',\n        id: 'SearingRuby',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Feral Lightning',\n        id: 'FeralLightning',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Planar Insight',\n        id: 'PlanarInsight',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Spectral Echo',\n        id: 'SpectralEcho',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Burning Opal',\n        id: 'BurningOpal',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Consuming Void',\n        id: 'ConsumingVoid',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Unstable Prism',\n        id: 'UnstablePrism',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Clouded Sapphire',\n        id: 'CloudedSapphire',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Mages Talisman',\n        id: 'MagesTalisman',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Flexing Dagger',\n        id: 'FlexingDagger',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Lava Tendril',\n        id: 'LavaTendril',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Bottled Vortex',\n        id: 'BottledVortex',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Arcane Nexus',\n        id: 'ArcaneNexus',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Dark Fire',\n        id: 'DarkFire',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Phoenix Flame',\n        id: 'PhoenixFlame',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Jade',\n        id: 'Jade',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Amplify Vision',\n        id: 'AmplifyVision',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Vriswood Amber',\n        id: 'VriswoodAmber',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Blasting Staff',\n        id: 'BlastingStaff',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Sifters Pearl',\n        id: 'SiftersPearl',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Wildfire Whip',\n        id: 'WildfireWhip',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Focusing Orb',\n        id: 'FocusingOrb',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Oblivion Swell',\n        id: 'OblivionSwell',\n        cost: 5,\n      },\n    ],\n  },\n  'p-1': {\n    id: 'p-1',\n    name: 'Drown in Flames',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-1',\n        name: 'Drown in Flames',\n        id: 'DrownInFlames',\n        cost: 6,\n      },\n    ],\n  },\n  'p-2': {\n    id: 'p-2',\n    name: 'Fleeting Vision',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-2',\n        name: 'Fleeting Vision',\n        id: 'FleetingVision',\n        cost: 3,\n      },\n    ],\n  },\n  'p-3': {\n    id: 'p-3',\n    name: 'Splinter Missile',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-3',\n        name: 'Splinter Missile',\n        id: 'SplinterMissile',\n        cost: 5,\n      },\n    ],\n  },\n  'p-4': {\n    id: 'p-4',\n    name: 'Echo Stone',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'p-4',\n        name: 'Echo Stone',\n        id: 'EchoStone',\n        cost: 4,\n      },\n    ],\n  },\n  'p-5': {\n    id: 'p-5',\n    name: 'Thieving Spirit',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-5',\n        name: 'Thieving Spirit',\n        id: 'ThievingSpirit',\n        cost: 5,\n      },\n    ],\n  },\n  'p-6': {\n    id: 'p-6',\n    name: 'Fractured Quartz',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'p-6',\n        name: 'Fractured Quartz',\n        id: 'FracturedQuartz',\n        cost: 4,\n      },\n    ],\n  },\n  'p-7': {\n    id: 'p-7',\n    name: 'Rock Launcher',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Relic',\n        expansion: 'p-7',\n        name: 'Rock Launcher',\n        id: 'RockLauncher',\n        cost: 3,\n      },\n    ],\n  },\n  'p-8': {\n    id: 'p-8',\n    name: 'Abacus of Ignition',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Relic',\n        expansion: 'p-8',\n        name: 'Abacus of Ignition',\n        id: 'AbacusOfIgnition',\n        cost: 4,\n      },\n    ],\n  },\n  'p-9': {\n    id: 'p-9',\n    name: 'Illuminating Flame',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-9',\n        name: 'Illuminating Flame',\n        id: 'IlluminatingFlame',\n        cost: 6,\n      },\n    ],\n  },\n  'p-10': {\n    id: 'p-10',\n    name: 'Chronal Arc',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-10',\n        name: 'Chronal Arc',\n        id: 'ChronalArc',\n        cost: 7,\n      },\n    ],\n  },\n}\n","import { ITurnOrderSetups, ITurnOrderCard } from '../types'\n\nexport const TURNORDERCARDS: { [key: string]: ITurnOrderCard } = {\n  'player1-1': { id: 'player1-1', name: 'Player 1', type: 'player1' },\n  'player1-2': { id: 'player1-2', name: 'Player 1', type: 'player1' },\n  'player1-3': { id: 'player1-3', name: 'Player 1', type: 'player1' },\n  'player1-4': { id: 'player1-4', name: 'Player 1', type: 'player1' },\n\n  'player2-1': { id: 'player2-1', name: 'Player 2', type: 'player2' },\n  'player2-2': { id: 'player2-2', name: 'Player 2', type: 'player2' },\n\n  'player3-1': { id: 'player3-1', name: 'Player 3', type: 'player3' },\n  'player4-1': { id: 'player4-1', name: 'Player 4', type: 'player4' },\n\n  'player12-1': { id: 'player12-1', name: 'Player 1/2', type: 'player12' },\n  'player12-2': { id: 'player12-2', name: 'Player 1/2', type: 'player12' },\n  'player34-1': { id: 'player34-1', name: 'Player 3/4', type: 'player34' },\n  'player34-2': { id: 'player34-2', name: 'Player 3/4', type: 'player34' },\n\n  wild: { id: 'wild', name: 'Wild', type: 'wild' },\n  wildToken: { id: 'wildToken', name: 'Wild Token', type: 'wild-token' },\n\n  'nemesis-1': { id: 'nemesis-1', name: 'Nemesis', type: 'nemesis' },\n  'nemesis-2': { id: 'nemesis-2', name: 'Nemesis', type: 'nemesis' },\n\n  maelstrom: {\n    id: 'maelstrom',\n    name: 'Maelstrom Assault',\n    type: 'maelstrom',\n  },\n\n  blitz: {\n    id: 'blitz',\n    name: 'Blitz',\n    type: 'blitz',\n  },\n}\n\nexport const TURNORDERSETUPS: ITurnOrderSetups = {\n  onePlayer: {\n    id: 'onePlayer',\n    name: '1',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default (3 ToC)',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      '4toc': {\n        id: '4toc',\n        name: '4 ToC',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['player1-4'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  twoPlayers: {\n    id: 'twoPlayers',\n    name: '2',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player2-2'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  threePlayers: {\n    id: 'threePlayers',\n    name: '3',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['wild'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      wildToken: {\n        id: 'wildToken',\n        name: 'Wild Token',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['wildToken'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  fourPlayers: {\n    id: 'fourPlayers',\n    name: '4',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['player4-1'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      splitPlayers: {\n        id: 'splitPlayers',\n        name: 'Split Player Cards (1/2, 3/4)',\n        turnOrderCards: [\n          TURNORDERCARDS['player12-1'],\n          TURNORDERCARDS['player12-2'],\n          TURNORDERCARDS['player34-1'],\n          TURNORDERCARDS['player34-2'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n}\n","import { DATA } from './aeonsData'\nimport { MARKETSETUPS } from './marketSetups'\nimport { TURNORDERSETUPS, TURNORDERCARDS } from './turnOrderSetups'\n\nconst EXPANSIONS = Object.keys(DATA)\nconst DEFAULTSUPPLYCOUNT = 9\n\nexport default {\n  DATA,\n  DEFAULTSUPPLYCOUNT,\n  EXPANSIONS,\n  MARKETSETUPS,\n  TURNORDERSETUPS,\n  TURNORDERCARDS,\n}\n","import { IMarketSetups } from '../types'\n\nexport const MARKETSETUPS: IMarketSetups = {\n  market1Inc: {\n    id: 'market1Inc',\n    name: 'Market Setup 1 (inclusive)',\n    type: 'custom',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 4 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<=', threshold: 5 },\n      { type: 'Spell', operation: '<=', threshold: 5 },\n      { type: 'Spell', operation: '>=', threshold: 5 },\n      { type: 'Spell', operation: '>=', threshold: 5 },\n    ],\n  },\n  market1: {\n    id: 'market1',\n    name: 'Market Setup 1',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 4 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<', threshold: 5 },\n      { type: 'Spell', operation: '<', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n    ],\n  },\n  market2: {\n    id: 'market2',\n    name: 'Market Setup 2',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 3 },\n      { type: 'Gem', operation: '>', threshold: 3 },\n      { type: 'Gem', operation: '>', threshold: 3 },\n      { type: 'Relic', operation: '>', threshold: 4 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<', threshold: 6 },\n      { type: 'Spell', operation: '<', threshold: 6 },\n      { type: 'Spell', operation: '<', threshold: 6 },\n      { type: 'Spell', operation: '>', threshold: 6 },\n    ],\n  },\n  market3: {\n    id: 'market3',\n    name: 'Market Setup 3',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 4 },\n      { type: 'Gem', operation: 'OR', values: [4, 5] },\n      { type: 'Gem', operation: 'OR', values: [4, 5] },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '=', threshold: 3 },\n      { type: 'Spell', operation: '=', threshold: 4 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n    ],\n  },\n  market4: {\n    id: 'market4',\n    name: 'Market Setup 4',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '>', threshold: 4 },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: '<', threshold: 4 },\n      { type: 'Relic', operation: '>', threshold: 4 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: 'ANY' },\n    ],\n  },\n  market5: {\n    id: 'market5',\n    name: 'Market Setup 5',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '=', threshold: 2 },\n      { type: 'Gem', operation: '=', threshold: 3 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Gem', operation: '=', threshold: 5 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '=', threshold: 4 },\n      { type: 'Spell', operation: '=', threshold: 5 },\n      { type: 'Spell', operation: '=', threshold: 6 },\n      { type: 'Spell', operation: '>', threshold: 6 },\n    ],\n  },\n  market6: {\n    id: 'market6',\n    name: 'Market Setup 6',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '=', threshold: 3 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Relic', operation: '<', threshold: 4 },\n      { type: 'Relic', operation: '>', threshold: 4 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: 'OR', values: [3, 4] },\n      { type: 'Spell', operation: 'OR', values: [5, 6] },\n      { type: 'Spell', operation: 'OR', values: [5, 6] },\n      { type: 'Spell', operation: '>', threshold: 6 },\n    ],\n  },\n  random: {\n    id: 'random',\n    name: 'Random Setup (Default)',\n    type: 'official',\n    default: true, // this flag removes the setup from the settings, so it will always be active\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n    ],\n  },\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { RootState } from '../../'\n\nconst EXPANSIONS_DB_KEY = 'expansions'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{ [key: string]: boolean }>\nexport const initialState: State = config.EXPANSIONS.reduce(\n  (acc, set) => ({ ...acc, [set]: false }),\n  {}\n)\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/SelectedExpansions/TOGGLE_ALL',\n  TOGGLE_EXPANSION = 'Settings/Expansions/SelectedExpansions/TOGGLE_EXPANSION',\n  SET_TO_DB = 'Settings/Expansions/SelectedExpansions/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/Expansions/SelectedExpansions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/Expansions/SelectedExpansions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleExpansion: (expansion: string) =>\n    createAction(ActionTypes.TOGGLE_EXPANSION, expansion),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nconst allSetsAreSelected = (state: State) =>\n  Object.values(state).every(val => val === true)\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      const allSetsSelected = allSetsAreSelected(state)\n      const newState = config.EXPANSIONS.reduce(\n        (acc, set) => ({ ...acc, [set]: !allSetsSelected }),\n        {}\n      )\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [EXPANSIONS_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.TOGGLE_EXPANSION: {\n      const newState = { ...state, [action.payload]: !state[action.payload] }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [EXPANSIONS_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [EXPANSIONS_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return action.payload || initialState\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedExpansionsState = (state: RootState) =>\n  state.Settings.Expansions.Selected\n\nconst getSelectedExpansionsArray = createSelector(\n  [getSelectedExpansionsState],\n  selectedExpansions =>\n    Object.keys(selectedExpansions).filter(key => selectedExpansions[key])\n)\n\nconst getAllSetsSelected = createSelector(\n  [getSelectedExpansionsState],\n  selectedExpansions => allSetsAreSelected(selectedExpansions)\n)\n\nconst getHasStandaloneSet = createSelector(\n  [getSelectedExpansionsArray],\n  selectedExpansions =>\n    selectedExpansions.some(\n      expansion => config.DATA[expansion].type === 'standalone'\n    )\n)\n\nexport const selectors = {\n  getSelectedExpansionsState,\n  getSelectedExpansionsArray,\n  getAllSetsSelected,\n  getHasStandaloneSet,\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { RootState } from '../'\nimport * as SelectedExpansions from '../Settings/Expansions/Selected'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<boolean>\nexport const initialState = false\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = SelectedExpansions.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB: {\n      return true\n    }\n\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_SUCCESS:\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return false\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getIsLoading = (state: RootState) => state.MainContentLoading\n\nexport const selectors = {\n  getIsLoading,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport config from '../../../../config'\nimport * as Selected from './Selected'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Selected: Selected.State\n}\n\nexport const initialState = {\n  Selected: Selected.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = Selected.Action\n\nexport const actions = {\n  Selected: Selected.actions,\n}\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = combineReducers<State, Action>({\n  Selected: Selected.Reducer,\n})\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getExpansionNamesByType = (type: string) =>\n  config.EXPANSIONS.filter(expansion => config.DATA[expansion].type === type)\n\nexport const selectors = {\n  getStandaloneExpansions: getExpansionNamesByType('standalone').sort(),\n  getMiniExpansions: getExpansionNamesByType('mini').sort(),\n  getPromos: getExpansionNamesByType('promo').sort((a, b) => {\n    const promoA = config.DATA[a].name\n    const promoB = config.DATA[b].name\n\n    if (promoA < promoB) {\n      return -1\n    }\n\n    if (promoA > promoB) {\n      return 1\n    }\n\n    return 0\n  }),\n  Selected: Selected.selectors,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport shortid from 'shortid'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\nconst SUPPLY_DB_KEY = 'supplySetups-1.6' // FIXME this is a quickfix, see https://github.com/on3iro/aeons-end-randomizer/issues/138\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Predefined: types.IMarketSetups\n  Custom: types.IMarketSetups\n}\nexport const initialState: State = {\n  Predefined: config.MARKETSETUPS,\n  Custom: {},\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/SupplySetups/TOGGLE_ALL',\n  TOGGLE_SETUP = 'Settings/SupplySetups/TOGGLE_SETUP',\n  CREATE_CUSTOM_SETUP = 'Settings/SupplySetups/CREATE_CUSTOM_SETUP',\n  SAVE_CUSTOM_SETUP = 'Settings/SupplySetups/SAVE_CUSTOM_SETUP',\n  CANCEL_EDIT_SETUP = 'Settings/SupplySetups/CANCEL_EDIT_SETUP',\n  EDIT_CUSTOM_SETUP = 'Settings/SupplySetups/EDIT_CUSTOM_SETUP',\n  DELETE_CUSTOM_SETUP = 'Settings/SupplySetups/DELETE_CUSTOM_SETUP',\n  SET_TO_DB = 'Settings/SupplySetups/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/SupplySetups/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/SupplySetups/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/SupplySetups/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/SupplySetups/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/SupplySetups/FETCH_FROM_DB_FAILURE',\n}\n\ntype SetupType = 'Predefined' | 'Custom'\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleSetup: (setup: string, setupType: SetupType) =>\n    createAction(ActionTypes.TOGGLE_SETUP, { setup, setupType }),\n  createCustomSetup: () =>\n    createAction(ActionTypes.CREATE_CUSTOM_SETUP, shortid.generate()),\n  saveCustomSetup: (setup: types.IMarketSetup) =>\n    createAction(ActionTypes.SAVE_CUSTOM_SETUP, setup),\n  cancelEdit: (id: string) => createAction(ActionTypes.CANCEL_EDIT_SETUP, id),\n  editCustomSetup: (id: string) =>\n    createAction(ActionTypes.EDIT_CUSTOM_SETUP, id),\n  deleteCustomSetup: (id: string) =>\n    createAction(ActionTypes.DELETE_CUSTOM_SETUP, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nconst allSetsAreSelected = (state: State) =>\n  Object.values({ ...state.Predefined, ...state.Custom }).every(\n    val => val.active\n  )\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      const allSetsSelected = allSetsAreSelected(state)\n      const newPredefined = Object.values(state.Predefined).reduce(\n        (acc, setup) => ({\n          ...acc,\n          [setup.id]: {\n            ...setup,\n            active: setup.default ? true : !allSetsSelected,\n          },\n        }),\n        {}\n      )\n      const newCustom = Object.values(state.Custom).reduce(\n        (acc, setup) => ({\n          ...acc,\n          [setup.id]: { ...setup, active: !allSetsSelected },\n        }),\n        {}\n      )\n      const newState = { Predefined: newPredefined, Custom: newCustom }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.TOGGLE_SETUP: {\n      const { setup, setupType } = action.payload\n      const newState = {\n        ...state,\n        [setupType]: {\n          ...state[setupType],\n          [setup]: {\n            ...state[setupType][setup],\n            active: !state[setupType][setup].active,\n          },\n        },\n      }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [SUPPLY_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return action.payload || initialState\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    case ActionTypes.CREATE_CUSTOM_SETUP: {\n      const id = action.payload\n      return {\n        ...state,\n        Custom: {\n          [id]: {\n            id,\n            name: '',\n            type: 'custom',\n            active: false,\n            tiles: [],\n            isDirty: true,\n            isNew: true,\n          },\n          ...state.Custom,\n        },\n      }\n    }\n\n    case ActionTypes.SAVE_CUSTOM_SETUP: {\n      const setup = action.payload\n      // Because we currently do not have a specific mapping from Blueprints\n      // to actual cards in the supply it is important,\n      // that we keep the order of Gem -> Relic -> Spell for supply sets.\n      const tiles = [...setup.tiles].sort((a, b) => {\n        if (a.type === 'Gem') {\n          return -1\n        }\n\n        if (a.type === 'Relic' && b.type === 'Spell') {\n          return -1\n        }\n\n        return 1\n      })\n\n      const newState = {\n        ...state,\n        Custom: {\n          ...state.Custom,\n          [setup.id]: {\n            ...setup,\n            tiles,\n            isNew: false,\n            isDirty: false,\n          },\n        },\n      }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.EDIT_CUSTOM_SETUP: {\n      const id = action.payload\n\n      return {\n        ...state,\n        Custom: {\n          ...state.Custom,\n          [id]: {\n            ...state.Custom[id],\n            isDirty: true,\n          },\n        },\n      }\n    }\n\n    case ActionTypes.CANCEL_EDIT_SETUP: {\n      const id = action.payload\n\n      const { [id]: setup, ...rest } = state.Custom\n\n      if (setup.isNew) {\n        return { ...state, Custom: { ...rest } }\n      }\n\n      return {\n        ...state,\n        Custom: {\n          ...rest,\n          [id]: {\n            ...setup,\n            isDirty: false,\n          },\n        },\n      }\n    }\n\n    // FIXME should prompt the user if he really wants to delete the setup\n    case ActionTypes.DELETE_CUSTOM_SETUP: {\n      const id = action.payload\n\n      const { [id]: setup, ...rest } = state.Custom\n      const newState = { ...state, Custom: { ...rest } }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getState = (state: RootState) => state.Settings.SupplySetups\nconst getPredefined = (state: RootState) =>\n  state.Settings.SupplySetups.Predefined\nconst getCustom = (state: RootState) => state.Settings.SupplySetups.Custom\n\nconst getPredefinedAsArray = createSelector(\n  [getPredefined],\n  predefined => Object.values(predefined).filter(setup => !setup.default)\n)\n\nconst getCustomAsArray = createSelector(\n  [getCustom],\n  custom => Object.values(custom).filter(setup => !setup.default)\n)\n\nconst getCustomAndPredefined = createSelector(\n  [getPredefined, getCustom],\n  (predefined, custom) => ({ ...predefined, ...custom })\n)\n\nconst getAllAsArray = createSelector(\n  [getCustomAndPredefined],\n  customAndPredefined => Object.values(customAndPredefined)\n)\n\nconst makeGetCustomAndPredefined = () => getCustomAndPredefined\n\nconst getAllExceptDefaultSets = createSelector(\n  [getAllAsArray],\n  allSets => allSets.filter(set => !set.default)\n)\n\nconst getActiveSetups = createSelector(\n  [getAllAsArray],\n  allSets => allSets.filter(setup => setup.active)\n)\n\nconst getAllSetsSelected = createSelector(\n  [getState],\n  state => allSetsAreSelected(state)\n)\n\nexport const selectors = {\n  getActiveSetups,\n  getAllAsArray,\n  getAllExceptDefaultSets,\n  getAllSetsSelected,\n  getCustom,\n  getCustomAndPredefined,\n  getCustomAsArray,\n  getPredefined,\n  getPredefinedAsArray,\n  makeGetCustomAndPredefined,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { ICreature } from '../../../types'\nimport { RootState } from '../'\nimport { getListOfAvailableEntity, getRandomEntity } from '../../helpers'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<ICreature> | undefined\nexport const initialState: State = undefined\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Nemesis/SET_RANDOM',\n}\n\nexport const actions = {\n  setRandomNemesis: (expansions: ReadonlyArray<string>) =>\n    createAction(ActionTypes.SET_RANDOM, expansions),\n  noOp: () => createAction('NOOP'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const expansions = action.payload\n      const availableNemeses = getListOfAvailableEntity(expansions, 'nemeses')\n      return getRandomEntity(availableNemeses)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getNemesis = (state: RootState) => state.Nemesis\n\nexport const selectors = {\n  getNemesis,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Expansions from './Expansions'\nimport * as SupplySetups from './SupplySetups'\n\nexport type State = {\n  Expansions: Expansions.State\n  SupplySetups: SupplySetups.State\n}\n\nexport type Action = Expansions.Action | SupplySetups.Action\n\nexport const actions = {\n  Expansions: Expansions.actions,\n  SupplySetups: SupplySetups.actions,\n}\n\nexport const selectors = {\n  Expansions: Expansions.selectors,\n  SupplySetups: SupplySetups.selectors,\n}\n\nexport const initialState = {\n  Expansions: Expansions.initialState,\n  SupplySetups: SupplySetups.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Expansions: Expansions.Reducer,\n  SupplySetups: SupplySetups.Reducer,\n})\n","import config from '../config'\nimport * as types from '../types'\n\nexport const createSlotList = (\n  amount: number\n): Array<types.IEmptyBluePrint> => {\n  return Array.from(\n    { length: amount },\n    (): types.IEmptyBluePrint => ({ type: 'EMPTY', operation: 'NoOp' })\n  )\n}\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = [ \"AE\", \"WE\" ]\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ {...}, ...]\n */\nexport const getListOfAvailableEntity = (\n  selectedSets: ReadonlyArray<string>,\n  entity: types.EntityType\n) =>\n  selectedSets.reduce(\n    (\n      acc: Array<types.ICard | types.ICreature>,\n      expansion: string\n    ): Array<types.ICard | types.ICreature> => {\n      return [...acc, ...config.DATA[expansion][entity]]\n    },\n    []\n  )\n\nexport const isCardArray = (\n  entityList: Array<types.ICard | types.ICreature>\n): entityList is Array<types.ICard> => {\n  return (entityList[0] as types.ICard).name !== undefined\n}\n\n// TODO Refactor turnorder cards and mages (code duplication)\ntype TurnOrderListReductionResult = {\n  availableCards: types.ITurnOrderCard[]\n  result: types.ITurnOrderCard[]\n}\n\nexport const createTurnOrderCardList = (\n  availableCards: types.ITurnOrderCard[],\n  slots: types.ITurnOrderCard[],\n  getEntity: <T>(list: Array<T>) => T\n): TurnOrderListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: TurnOrderListReductionResult,\n      slot: types.ITurnOrderCard,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(acc.availableCards) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [...acc.result, card],\n      }\n    },\n    { availableCards, result: [] }\n  )\n\n  return result\n}\n\ntype MageListReductionResult = {\n  availableMages: types.ICreature[]\n  result: types.ICreature[]\n}\n\nexport const createMageList = (\n  availableMages: types.ICreature[],\n  slots: Array<types.Slot>,\n  getEntity: <T>(list: Array<T>) => T\n): MageListReductionResult => {\n  const result = slots.reduce(\n    (acc: MageListReductionResult, slot: types.Slot, i: number) => {\n      // If no entity is left, simply return the actual empty slot\n      const mage = getEntity(acc.availableMages) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingMages = acc.availableMages.filter(\n        entity => entity.id !== mage.id\n      )\n\n      return {\n        availableMages: remainingMages,\n        result: [...acc.result, mage],\n      }\n    },\n    { availableMages, result: [] }\n  )\n\n  return result\n}\n\nexport const shuffleDeck = (\n  deck: types.ITurnOrderCard[]\n): types.ITurnOrderCard[] => {\n  return createTurnOrderCardList(deck, deck, getRandomEntity).result\n}\n\n/**\n * Gets a random value from a list. (The wording of entities is just used for semantic context)\n */\nexport const getRandomEntity = <E>(availableEntities: Array<E>) =>\n  availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\nexport const getOperationString = (\n  operation: types.Operation,\n  values?: number[],\n  threshold?: number\n) => {\n  if (operation === 'OR' && values) {\n    return values.join('/')\n  }\n\n  const thresholdValue = threshold ? threshold : ''\n\n  return `${operation} ${thresholdValue}`\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type MageCount = 1 | 2 | 3 | 4\nexport type State = MageCount\nexport const initialState: State = 1\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET = 'Mages/Count/SET',\n}\n\nexport const actions = {\n  setCount: (count: MageCount) => createAction(ActionTypes.SET, count),\n  noOp: () => createAction('NOOP'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCount = (state: RootState) => state.Mages.Count\n\nexport const selectors = {\n  getCount,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { ICreature } from '../../../../types'\nimport { RootState } from '../../'\nimport {\n  createSlotList,\n  createMageList,\n  getListOfAvailableEntity,\n  getRandomEntity,\n} from '../../../helpers'\n\nimport { MageCount } from '../Count'\n\n///////////\n// STATE //\n///////////\n\nexport type State = ReadonlyArray<ICreature>\nexport const initialState: State = []\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Mages/Recruited/SET_RANDOM',\n}\n\nexport const actions = {\n  setRandomMages: (expansions: ReadonlyArray<string>, count: MageCount) =>\n    createAction(ActionTypes.SET_RANDOM, { expansions, count }),\n  noOp: () => createAction('NOOP'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const { expansions, count } = action.payload\n      const availableMages = getListOfAvailableEntity(expansions, 'mages')\n      const slotList = createSlotList(count)\n      const { result } = createMageList(\n        availableMages,\n        slotList,\n        getRandomEntity\n      )\n      return result\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMages = (state: RootState) => state.Mages.Recruited\n\nexport const selectors = {\n  getMages,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Count from './Count'\nimport * as Recruited from './Recruited'\n\nexport type State = {\n  Count: Count.State\n  Recruited: Recruited.State\n}\n\nexport type Action = Count.Action | Recruited.Action\n\nexport const selectors = {\n  Count: Count.selectors,\n  Recruited: Recruited.selectors,\n}\n\nexport const actions = {\n  Count: Count.actions,\n  Recruited: Recruited.actions,\n}\n\nexport const initialState = {\n  Count: Count.initialState,\n  Recruited: Recruited.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Count: Count.Reducer,\n  Recruited: Recruited.Reducer,\n})\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Selected: types.IMarketSetup\n}>\nexport const initialState: State = {\n  // FIXME we should ensure with typescript, that the 'default: true' property is not\n  // optional for default state here\n  Selected: config.MARKETSETUPS['random'],\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SELECT_SETUP = 'Supply/Selection/SELECT_SETUP',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  selectSetup: (setup: Readonly<types.IMarketSetup>) =>\n    createAction(ActionTypes.SELECT_SETUP, setup),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SELECT_SETUP: {\n      return {\n        ...state,\n        Selected: action.payload,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedSetup = (state: RootState) => state.Supply.Selection.Selected\n\nexport const selectors = {\n  getSelectedSetup,\n}\n","import { ICard, IBluePrint, CardType } from '../../../../types'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity,\n  isCardArray,\n} from '../../../helpers'\n\ntype CardListReduceResult = {\n  availableCards: ICard[]\n  result: ICard[]\n}\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n */\nconst filterByCost = (card: ICard, setupBlueprint: IBluePrint) => {\n  switch (setupBlueprint.operation) {\n    case '<': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost < setupBlueprint.threshold\n    }\n    case '>': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost > setupBlueprint.threshold\n    }\n    case '<=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost <= setupBlueprint.threshold\n    }\n    case '>=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost >= setupBlueprint.threshold\n    }\n    case '=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost === setupBlueprint.threshold\n    }\n    case 'OR': {\n      if (!setupBlueprint.values) return true\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nconst createCardList = (\n  availableCards: ICard[],\n  blueprints: Array<IBluePrint>,\n  getEntity: <T>(list: Array<T>) => T\n): CardListReduceResult =>\n  blueprints.reduce(\n    (acc: CardListReduceResult, blueprint: IBluePrint, i: number) => {\n      const filteredByCost = acc.availableCards.filter(card =>\n        filterByCost(card, blueprint)\n      )\n\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(filteredByCost) || blueprint\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [...acc.result, card],\n      }\n    },\n    { availableCards, result: [] }\n  )\n\n/**\n * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n * The amount of cards generated is determined by the amount of tileSetups matching\n * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n * specified type is \"Gem\" as well, a list of two cards will be created.\n *\n * return List<Card>\n */\nconst getRandomCardsByType = (\n  availableCards: ReadonlyArray<ICard>,\n  tileSetups: ReadonlyArray<IBluePrint>,\n  cardType: CardType\n) => {\n  const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n  const availableCardsOfType = availableCards.filter(\n    ({ type }) => type === cardType\n  )\n  return createCardList(availableCardsOfType, cardSlots, getRandomEntity)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n */\nexport const createSupply = (\n  selectedExpansions: ReadonlyArray<string>,\n  tileSetups: ReadonlyArray<IBluePrint>\n) => {\n  const availableCards = getListOfAvailableEntity(selectedExpansions, 'cards')\n\n  if (!isCardArray(availableCards)) {\n    return {\n      gems: { result: [] },\n      relics: { result: [] },\n      spells: { result: [] },\n    }\n  }\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, 'Gem')\n  const relics = getRandomCardsByType(availableCards, tileSetups, 'Relic')\n  const spells = getRandomCardsByType(availableCards, tileSetups, 'Spell')\n\n  return { gems, relics, spells }\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { Slot, ICard } from '../../../../types'\nimport { createSlotList } from '../../../helpers'\nimport config from '../../../../config'\nimport { RootState } from '../../'\nimport { createSupply } from './helpers'\nimport * as SupplySelection from '../Selection'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Cards: ReadonlyArray<Slot | ICard>\n}>\nexport const initialState: State = {\n  Cards: createSlotList(config.DEFAULTSUPPLYCOUNT),\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  RESET = 'Supply/RandomSetup/RESET',\n  CREATE = 'Supply/RandomSetup/CREATE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  resetMarket: () => createAction(ActionTypes.RESET),\n  createMarket: (\n    expansions: ReadonlyArray<string>,\n    tiles: ReadonlyArray<Slot>\n  ) => createAction(ActionTypes.CREATE, { expansions, tiles }),\n}\n\nexport type Action = ActionsUnion<typeof actions> | SupplySelection.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SupplySelection.ActionTypes.SELECT_SETUP:\n    case ActionTypes.RESET: {\n      return initialState\n    }\n\n    case ActionTypes.CREATE: {\n      const { expansions, tiles } = action.payload\n      const { gems, relics, spells } = createSupply(expansions, tiles)\n      return {\n        ...state,\n        Cards: [...gems.result, ...relics.result, ...spells.result],\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCards = (state: RootState) => state.Supply.RandomSetup.Cards\n\nexport const selectors = {\n  getCards,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Selection from './Selection'\nimport * as RandomSetup from './RandomSetup'\n\nexport type State = {\n  Selection: Selection.State\n  RandomSetup: RandomSetup.State\n}\n\nexport type Action = Selection.Action | RandomSetup.Action\n\nexport const actions = {\n  Selection: Selection.actions,\n  RandomSetup: RandomSetup.actions,\n}\n\nexport const selectors = {\n  Selection: Selection.selectors,\n  RandomSetup: RandomSetup.selectors,\n}\n\nexport const initialState = {\n  Selection: Selection.initialState,\n  RandomSetup: RandomSetup.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Selection: Selection.Reducer,\n  RandomSetup: RandomSetup.Reducer,\n})\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport { RootState } from '../../'\nimport { ITurnOrderCard } from '../../../../types'\nimport { shuffleDeck } from '../../../helpers'\n\nexport const TURNORDER_GAME_DB_KEY = 'turnOrderGameState'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run<Action>(setToDb, {\n      args: [TURNORDER_GAME_DB_KEY, newState],\n      successActionCreator: actions.setTurnOrderToDbSuccess,\n      failActionCreator: actions.setTurnOrderToDbFailure,\n    })\n  )\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  deck: Array<ITurnOrderCard>\n  discard: Array<ITurnOrderCard>\n  started: boolean\n}\nexport const initialState: State = {\n  deck: [],\n  discard: [],\n  started: false,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  INIT = 'TurnOrder/ActiveGame/INIT',\n  DRAW = 'TurnOrder/ActiveGame/DRAW',\n  NEW_ROUND = 'TurnOrder/ActiveGame/NEW_ROUND',\n  ADD_TO_TOP = 'TurnOrder/ActiveGame/ADD_TO_TOP',\n  ADD_TO_BOTTOM = 'TurnOrder/ActiveGame/ADD_TO_BOTTOM',\n  SHUFFLE_INTO_DECK = 'TurnOrder/ActiveGame/SHUFFLE_INTO_DECK',\n  SET_TURNORDER_TO_DB_SUCCESS = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_SUCCESS',\n  SET_TURNORDER_TO_DB_FAILURE = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_FAILURE',\n  START_GAME = 'TurnOrder/ActiveGame/START_GAME',\n  RESET_GAME = 'TurnOrder/ActiveGame/RESET_GAME',\n  FETCH_FROM_DB = 'TurnOrder/ActiveGame/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/ActiveGame/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/ActiveGame/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  init: (state: State) => createAction(ActionTypes.INIT, state),\n  draw: () => createAction(ActionTypes.DRAW),\n  newRound: (turnOrderCards: ITurnOrderCard[]) =>\n    createAction(ActionTypes.NEW_ROUND, turnOrderCards),\n  addToTop: (cardId: string) => createAction(ActionTypes.ADD_TO_TOP, cardId),\n  addToBottom: (cardId: string) =>\n    createAction(ActionTypes.ADD_TO_BOTTOM, cardId),\n  shuffleIntoDeck: (cardId: string) =>\n    createAction(ActionTypes.SHUFFLE_INTO_DECK, cardId),\n  setTurnOrderToDbSuccess: () =>\n    createAction(ActionTypes.SET_TURNORDER_TO_DB_SUCCESS),\n  setTurnOrderToDbFailure: () =>\n    createAction(ActionTypes.SET_TURNORDER_TO_DB_FAILURE),\n  startGame: (turnOrderCards: ITurnOrderCard[]) =>\n    createAction(ActionTypes.START_GAME, turnOrderCards),\n  resetGame: () => createAction(ActionTypes.RESET_GAME),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.INIT: {\n      return action.payload\n    }\n\n    case ActionTypes.DRAW: {\n      const { deck } = state\n\n      if (deck.length === 0) return state\n\n      const cardDrawn = deck[deck.length - 1]\n\n      const newState = {\n        ...state,\n        deck: deck.filter(card => card.id !== cardDrawn.id),\n        discard: [cardDrawn, ...state.discard],\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.NEW_ROUND: {\n      const newState = {\n        ...state,\n        deck: shuffleDeck(action.payload),\n        discard: [],\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_TOP: {\n      const cardId = action.payload\n      const cardToAdd = state.discard.find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [...state.deck, cardToAdd],\n        discard: state.discard.filter(card => card.id !== cardId),\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_BOTTOM: {\n      const cardId = action.payload\n      const cardToAdd = state.discard.find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [cardToAdd, ...state.deck],\n        discard: state.discard.filter(card => card.id !== cardId),\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.SHUFFLE_INTO_DECK: {\n      const cardId = action.payload\n      const cardToShuffle = state.discard.find(card => card.id === cardId)\n\n      if (!cardToShuffle) return state\n\n      const newDeck = [...state.deck, cardToShuffle]\n      const shuffledDeck = shuffleDeck(newDeck)\n\n      const newState = {\n        ...state,\n        deck: shuffledDeck,\n        discard: state.discard.filter(card => card.id !== cardId),\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.START_GAME: {\n      return newStateWithDBWrite({\n        started: true,\n        deck: shuffleDeck(action.payload),\n        discard: [],\n      })\n    }\n\n    case ActionTypes.RESET_GAME: {\n      return newStateWithDBWrite({\n        started: false,\n        deck: [],\n        discard: [],\n      })\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [TURNORDER_GAME_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getDeck = (state: RootState) => state.TurnOrder.ActiveGame.deck\nconst getDiscard = (state: RootState) => state.TurnOrder.ActiveGame.discard\nconst getHasStarted = (state: RootState) => state.TurnOrder.ActiveGame.started\n\nexport const selectors = {\n  getDeck,\n  getDiscard,\n  getHasStarted,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { ITurnOrderPlayerCount, ITurnOrderSetup, Mode } from '../../../../types'\nimport { RootState } from '../../'\nimport {\n  actions as activeGameActions,\n  Action as ActiveGameAction,\n} from '../ActiveGame'\n\nconst TURNORDER_CONFIG_DB_KEY = 'turnOrderConfiguration'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst adjustSetup = (mode: Mode, setup: ITurnOrderSetup): ITurnOrderSetup => {\n  switch (mode) {\n    case 'Maelstrom': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1' || card.id === 'blitz'\n            ? config.TURNORDERCARDS['maelstrom']\n            : card\n        }),\n      }\n    }\n\n    case 'Blitz': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1' || card.id === 'maelstrom'\n            ? config.TURNORDERCARDS['blitz']\n            : card\n        }),\n      }\n    }\n\n    case 'Default':\n    default: {\n      return setup\n    }\n  }\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Mode: Mode\n  SelectedPlayerCount: ITurnOrderPlayerCount\n  SelectedSetup: ITurnOrderSetup\n}>\n\nconst INITIAL_MODE = 'Default'\nconst INITIAL_PLAYER_SETUP = config.TURNORDERSETUPS['onePlayer']\nconst INITIAL_VARIATION = INITIAL_PLAYER_SETUP.variations['default']\n\nexport const initialState: State = {\n  Mode: INITIAL_MODE,\n  SelectedPlayerCount: INITIAL_PLAYER_SETUP,\n  SelectedSetup: INITIAL_VARIATION,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_MODE = 'TurnOrder/Configuration/SET_MODE',\n  SELECT_PLAYER_COUNT = 'TurnOrder/Configuration/SELECT_PLAYER_COUNT',\n  SELECT_SETUP = 'TurnOrder/Configuration/SELECT_SETUP',\n  SET_TO_DB = 'TurnOrder/Configuration/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'TurnOrder/Configuration/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'TurnOrder/Configuration/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'TurnOrder/Configuration/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/Configuration/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/Configuration/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  setMode: (mode: Mode) => createAction(ActionTypes.SET_MODE, mode),\n  selectPlayerCount: (playerCountId: string) =>\n    createAction(ActionTypes.SELECT_PLAYER_COUNT, playerCountId),\n  selectSetup: (setupId: string) =>\n    createAction(ActionTypes.SELECT_SETUP, setupId),\n  setToDB: () => createAction(ActionTypes.SET_TO_DB),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: () => createAction(ActionTypes.SET_TO_DB_FAILURE),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action | ActiveGameAction> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_MODE: {\n      const newState = { ...state, Mode: action.payload }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.SELECT_PLAYER_COUNT: {\n      const newState = {\n        ...state,\n        SelectedPlayerCount: config.TURNORDERSETUPS[action.payload],\n        SelectedSetup:\n          config.TURNORDERSETUPS[action.payload].variations['default'],\n      }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.SELECT_SETUP: {\n      const newState = {\n        ...state,\n        SelectedSetup: state.SelectedPlayerCount.variations[action.payload],\n      }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [TURNORDER_CONFIG_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return loop(\n        newState,\n        // If we could load the configuration also load the actual\n        // turnorder game state\n        Cmd.action<ActiveGameAction>(activeGameActions.fetchFromDB())\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMode = (state: RootState) => state.TurnOrder.Configuration.Mode\nconst getSelectedPlayerCount = (state: RootState) =>\n  state.TurnOrder.Configuration.SelectedPlayerCount\nconst getSelectedSetup = (state: RootState) =>\n  state.TurnOrder.Configuration.SelectedSetup\nconst getConfiguration = createSelector(\n  [getMode, getSelectedSetup],\n  (mode, selectedSetup) => adjustSetup(mode, selectedSetup)\n)\nconst getAvailableCards = createSelector(\n  [getConfiguration],\n  config => config.turnOrderCards\n)\n\nexport const selectors = {\n  getMode,\n  getSelectedPlayerCount,\n  getSelectedSetup,\n  getConfiguration,\n  getAvailableCards,\n}\n","import { combineReducers, reduceReducers } from 'redux-loop'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as MainContentLoading from './MainContentLoading'\nimport * as Settings from './Settings'\nimport * as Nemesis from './Nemesis'\nimport * as Mages from './Mages'\nimport * as Supply from './Supply'\nimport * as TurnOrder from './TurnOrder'\n\nexport type RootState = {\n  Settings: Settings.State\n  MainContentLoading: MainContentLoading.State\n  Nemesis: Nemesis.State\n  Mages: Mages.State\n  Supply: Supply.State\n  TurnOrder: TurnOrder.State\n}\n\nexport enum ActionTypes {\n  USER_CONFIGURATION_GET = 'ROOT/USER_CONFIGURATION_GET',\n}\n\nexport const mainActions = {\n  getUserConfiguration: () => createAction(ActionTypes.USER_CONFIGURATION_GET),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  Settings: Settings.actions,\n  Main: mainActions,\n  TurnOrder: TurnOrder.actions,\n  Nemesis: Nemesis.actions,\n  Mages: Mages.actions,\n  Supply: Supply.actions,\n}\n\nexport const selectors = {\n  Settings: Settings.selectors,\n  Main: {\n    ContentLoading: MainContentLoading.selectors,\n  },\n  TurnOrder: TurnOrder.selectors,\n  Nemesis: Nemesis.selectors,\n  Mages: Mages.selectors,\n  Supply: Supply.selectors,\n}\n\nexport type RootAction =\n  | MainAction\n  | Settings.Action\n  | MainContentLoading.Action\n  | Nemesis.Action\n  | Mages.Action\n  | Supply.Action\n  | TurnOrder.Action\n\nexport const initialState = {\n  Settings: Settings.initialState,\n  MainContentLoading: MainContentLoading.initialState,\n  Nemesis: Nemesis.initialState,\n  Mages: Mages.initialState,\n  Supply: Supply.initialState,\n  TurnOrder: TurnOrder.initialState,\n}\n\nexport const MainReducer: LoopReducer<RootState, RootAction> = (\n  state: RootState = initialState,\n  action: RootAction\n) => {\n  switch (action.type) {\n    case ActionTypes.USER_CONFIGURATION_GET: {\n      return loop(\n        state,\n        Cmd.list<RootAction>([\n          Cmd.action(actions.Settings.Expansions.Selected.fetchFromDB()),\n          Cmd.action(actions.TurnOrder.Configuration.fetchFromDB()),\n          Cmd.action(actions.Settings.SupplySetups.fetchFromDB()),\n        ])\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const RootReducer = reduceReducers(\n  MainReducer,\n  combineReducers<RootState, RootAction>({\n    Settings: Settings.Reducer,\n    MainContentLoading: MainContentLoading.Reducer,\n    Nemesis: Nemesis.Reducer,\n    Mages: Mages.Reducer,\n    Supply: Supply.Reducer,\n    TurnOrder: TurnOrder.Reducer,\n  })\n)\n","import { combineReducers } from 'redux-loop'\n\nimport * as Configuration from './Configuration'\nimport * as ActiveGame from './ActiveGame'\n\nexport type State = {\n  Configuration: Configuration.State\n  ActiveGame: ActiveGame.State\n}\n\nexport type Action = Configuration.Action | ActiveGame.Action\n\nexport const initialState = {\n  Configuration: Configuration.initialState,\n  ActiveGame: ActiveGame.initialState,\n}\n\nexport const actions = {\n  Configuration: Configuration.actions,\n  ActiveGame: ActiveGame.actions,\n}\n\nexport const selectors = {\n  Configuration: Configuration.selectors,\n  ActiveGame: ActiveGame.selectors,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Configuration: Configuration.Reducer,\n  ActiveGame: ActiveGame.Reducer,\n})\n","export const ROUTES = {\n  nemeses: 'Nemeses',\n  mages: 'Mages',\n  supply: 'Supply',\n  turnOrder: 'Turn Order',\n  settings: 'Settings',\n}\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst Card = styled(MuiCard)`\n  position: relative;\n`\n\nCard.displayName = 'Card'\n\nexport default Card\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst CardContent = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nCardContent.displayName = 'CardContent'\n\nexport default CardContent\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.theme.colors.cards[props.type].color};\n`\n\nconst CardTypeIcon = React.memo(({ type }: Props) => {\n  switch (type) {\n    case 'nemesis': {\n      return <Icon type={type} className=\"ra ra-lg ra-broken-skull\" />\n    }\n    default: {\n      return null\n    }\n  }\n})\n\nCardTypeIcon.displayName = 'CardTypeIcon'\n\nexport default CardTypeIcon\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst ExpansionName = styled(Typography)``\n\nExpansionName.displayName = 'ExpansionName'\n\nexport default ExpansionName\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)``\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\n\nimport config from '../../../../config'\nimport { ICreature } from '../../../../types'\n\nimport Card from './Card'\nimport CardContent from './CardContent'\nimport CardTypeIcon from './CardTypeIcon'\nimport ExpansionName from './ExpansionName'\nimport Name from './Name'\n\ntype Props = {\n  nemesis: ICreature\n}\n\nconst NemesisTile = React.memo(({ nemesis, ...rest }: Props) => {\n  return (\n    <Card>\n      <CardContent>\n        <ExpansionName color=\"textSecondary\">\n          {config.DATA[nemesis.expansion].name}\n        </ExpansionName>\n        <Name variant=\"h6\" component=\"h2\">\n          {nemesis['name']}\n        </Name>\n      </CardContent>\n      <CardTypeIcon type=\"nemesis\" />\n    </Card>\n  )\n})\n\nNemesisTile.displayName = 'NemesisTile'\n\nexport default NemesisTile\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyNemesisHint = styled(Typography)``\n\nEmptyNemesisHint.displayName = 'EmptyNemesisHint'\n\nexport default EmptyNemesisHint\n","import styled from 'styled-components/macro'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = styled(Fab)`\n  position: fixed;\n  bottom: 24px;\n  right: 24px;\n  z-index: 10;\n`\n\nShuffleButton.displayName = 'ShuffleButton'\n\nexport default ShuffleButton\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst NoSelectedExpansions = React.memo(() => (\n  <Typography paragraph>\n    There is currently no standalone set selected. Please activate at least one\n    standalone set in the settings.\n  </Typography>\n))\n\nNoSelectedExpansions.displayName = 'NoSelectedExpansions'\n\nexport default NoSelectedExpansions\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport NemesisTile from './NemesisTile'\nimport EmptyNemesisHint from './EmptyNemesisHint'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.Selected.getHasStandaloneSet(\n    state\n  ),\n  selectedExpansions: selectors.Settings.Expansions.Selected.getSelectedExpansionsArray(\n    state\n  ),\n  nemesis: selectors.Nemesis.getNemesis(state),\n})\n\nconst mapDispatchToProps = {\n  setRandomNemesis: actions.Nemesis.setRandomNemesis,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Nemeses = React.memo(\n  ({\n    hasStandaloneExpansionSelected,\n    nemesis,\n    selectedExpansions,\n    setRandomNemesis,\n  }: Props) => {\n    if (!hasStandaloneExpansionSelected) {\n      return <NoSelectedExpansions />\n    }\n\n    return (\n      <React.Fragment>\n        {nemesis ? (\n          <NemesisTile nemesis={nemesis} />\n        ) : (\n          <EmptyNemesisHint>Tab button to spawn new nemesis!</EmptyNemesisHint>\n        )}\n        <ShuffleButton\n          onClick={() => setRandomNemesis(selectedExpansions)}\n          color=\"primary\"\n          variant=\"extended\"\n        >\n          Open Breach\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nNemeses.displayName = 'Nemeses'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Nemeses)\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\ntype Props = {\n  selectedValue: string\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}\n\nconst MageCountPicker = React.memo(\n  ({ selectedValue, handleAmountChange }: Props) => (\n    <Card>\n      <CardContent>\n        <FormControl component={'fieldset' as 'div'}>\n          <FormLabel>Amount of Mages</FormLabel>\n          <RadioGroup\n            aria-label=\"Amount of Mages\"\n            name=\"mageAmount\"\n            value={selectedValue}\n            onChange={handleAmountChange}\n            row={true}\n          >\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n            <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n            <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  )\n)\n\nMageCountPicker.displayName = 'MageCountPicker'\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nMageGridWrapper.displayName = 'MageGridWrapper'\n\nexport default MageGridWrapper\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nconst Wrapper = styled(Grid)``\n\nWrapper.displayName = 'Wrapper'\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst Card = styled(MuiCard)`\n  position: relative;\n  height: 100%;\n`\n\nCard.displayName = 'Card'\n\nexport default Card\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst CardContent = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nCardContent.displayName = 'CardContent'\n\nexport default CardContent\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.theme.colors.cards[props.type].color};\n`\n\nconst CardTypeIcon = React.memo(({ type }: Props) => {\n  switch (type) {\n    case 'mage': {\n      return <Icon type={type} className=\"ra ra-lg ra-fluffy-swirl\" />\n    }\n    default: {\n      return null\n    }\n  }\n})\n\nCardTypeIcon.displayName = 'CardTypeIcon'\n\nexport default CardTypeIcon\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst ExpansionName = styled(Typography)``\n\nExpansionName.displayName = 'ExpansionName'\n\nexport default ExpansionName\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)``\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\n\nimport config from '../../../../config'\nimport { ICreature } from '../../../../types'\n\nimport Wrapper from './Wrapper'\nimport Card from './Card'\nimport CardContent from './CardContent'\nimport CardTypeIcon from './CardTypeIcon'\nimport ExpansionName from './ExpansionName'\nimport Name from './Name'\n\ntype Props = {\n  mage: ICreature\n}\n\nconst MageTile = React.memo(({ mage }: Props) => (\n  <Wrapper item xs={6} md={3}>\n    <Card>\n      <CardContent>\n        <ExpansionName color=\"textSecondary\">\n          {config.DATA[mage.expansion].name}\n        </ExpansionName>\n        <Name variant=\"h6\" component=\"h2\">\n          {mage.name}\n        </Name>\n      </CardContent>\n      <CardTypeIcon type=\"mage\" />\n    </Card>\n  </Wrapper>\n))\n\nMageTile.displayName = 'MageTile'\n\nexport default MageTile\n","import React from 'react'\n\nimport { ICreature } from '../../../../types'\n\nimport MageGridWrapper from './MageGridWrapper'\nimport MageTile from '../MageTile'\n\nimport Grid from '@material-ui/core/Grid'\n\ntype Props = {\n  mages: ReadonlyArray<ICreature>\n}\n\nconst MageList = React.memo(({ mages }: Props) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {mages.map(mage => (\n        <MageTile mage={mage} key={mage.name} />\n      ))}\n    </Grid>\n  </MageGridWrapper>\n))\n\nMageList.displayName = 'MageList'\n\nexport default MageList\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = styled(Typography)`\n  margin-top: 24px;\n`\n\nEmptyMageListHint.displayName = 'EmptyMageListHint'\n\nexport default EmptyMageListHint\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\nimport { MageCount } from '../../../Redux/Store/Mages/Count'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.Selected.getHasStandaloneSet(\n    state\n  ),\n  selectedExpansions: selectors.Settings.Expansions.Selected.getSelectedExpansionsArray(\n    state\n  ),\n  mageCount: selectors.Mages.Count.getCount(state),\n  mages: selectors.Mages.Recruited.getMages(state),\n})\n\nconst mapDispatchToProps = {\n  setMageCount: actions.Mages.Count.setCount,\n  setMages: actions.Mages.Recruited.setRandomMages,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Mages = React.memo(\n  ({\n    hasStandaloneExpansionSelected,\n    selectedExpansions,\n    mageCount,\n    setMageCount,\n    setMages,\n    mages,\n  }: Props) => {\n    if (!hasStandaloneExpansionSelected) {\n      return <NoSelectedExpansions />\n    }\n\n    const handleShuffle = () => {\n      setMages(selectedExpansions, mageCount)\n    }\n\n    const noMagesGeneratedYet = mages.length === 0\n\n    const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setMageCount(parseInt(e.currentTarget.value) as MageCount)\n    }\n\n    return (\n      <React.Fragment>\n        <MageCountPicker\n          selectedValue={mageCount.toString()}\n          handleAmountChange={handleAmountChange}\n        />\n        {noMagesGeneratedYet ? (\n          <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n        ) : (\n          <MageList mages={mages} />\n        )}\n        <ShuffleButton\n          onClick={handleShuffle}\n          color=\"primary\"\n          variant=\"extended\"\n        >\n          Recruit Mages\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nMages.displayName = 'Mages'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Mages)\n","import React, { useState } from 'react'\n\nconst useExpandedHandling = () => {\n  // Expansion handling\n  const [expanded, setExpanded] = useState<boolean | string>(false)\n\n  const createExpansionHandler = (panel: string) => (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => {\n    const panelExpanded = expanded ? panel : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, createExpansionHandler, setExpanded }\n}\n\nexport default useExpandedHandling\n","import styled from 'styled-components/macro'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\n\nconst StyledExpansionPanel = styled(ExpansionPanel)`\n  border-radius: 4px;\n  margin-bottom: 15px;\n\n  &:before {\n    display: none;\n  }\n`\n\nStyledExpansionPanel.displayName = 'StyledExpansionPanel'\n\nexport default StyledExpansionPanel\n","import styled from 'styled-components/macro'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\n\nconst StyledExpansionPanelSummary = styled(ExpansionPanelSummary)`\n  min-height: 48px;\n`\n\nStyledExpansionPanelSummary.displayName = 'StyledExpansionPanelSummary'\n\nexport default StyledExpansionPanelSummary\n","import Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components/macro'\n\nconst Heading = styled(Typography)`\n  font-size: ${props => props.theme.heading.fontSize};\n`\n\nexport default Heading\n","import React from 'react'\n\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport StyledExpansionPanel from './StyledExpansionPanel'\nimport StyledExpansionPanelSummary from './StyledExpansionPanelSummary'\n\nimport Heading from '../Heading'\n\ntype Props = {\n  expanded: string | boolean\n  expansionKey: string\n  summary: string\n  children: React.ReactNode\n  expansionHandler: (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => void\n}\n\nconst ExpansionPanel = React.memo(\n  ({ children, expanded, expansionHandler, expansionKey, summary }: Props) => (\n    <StyledExpansionPanel\n      expanded={expanded === expansionKey}\n      onChange={expansionHandler}\n    >\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Heading>{summary}</Heading>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n)\n\nExpansionPanel.displayName = 'ExpansionPanel'\n\nexport default ExpansionPanel\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nListWrapper.displayName = 'ListWrapper'\n\nexport default ListWrapper\n","//////////\n// DATA //\n//////////\n\nexport interface ICreature {\n  expansion: string\n  name: string\n  id: string\n}\n\nexport const CARD_TYPES = ['Gem', 'Relic', 'Spell', 'EMPTY'] as const\nexport type CardType = typeof CARD_TYPES[number]\n\nexport interface ICard {\n  type: CardType\n  expansion: string\n  name: string\n  id: string\n  cost: number\n}\n\nexport type ExpansionType = 'standalone' | 'mini' | 'promo'\n\nexport type EntityType = 'nemeses' | 'mages' | 'cards'\nexport type Entity = ICard | ICreature\n\nexport interface IExpansion {\n  id: string\n  name: string\n  type: ExpansionType\n  nemeses: Array<ICreature>\n  mages: Array<ICreature>\n  cards: Array<ICard>\n}\n\nexport interface IExpansionData {\n  [key: string]: IExpansion\n}\n\n////////////\n// Market //\n////////////\n\nexport type MarketType = 'official' | 'custom'\nexport const THRESHOLD_OPERATIONS = ['<', '>', '=', '<=', '>='] // Note: should not be a const, because we want to treat it as regular list\nexport const SUPPLY_OPERATIONS = [\n  ...THRESHOLD_OPERATIONS,\n  'ANY',\n  'OR',\n  'NoOp',\n] as const\nexport type Operation = typeof SUPPLY_OPERATIONS[number]\n\nexport interface IBluePrint {\n  id?: string // the optional id is only used for blueprints used inside custom setups\n  type: CardType\n  operation: Operation\n  threshold?: number\n  values?: Array<number>\n}\n\nexport interface IEmptyBluePrint extends IBluePrint {\n  type: 'EMPTY'\n  operation: 'NoOp'\n}\nexport type Slot = IBluePrint | IEmptyBluePrint\n\nexport type IMarketSetup = Readonly<{\n  id: string\n  name: string\n  type: MarketType\n  default?: boolean\n  active: boolean\n  tiles: Array<Slot>\n  isDirty?: boolean // Flag to mark new/edited items\n  isNew?: boolean // Flag to mark if an item has already been actively saved\n}>\n\nexport type IMarketSetups = Readonly<{ [key: string]: IMarketSetup }>\n\n///////////////\n// TurnOrder //\n///////////////\n\nexport type Player =\n  | 'Player 1'\n  | 'Player 2'\n  | 'Player 3'\n  | 'Player 4'\n  | 'Player 1/2'\n  | 'Player 3/4'\n  | 'Nemesis'\n  | 'Wild'\n  | 'Wild Token'\n  | 'Maelstrom Assault'\n  | 'Blitz'\n\nexport type TurnOrderCardType =\n  | 'player1'\n  | 'player2'\n  | 'player3'\n  | 'player4'\n  | 'player12'\n  | 'player34'\n  | 'wild'\n  | 'wild-token'\n  | 'nemesis'\n  | 'maelstrom'\n  | 'blitz'\n\nexport interface ITurnOrderCard {\n  id: string\n  name: Player\n  type: TurnOrderCardType\n}\n\nexport interface ITurnOrderSetups {\n  [key: string]: ITurnOrderPlayerCount\n}\n\nexport interface ITurnOrderPlayerCount {\n  id: string\n  name: string\n  variations: ITurnOrderVariations\n}\n\nexport interface ITurnOrderVariations {\n  [key: string]: ITurnOrderSetup\n}\n\nexport interface ITurnOrderSetup {\n  id: string\n  name: string\n  turnOrderCards: Array<ITurnOrderCard>\n}\n\nexport const isCard = (card: ICard | Slot): card is ICard => {\n  if (!card) return false\n  return (card as ICard).name !== undefined\n}\n\nexport const MODES = ['Default', 'Maelstrom', 'Blitz'] as const\nexport type Mode = typeof MODES[number] // automatically creates union from tuple\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\ntype Props = {\n  type: string\n}\n\nconst Card = styled(MuiCard)<Props>`\n  background: ${props => props.theme.colors.cards[props.type].background};\n  min-width: 30px;\n  min-height: 148px;\n  position: relative;\n  height: 100%;\n`\n\nCard.displayName = 'Card'\n\nexport default Card\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst CardContent = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nCardContent.displayName = 'CardContent'\n\nexport default CardContent\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst CardName = styled(Typography)`\n  font-weight: bold;\n`\n\nCardName.displayName = 'CardName'\n\nexport default CardName\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.theme.colors.cards[props.type].color};\n`\n\nconst CardTypeIcon = React.memo(({ type }: Props) => {\n  switch (type) {\n    case 'gem': {\n      return <Icon type={type} className=\"ra ra-lg ra-crystals\" />\n    }\n    case 'relic': {\n      return <Icon type={type} className=\"ra ra-lg ra-crystal-wand\" />\n    }\n    case 'spell': {\n      return <Icon type={type} className=\"ra ra-lg ra-scroll-unfurled\" />\n    }\n    default: {\n      return null\n    }\n  }\n})\n\nCardTypeIcon.displayName = 'CardTypeIcon'\n\nexport default CardTypeIcon\n","import styled from 'styled-components/macro'\nimport ListItem from '@material-ui/core/ListItem'\n\nconst CardInfoItem = styled(ListItem)`\n  padding: 0;\n`\n\nCardInfoItem.displayName = 'CardInfoItem'\n\nexport default CardInfoItem\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Info = styled(Typography)`\n  display: inline-block;\n`\n\nInfo.displayName = 'Info'\n\nexport default Info\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst InfoLabel = styled(Typography)`\n  margin-right: 8px;\n  display: inline-block;\n`\n\nInfoLabel.displayName = 'InfoLabel'\n\nexport default InfoLabel\n","import React from 'react'\n\nimport { Slot, ICard, isCard } from '../../../../types'\n\nimport CardInfoItem from './CardInfoItem'\nimport Info from './Info'\nimport InfoLabel from './InfoLabel'\n\ntype Props = {\n  card: Slot | ICard\n}\n\nconst CostInfo = React.memo(({ card }: Props) => (\n  <CardInfoItem>\n    <InfoLabel color=\"textSecondary\">Cost:</InfoLabel>\n    <Info component=\"span\">{isCard(card) ? card.cost : '-'}</Info>\n  </CardInfoItem>\n))\n\nCostInfo.displayName = 'CostInfo'\n\nexport default CostInfo\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst CostOperation = styled(Typography)``\n\nCostOperation.displayName = 'CostOperation'\n\nexport default CostOperation\n","import React from 'react'\n\nimport config from '../../../../config'\nimport { Slot, ICard, isCard } from '../../../../types'\n\nimport CardInfoItem from './CardInfoItem'\nimport Info from './Info'\nimport InfoLabel from './InfoLabel'\n\ntype Props = {\n  card: Slot | ICard\n}\n\nconst ExpansionInfo = React.memo(({ card }: Props) => (\n  <CardInfoItem>\n    <InfoLabel color=\"textSecondary\">Set:</InfoLabel>\n    <Info component=\"span\">\n      {isCard(card) && config.DATA[card.expansion] !== undefined\n        ? config.DATA[card.expansion].name\n        : '-'}\n    </Info>\n  </CardInfoItem>\n))\n\nExpansionInfo.displayName = 'ExpansionInfo'\n\nexport default ExpansionInfo\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\n\nimport { Slot, ICard, isCard } from '../../../../types'\n\nimport { getOperationString } from '../../../../Redux/helpers'\n\nimport Card from './Card'\nimport CardContent from './CardContent'\nimport CardName from './CardName'\nimport CardTypeIcon from './CardTypeIcon'\nimport CostInfo from './CostInfo'\nimport CostOperation from './CostOperation'\nimport ExpansionInfo from './ExpansionInfo'\n\ntype Props = {\n  tileSetup: Slot\n  card: Slot | ICard\n}\n\nconst MarketTile = React.memo(({ tileSetup, card, ...rest }: Props) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card type={type.toLowerCase()}>\n        <CardContent>\n          <CostOperation color=\"textSecondary\">\n            {type} {getOperationString(operation, values, threshold)}\n          </CostOperation>\n          <CardName component=\"p\">{isCard(card) ? card.name : '-'}</CardName>\n          <List>\n            <ExpansionInfo card={card} />\n            <CostInfo card={card} />\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} />\n      </Card>\n    </Grid>\n  )\n})\n\nMarketTile.displayName = 'MarketTile'\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { IMarketSetup, ICard, Slot } from '../../../types'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (\n  marketSetup: IMarketSetup,\n  cards: ReadonlyArray<Slot | ICard>\n) => {\n  return marketSetup.tiles.map((tileSetup, i) => (\n    <MarketTile key={i} tileSetup={tileSetup} card={cards[i]} />\n  ))\n}\n\ntype Props = {\n  marketSetup: IMarketSetup\n  cards: ReadonlyArray<Slot | ICard>\n}\n\nconst SupplyList = React.memo(({ marketSetup, cards }: Props) => (\n  <ListWrapper>\n    <Grid container spacing={16}>\n      {renderTiles(marketSetup, cards)}\n    </Grid>\n  </ListWrapper>\n))\n\nSupplyList.displayName = 'SupplyList'\n\nexport default SupplyList\n","import styled from 'styled-components/macro'\n\nconst MarketOptionsWrapper = styled('div')`\n  margin: 0 -8px;\n  display: flex;\n  flex-wrap: wrap;\n`\n\nMarketOptionsWrapper.displayName = 'MarketOptionsWrapper'\n\nexport default MarketOptionsWrapper\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  selected: boolean\n}\n\nconst Wrapper = styled('div')<Props>`\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? props.theme.colors.secondary.main\n        : 'rgba(0, 0, 0, 0.12)'};\n  padding: 4px 8px;\n  display: inline-block;\n  width: calc(100% - 16px);\n  margin: 24px 8px 0;\n  cursor: pointer;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nWrapper.displayName = 'Wrapper'\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\n\nconst TileList = styled('ul')`\n  margin: 0 -4px;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: calc(100% + 8px);\n`\n\nTileList.displayName = 'TileList'\n\nexport default TileList\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst TileListItem = styled('li')<Props>`\n  margin: 4px;\n  min-width: 36px;\n  width: calc(33.33333% - 8px);\n  height: 36px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${props => props.theme.colors.text.secondary};\n  background: ${props => props.theme.colors.cards[props.type].background};\n  font-family: 'Roboto', sans-serif;\n\n  @media all and (min-width: 502px) {\n    width: calc(11.11111% - 8px);\n  }\n`\n\nTileListItem.displayName = 'TileListItem'\n\nexport default TileListItem\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype Props = {\n  selected: boolean\n}\n\nconst SupplyName = styled(Typography)<Props>`\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.secondary.main\n      : props.theme.colors.text.secondary};\n`\n\nSupplyName.displayName = 'SupplyName'\n\nexport default SupplyName\n","import React from 'react'\n\nimport { getOperationString } from '../../Redux/helpers'\nimport { IMarketSetup } from '../../types'\n\nimport Wrapper from './Wrapper'\nimport TileList from './TileList'\nimport TileListItem from './TileListItem'\nimport SupplyName from './SupplyName'\n\n// FIXME tiles are untyped!!!\nconst renderMarketSetupItems = (tiles: any) =>\n  tiles.map((tile: any, index: number) => (\n    <TileListItem key={index} type={tile.type.toLowerCase()}>\n      {getOperationString(tile.operation, tile.values, tile.threshold)}\n    </TileListItem>\n  ))\n\ntype Props = {\n  clickHandler: (event: any) => void\n  setup: IMarketSetup\n  selected?: boolean\n  showName?: boolean\n  className?: string\n}\n\nconst SupplyPreview = React.memo(\n  ({\n    clickHandler,\n    setup,\n    selected = false,\n    showName = true,\n    className,\n  }: Props) => {\n    if (!setup.tiles || setup.tiles.length < 1) {\n      return null\n    }\n\n    return (\n      <Wrapper\n        className={className}\n        key={setup.id}\n        onClick={clickHandler}\n        data-value={setup.id}\n        selected={selected}\n      >\n        <TileList>{renderMarketSetupItems(setup.tiles)}</TileList>\n        {showName ? (\n          <SupplyName variant=\"caption\" selected={selected}>\n            {setup.name}\n          </SupplyName>\n        ) : null}\n      </Wrapper>\n    )\n  }\n)\n\nSupplyPreview.displayName = 'SupplyPreview'\n\nexport default SupplyPreview\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from '../../../Redux/Store'\n\nimport MarketOptionsWrapper from './MarketOptionsWrapper'\nimport SupplyPreview from '../../SupplyPreview'\n\nconst getCustomAndPredefined = selectors.Settings.SupplySetups.makeGetCustomAndPredefined()\nconst mapStateToProps = (state: RootState) => ({\n  activeMarketSetups: selectors.Settings.SupplySetups.getActiveSetups(state),\n  allMarketSetups: getCustomAndPredefined(state),\n  selectedSetup: selectors.Supply.Selection.getSelectedSetup(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: actions.Supply.Selection.selectSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionHandler: (\n      event: React.ChangeEvent<any> | undefined,\n      expanded: boolean | string\n    ) => void\n  }\n\nconst MarketOptions = React.memo(\n  ({\n    activeMarketSetups,\n    allMarketSetups,\n    expansionHandler,\n    selectSetup,\n    selectedSetup,\n  }: Props) => (\n    <MarketOptionsWrapper>\n      {activeMarketSetups.map(setup => (\n        <SupplyPreview\n          key={setup.id}\n          setup={setup}\n          clickHandler={(event: any) => {\n            expansionHandler(undefined, false)\n            selectSetup(allMarketSetups[event.currentTarget.dataset.value])\n          }}\n          selected={selectedSetup.id === setup.id}\n        />\n      ))}\n    </MarketOptionsWrapper>\n  )\n)\n\nMarketOptions.displayName = 'MarketOptions'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MarketOptions)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport useExpandedHandling from '../../../hooks/useExpansionHandling'\n\nimport ExpansionPanel from '../../ExpansionPanel'\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.Selected.getHasStandaloneSet(\n    state\n  ),\n  selectedExpansions: selectors.Settings.Expansions.Selected.getSelectedExpansionsArray(\n    state\n  ),\n  marketSetup: selectors.Supply.Selection.getSelectedSetup(state),\n  cards: selectors.Supply.RandomSetup.getCards(state),\n})\n\nconst mapDispatchToProps = {\n  createMarket: actions.Supply.RandomSetup.createMarket,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Supply = React.memo(\n  ({\n    cards,\n    createMarket,\n    hasStandaloneExpansionSelected,\n    marketSetup,\n    selectedExpansions,\n  }: Props) => {\n    const { expanded, createExpansionHandler } = useExpandedHandling()\n    const expansionKey = 'setup'\n    const expansionHandler = createExpansionHandler(expansionKey)\n\n    if (!hasStandaloneExpansionSelected) {\n      return <NoSelectedExpansions />\n    }\n\n    const handleShuffle = () => {\n      createMarket(selectedExpansions, marketSetup.tiles)\n    }\n\n    return (\n      <React.Fragment>\n        <ExpansionPanel\n          expanded={expanded}\n          expansionKey={expansionKey}\n          summary={marketSetup.name}\n          expansionHandler={expansionHandler}\n        >\n          <MarketOptions expansionHandler={expansionHandler} />\n        </ExpansionPanel>\n        <SupplyList marketSetup={marketSetup} cards={cards} />\n        <ShuffleButton\n          onClick={handleShuffle}\n          color=\"primary\"\n          variant=\"extended\"\n        >\n          Create Market\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nSupply.displayName = 'Supply'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Supply)\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\ntype BaseProps = {\n  checked: boolean\n  item: string\n  label: string\n  changeHandler: (selection: string) => void\n}\n\nexport type RenderComponent = React.ComponentType<BaseProps>\n\ntype Props = BaseProps & {\n  Component?: RenderComponent\n}\n\nconst DefaultCheckbox = React.memo(\n  ({ checked, item, label, changeHandler }: BaseProps) => (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={checked}\n          onChange={() => changeHandler(item)}\n          value={item}\n        />\n      }\n      label={label}\n    />\n  )\n)\n\nconst Item = React.memo(({ Component = DefaultCheckbox, ...rest }: Props) => {\n  return <Component {...rest} />\n})\n\nItem.displayName = 'Item'\n\nexport default Item\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport Item, { RenderComponent } from './Item'\n\ntype Item = {\n  name: string\n  label: string\n  checked: boolean\n}\n\nconst renderCheckboxes = (\n  items: ReadonlyArray<Item>,\n  handleChange: (set: string) => void,\n  Component?: RenderComponent\n) =>\n  items.map(item => (\n    <Item\n      Component={Component}\n      key={item.name}\n      item={item.name}\n      label={item.label}\n      checked={item.checked}\n      changeHandler={handleChange}\n    />\n  ))\n\ntype Props = {\n  label: string\n  items: ReadonlyArray<Item>\n  changeHandler: (selection: string) => void\n  Component?: RenderComponent\n  children?: React.ReactNode\n}\n\nconst CheckboxList = React.memo(\n  ({ children, label, items, changeHandler, Component, ...rest }: Props) => (\n    <React.Fragment>\n      <FormLabel {...rest} style={{ marginTop: '24px' }}>\n        {label}\n      </FormLabel>\n      <FormGroup {...rest}>\n        {children}\n        {renderCheckboxes(items, changeHandler, Component)}\n      </FormGroup>\n    </React.Fragment>\n  )\n)\n\nCheckboxList.displayName = 'CheckboxList'\n\nexport default CheckboxList\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport config from '../../../../config'\nimport { RootState, selectors, actions } from '../../../../Redux/Store'\n\nimport CheckboxList from '../../../CheckboxList'\n\nconst mapStateToProps = (state: RootState) => ({\n  standalones: selectors.Settings.Expansions.getStandaloneExpansions,\n  miniExpansions: selectors.Settings.Expansions.getMiniExpansions,\n  promos: selectors.Settings.Expansions.getPromos,\n  selectedExpansions: selectors.Settings.Expansions.Selected.getSelectedExpansionsState(\n    state\n  ),\n  allSetsSelected: selectors.Settings.Expansions.Selected.getAllSetsSelected(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleSelectAll: actions.Settings.Expansions.Selected.toggleAll,\n  handleChange: actions.Settings.Expansions.Selected.toggleExpansion,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ActiveSets = React.memo(\n  ({\n    allSetsSelected,\n    handleSelectAll,\n    standalones,\n    miniExpansions,\n    promos,\n    selectedExpansions,\n    handleChange,\n  }: Props) => {\n    const expansionsToItems = (expansions: ReadonlyArray<string>) =>\n      expansions.map(expansion => ({\n        name: expansion,\n        item: expansion,\n        label: config.DATA[expansion].name,\n        checked: selectedExpansions[expansion],\n      }))\n\n    return (\n      <FormControl component={'fieldset' as 'div'}>\n        <FormLabel />\n        <FormGroup style={{ marginBottom: '20px' }}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={allSetsSelected}\n                onChange={handleSelectAll}\n                value={allSetsSelected ? 'Deselect All' : 'Select All'}\n              />\n            }\n            label={allSetsSelected ? 'Deselect All' : 'Select All'}\n          />\n        </FormGroup>\n        <CheckboxList\n          label=\"Standalone Sets\"\n          items={expansionsToItems(standalones)}\n          changeHandler={handleChange}\n        />\n        <CheckboxList\n          label=\"Mini Expansions\"\n          items={expansionsToItems(miniExpansions)}\n          changeHandler={handleChange}\n        />\n        <CheckboxList\n          label=\"Promos\"\n          items={expansionsToItems(promos)}\n          changeHandler={handleChange}\n        />\n      </FormControl>\n    )\n  }\n)\n\nActiveSets.displayName = 'ActiveSets'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActiveSets)\n","import React from 'react'\n\nimport useExpansionHandling from '../../../../hooks/useExpansionHandling'\nimport ExpansionPanel from '../../../ExpansionPanel'\nimport ActiveSets from './ActiveSets'\n\ntype Props = {}\n\nconst Expansions = React.memo(() => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n  const expansionKey = 'sets'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  return (\n    <ExpansionPanel\n      expanded={expanded}\n      expansionKey={expansionKey}\n      expansionHandler={expansionHandler}\n      summary=\"Expansions\"\n    >\n      <ActiveSets />\n    </ExpansionPanel>\n  )\n})\n\nExpansions.displayName = 'Expansions'\n\nexport default Expansions\n","import styled from 'styled-components'\n\nimport SupplyPreview from '../../../SupplyPreview'\n\nconst SettingsSupplyPreview = styled(SupplyPreview)`\n  width: 100%;\n  margin: 0;\n`\n\nexport default SettingsSupplyPreview\n","import styled from 'styled-components'\n\nconst CheckboxWithPreviewWrapper = styled('div')`\n  margin-top: 8px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nexport default CheckboxWithPreviewWrapper\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { IMarketSetup } from '../../../../types'\n\nimport SettingsSupplyPreview from './SettingsSupplyPreview'\nimport CheckboxWithPreviewWrapper from './CheckboxWithPreviewWrapper'\n\ntype Props = {\n  changeHandler: (selection: string) => void\n  checked: boolean\n  item: string\n  label: string\n  setup?: IMarketSetup\n  children?: React.ReactNode\n}\n\nconst CheckboxWithPreview = React.memo(\n  ({ changeHandler, checked, item, label, setup, children }: Props) => (\n    <CheckboxWithPreviewWrapper>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={() => changeHandler(item)}\n            value={item}\n          />\n        }\n        label={label}\n      />\n      {children}\n      {setup ? (\n        <SettingsSupplyPreview\n          clickHandler={() => changeHandler(item)}\n          setup={setup}\n          showName={false}\n        />\n      ) : null}\n    </CheckboxWithPreviewWrapper>\n  )\n)\n\nCheckboxWithPreview.displayName = 'CheckboxWithPreview'\n\nexport default CheckboxWithPreview\n","import styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\nconst InputField = styled(TextField)`\n  margin-top: 0;\n  margin-bottom: 24px;\n`\n\nexport default InputField\n","import React from 'react'\nimport styled from 'styled-components'\nimport MuiSelect from '@material-ui/core/Select'\nimport MuiFormControl from '@material-ui/core/FormControl'\n\nconst Wrapper = styled(MuiFormControl)`\n  width: 50%;\n`\n\nconst Select = styled(MuiSelect)`\n  margin: 0 8px 16px;\n`\n\nconst SelectField = React.memo((props: any) => (\n  <Wrapper>\n    <Select {...props} />\n  </Wrapper>\n))\n\nexport default SelectField\n","import styled from 'styled-components'\n\nconst SelectFieldsWrapper = styled('div')`\n  display: flex;\n  margin: 0 -8px;\n`\n\nexport default SelectFieldsWrapper\n","import styled from 'styled-components'\n\nconst BluePrintWrapper = styled('div')`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: #ecf0f1;\n  padding: 30px 20px 15px;\n  margin: 8px 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nexport default BluePrintWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst CancelButton = React.memo((props: any) => (\n  <IconButton\n    className={props.className}\n    color=\"secondary\"\n    aria-label=\"Cancel\"\n    onClick={props.onClick}\n  >\n    <CancelIcon />\n  </IconButton>\n))\n\nconst StyledCancelButton = styled(CancelButton)`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n`\n\nexport default StyledCancelButton\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport * as types from '../../../../../types'\n\nimport InputField from './InputField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport SelectField from './SelectField'\nimport SelectFieldsWrapper from './SelectFieldsWrapper'\nimport BluePrintWrapper from './BluePrintWrapper'\nimport CancelButton from './CancelButton'\n\ntype Props = {\n  bluePrint: types.IBluePrint\n  dispatch: Function\n}\n\n// TODO refactor this file!\n\nconst isThresholdOperation = (operation: types.Operation) =>\n  types.THRESHOLD_OPERATIONS.includes(operation)\n\nconst renderInputFieldsByOperation = (\n  bluePrint: types.IBluePrint,\n  dispatch: Function\n) => {\n  if (isThresholdOperation(bluePrint.operation)) {\n    return (\n      <FormControl>\n        <InputField\n          id={`threshold-${bluePrint.id}`}\n          label=\"Threshold\"\n          value={bluePrint.threshold || ''}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: string }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                threshold: parseInt(e.target.value || '0'),\n              },\n            })\n          }\n          type=\"number\"\n          margin=\"normal\"\n        />\n      </FormControl>\n    )\n  }\n\n  // TODO allow more the two fields to be combined with logical or\n  if (bluePrint.operation === 'OR') {\n    const valueA =\n      bluePrint && bluePrint.values && bluePrint.values[0]\n        ? bluePrint.values[0].toString()\n        : ''\n    const valueB =\n      bluePrint && bluePrint.values && bluePrint.values[1]\n        ? bluePrint.values[1].toString()\n        : ''\n\n    return (\n      <React.Fragment>\n        <FormControl>\n          <InputField\n            id={`value-1-${bluePrint.id}`}\n            label=\"Value 1\"\n            value={valueA}\n            onChange={(\n              e: React.ChangeEvent<{ name?: string; value: string }>\n            ) =>\n              dispatch({\n                type: 'UPDATE',\n                payload: {\n                  ...bluePrint,\n                  values: [parseInt(e.target.value || '0'), parseInt(valueB)],\n                },\n              })\n            }\n            type=\"number\"\n            margin=\"normal\"\n          />\n        </FormControl>\n        <FormControl>\n          <InputField\n            id={`value-2-${bluePrint.id}`}\n            label=\"Value 2\"\n            value={valueB}\n            onChange={(\n              e: React.ChangeEvent<{ name?: string; value: string }>\n            ) =>\n              dispatch({\n                type: 'UPDATE',\n                payload: {\n                  ...bluePrint,\n                  values: [parseInt(valueA), parseInt(e.target.value || '0')],\n                },\n              })\n            }\n            type=\"number\"\n            margin=\"normal\"\n          />\n        </FormControl>\n      </React.Fragment>\n    )\n  }\n\n  return null\n}\n\nconst BluePrint = React.memo(({ bluePrint, dispatch }: Props) => {\n  return (\n    <BluePrintWrapper>\n      <CancelButton\n        onClick={() =>\n          dispatch({\n            type: 'DELETE',\n            payload: {\n              id: bluePrint.id,\n            },\n          })\n        }\n      />\n      <SelectFieldsWrapper>\n        <SelectField\n          key=\"type\"\n          value={bluePrint.type}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                type: e.target.value,\n              },\n            })\n          }\n          inputProps={{\n            name: 'type',\n            id: `type-${bluePrint.id}`,\n          }}\n        >\n          {types.CARD_TYPES.filter(TYPE => TYPE !== 'EMPTY').map(TYPE => (\n            <MenuItem key={TYPE} value={TYPE}>\n              {TYPE}\n            </MenuItem>\n          ))}\n        </SelectField>\n        <SelectField\n          key=\"operation\"\n          value={bluePrint.operation}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                operation: e.target.value,\n              },\n            })\n          }\n          inputProps={{\n            name: 'operation',\n            id: `operation-${bluePrint.id}`,\n          }}\n        >\n          {types.SUPPLY_OPERATIONS.filter(\n            OPERATION => OPERATION !== 'NoOp'\n          ).map(OPERATION => (\n            <MenuItem key={OPERATION} value={OPERATION}>\n              {OPERATION}\n            </MenuItem>\n          ))}\n        </SelectField>\n      </SelectFieldsWrapper>\n      {renderInputFieldsByOperation(bluePrint, dispatch)}\n    </BluePrintWrapper>\n  )\n})\n\nexport default BluePrint\n","import styled from 'styled-components'\n\nconst ListWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n`\n\nexport default ListWrapper\n","import React from 'react'\nimport * as types from '../../../../../types'\nimport Button from '@material-ui/core/Button'\n\nimport BluePrint from './BluePrint'\nimport ListWrapper from './ListWrapper'\n\ntype Props = {\n  bluePrintList: types.Slot[]\n  dispatch: Function\n}\n\nconst BluePrintList = React.memo(({ bluePrintList, dispatch }: Props) => {\n  return (\n    <ListWrapper>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => dispatch({ type: 'ADD' })}\n      >\n        Add Supply tile\n      </Button>\n      {bluePrintList.map(bluePrint => (\n        <BluePrint\n          key={bluePrint.id}\n          bluePrint={bluePrint}\n          dispatch={dispatch}\n        />\n      ))}\n    </ListWrapper>\n  )\n})\n\nexport default BluePrintList\n","import styled from 'styled-components'\n\nconst MainControlsWrapper = styled('div')`\n  display: flex;\n  align-items: baseline;\n`\n\nexport default MainControlsWrapper\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nimport * as types from '../../../../../types'\n\nimport InputField from './InputField'\nimport MainControlsWrapper from './MainControlsWrapper'\n\ntype Props = {\n  bluePrintList: types.IBluePrint[]\n  cancelEdit: Function\n  setup: types.IMarketSetup\n  setupName: string\n  setSetupName: Function\n  saveCustomSetup: Function\n}\n\nconst MainControls = React.memo(\n  ({\n    bluePrintList,\n    cancelEdit,\n    setup,\n    setupName,\n    setSetupName,\n    saveCustomSetup,\n  }: Props) => {\n    return (\n      <MainControlsWrapper>\n        <InputField\n          id=\"setup-name\"\n          label=\"Setup Name\"\n          placeholder=\"Setup Name\"\n          value={setupName}\n          onChange={e => setSetupName(e.currentTarget.value)}\n          margin=\"normal\"\n        />\n        <IconButton\n          color=\"primary\"\n          aria-label=\"Save\"\n          onClick={() =>\n            saveCustomSetup({ ...setup, name: setupName, tiles: bluePrintList })\n          }\n        >\n          <SaveIcon />\n        </IconButton>\n        <IconButton\n          color=\"secondary\"\n          aria-label=\"Cancel\"\n          onClick={() => cancelEdit(setup.id)}\n        >\n          <CancelIcon />\n        </IconButton>\n      </MainControlsWrapper>\n    )\n  }\n)\n\nMainControls.displayName = 'MainControls'\n\nexport default MainControls\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n\n  padding: 16px;\n  margin: 8px 0;\n`\n\nexport default Wrapper\n","import React, { useState, useReducer } from 'react'\nimport shortid from 'shortid'\nimport { connect } from 'react-redux'\n\nimport * as types from '../../../../../types'\nimport { RootState, actions } from '../../../../../Redux/Store'\n\nimport BluePrintList from './BluePrintList'\nimport MainControls from './MainControls'\nimport Wrapper from './Wrapper'\n\ntype BluePrintState = { [id: string]: types.IBluePrint }\ntype Action = { type: string; payload?: any }\n\nconst initialStateFromTiles = (tiles: types.IBluePrint[]) =>\n  tiles.reduce<BluePrintState>((acc, tile) => {\n    const id = tile.id || shortid.generate()\n    return { ...acc, [id]: { ...tile, id } }\n  }, {})\n\nconst bluePrintReducer = (\n  state: BluePrintState,\n  action: Action\n): BluePrintState => {\n  switch (action.type) {\n    case 'ADD': {\n      const id = shortid.generate()\n      return {\n        ...state,\n        [id]: {\n          id,\n          type: 'Gem',\n          operation: 'ANY',\n        },\n      }\n    }\n\n    case 'UPDATE': {\n      const blueprint = action.payload\n\n      return { ...state, [blueprint.id]: { ...blueprint } }\n    }\n\n    case 'DELETE': {\n      const { id } = action.payload\n      const { [id]: blueprint, ...rest } = state\n\n      return { ...rest }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  cancelEdit: actions.Settings.SupplySetups.cancelEdit,\n  saveCustomSetup: actions.Settings.SupplySetups.saveCustomSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    setup: types.IMarketSetup\n  }\n\nconst CustomSetupEdit = React.memo(\n  ({ setup, cancelEdit, saveCustomSetup }: Props) => {\n    const [setupName, setSetupName] = useState(setup.name || '')\n    const [bluePrints, dispatch] = useReducer(\n      bluePrintReducer,\n      setup.tiles,\n      initialStateFromTiles\n    )\n    const bluePrintList = Object.values(bluePrints).reverse()\n\n    return (\n      <Wrapper>\n        <MainControls\n          bluePrintList={bluePrintList}\n          cancelEdit={cancelEdit}\n          setup={setup}\n          setupName={setupName}\n          setSetupName={setSetupName}\n          saveCustomSetup={saveCustomSetup}\n        />\n        <BluePrintList bluePrintList={bluePrintList} dispatch={dispatch} />\n      </Wrapper>\n    )\n  }\n)\n\nCustomSetupEdit.displayName = 'CustomSetupEdit'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomSetupEdit)\n","import styled from 'styled-components'\n\nconst CheckboxWithPreviewControls = styled('div')`\n  float: right;\n`\n\nexport default CheckboxWithPreviewControls\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport CheckboxList from '../../../CheckboxList'\nimport CheckboxWithPreview from './CheckboxWithPreview'\nimport CustomSetupEdit from './CustomSetupEdit'\n\nimport { RootState, actions, selectors } from '../../../../Redux/Store'\nimport CheckboxWithPreviewControls from './CheckboxWithPreviewControls'\n\nconst mapStateToProps = (state: RootState) => ({\n  customSetups: selectors.Settings.SupplySetups.getCustomAsArray(state),\n})\n\nconst mapDispatchToProps = {\n  toggleSetup: actions.Settings.SupplySetups.toggleSetup,\n  createSetup: actions.Settings.SupplySetups.createCustomSetup,\n  editSetup: actions.Settings.SupplySetups.editCustomSetup,\n  deleteSetup: actions.Settings.SupplySetups.deleteCustomSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst CustomSetups = React.memo(\n  ({\n    customSetups,\n    createSetup,\n    toggleSetup,\n    editSetup,\n    deleteSetup,\n  }: Props) => {\n    const customItems = customSetups.map(setup => ({\n      name: setup.id,\n      label: setup.name,\n      checked: setup.active,\n      setup: setup,\n    }))\n\n    return (\n      <CheckboxList\n        label=\"Custom Setups\"\n        changeHandler={item => toggleSetup(item, 'Custom')}\n        items={customItems}\n        Component={({ checked, item, label, changeHandler, ...rest }) => {\n          const setup = customSetups.find(setup => setup.id === item)\n\n          if (!setup) return null\n\n          if (setup.isDirty) {\n            return <CustomSetupEdit setup={setup} />\n          }\n\n          return (\n            <CheckboxWithPreview\n              changeHandler={changeHandler}\n              checked={checked}\n              item={item}\n              label={label}\n              setup={setup}\n            >\n              <CheckboxWithPreviewControls>\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"Edit\"\n                  onClick={() => editSetup(setup.id)}\n                >\n                  <EditIcon />\n                </IconButton>\n                <IconButton\n                  color=\"secondary\"\n                  aria-label=\"Delete\"\n                  onClick={() => deleteSetup(setup.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </CheckboxWithPreviewControls>\n            </CheckboxWithPreview>\n          )\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ marginTop: '16px' }}\n          onClick={() => createSetup()}\n        >\n          Add\n        </Button>\n      </CheckboxList>\n    )\n  }\n)\n\nCustomSetups.displayName = 'CustomSetups'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomSetups)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CheckboxList from '../../../CheckboxList'\nimport CheckboxWithPreview from './CheckboxWithPreview'\n\nimport { RootState, actions, selectors } from '../../../../Redux/Store'\n\nconst mapStateToProps = (state: RootState) => ({\n  predefinedSetups: selectors.Settings.SupplySetups.getPredefinedAsArray(state),\n})\n\nconst mapDispatchToProps = {\n  toggleSetup: actions.Settings.SupplySetups.toggleSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst PredefinedSetups = React.memo(\n  ({ predefinedSetups, toggleSetup }: Props) => {\n    const predefinedItems = predefinedSetups.map(setup => ({\n      name: setup.id,\n      label: setup.name,\n      checked: setup.active,\n      setup: setup,\n    }))\n\n    return (\n      <CheckboxList\n        label=\"Predefined Setups\"\n        changeHandler={item => toggleSetup(item, 'Predefined')}\n        items={predefinedItems}\n        Component={({ checked, item, label, changeHandler, ...rest }) => {\n          const setup = predefinedSetups.find(setup => setup.id === item)\n          return (\n            <CheckboxWithPreview\n              changeHandler={changeHandler}\n              checked={checked}\n              item={item}\n              label={label}\n              setup={setup}\n            />\n          )\n        }}\n      />\n    )\n  }\n)\n\nPredefinedSetups.displayName = 'PredefinedSetups'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PredefinedSetups)\n","import styled from 'styled-components'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst SetupSelectionWrapper = styled(FormControl)`\n  width: 100%;\n`\n\nexport default SetupSelectionWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport { RootState, actions, selectors } from '../../../../Redux/Store'\n\nimport CustomSetups from './CustomSetups'\nimport PredefinedSetups from './PredefinedSetups'\nimport SetupSelectionWrapper from './SetupSelectionWrapper'\n\nconst mapStateToProps = (state: RootState) => ({\n  allSetsSelected: selectors.Settings.SupplySetups.getAllSetsSelected(state),\n})\n\nconst mapDispatchToProps = {\n  toggleAll: actions.Settings.SupplySetups.toggleAll,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst SetupSelection = React.memo(({ allSetsSelected, toggleAll }: Props) => {\n  return (\n    <SetupSelectionWrapper component={'fieldset' as 'div'}>\n      <FormLabel />\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={allSetsSelected}\n              onChange={toggleAll}\n              value={allSetsSelected ? 'Deselect All' : 'Select All'}\n            />\n          }\n          label={allSetsSelected ? 'Deselect All' : 'Select All'}\n        />\n      </FormGroup>\n      <CustomSetups />\n      <PredefinedSetups />\n    </SetupSelectionWrapper>\n  )\n})\n\nSetupSelection.displayName = 'SetupSelection'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetupSelection)\n","import React from 'react'\n\nimport ExpansionPanel from '../../../ExpansionPanel'\nimport useExpansionHandling from '../../../../hooks/useExpansionHandling'\n\nimport SetupSelection from './SetupSelection'\n\ntype Props = {}\n\nconst Supply = React.memo(() => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n  const expansionKey = 'supplySets'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  return (\n    <ExpansionPanel\n      expanded={expanded}\n      expansionHandler={expansionHandler}\n      expansionKey={expansionKey}\n      summary=\"Supply Setups\"\n    >\n      <SetupSelection />\n    </ExpansionPanel>\n  )\n})\n\nSupply.displayName = 'Supply'\n\nexport default Supply\n","import React from 'react'\n\nimport Expansions from './Expansions'\nimport Supply from './Supply'\n\ntype Props = {}\n\nconst Settings = React.memo(() => (\n  <React.Fragment>\n    <Expansions />\n    <Supply />\n  </React.Fragment>\n))\n\nSettings.displayName = 'Settings'\n\nexport default Settings\n","import styled from 'styled-components/macro'\nimport MuiTableCell from '@material-ui/core/TableCell'\n\nconst Cell = styled(MuiTableCell)`\n  padding: 4px 8px;\n\n  &:first-child {\n    padding-left: 16px;\n  }\n\n  &:last-child {\n    padding-right: 8px;\n  }\n`\n\nCell.displayName = 'Cell'\n\nexport default Cell\n","import styled from 'styled-components/macro'\nimport MuiTableRow from '@material-ui/core/TableRow'\n\nimport { TurnOrderCardType } from '../../../../types'\nimport { TurnOrderColors } from '../../../../mainTheme'\n\ntype Props = {\n  type: TurnOrderCardType\n}\n\nconst getTurnOrderCardStyles = (\n  turnOrderCardColors: TurnOrderColors,\n  type: TurnOrderCardType\n) => {\n  if (!turnOrderCardColors[type]) {\n    return `\n      background: #fff;\n      &:first-child {\n        background: #fff;\n      }\n    `\n  }\n\n  return `\n    background: ${turnOrderCardColors[type].light};\n    &:first-child {\n      background: ${turnOrderCardColors[type].normal};\n    }\n  `\n}\n\nconst RowWrapper = styled(MuiTableRow)<Props>`\n  ${props =>\n    getTurnOrderCardStyles(props.theme.colors.turnOrderCards, props.type)}\n\n  &:first-child {\n    & * {\n      color: #fff;\n    }\n  }\n\n  & td {\n    border-bottom: 4px solid #fafafa;\n  }\n`\n\nexport default RowWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport { ITurnOrderCard } from '../../../../types'\nimport { RootState, actions } from '../../../../Redux/Store'\n\nimport Cell from './Cell'\nimport RowWrapper from './RowWrapper'\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  addToTop: actions.TurnOrder.ActiveGame.addToTop,\n  addToBottom: actions.TurnOrder.ActiveGame.addToBottom,\n  shuffleIntoDeck: actions.TurnOrder.ActiveGame.shuffleIntoDeck,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    card: ITurnOrderCard\n  }\n\nconst Row = React.memo(\n  ({ card, addToTop, addToBottom, shuffleIntoDeck }: Props) => (\n    <RowWrapper type={card.type}>\n      <Cell>\n        <Typography component=\"p\">{card.name}</Typography>\n      </Cell>\n      <Cell align=\"right\">\n        <IconButton\n          aria-label=\"Add to top\"\n          title=\"Add to top\"\n          onClick={() => addToTop(card.id)}\n        >\n          <Publish fontSize=\"small\" />\n        </IconButton>\n      </Cell>\n      <Cell align=\"right\">\n        <IconButton\n          aria-label=\"Add to bottom\"\n          title=\"Add to bottom\"\n          onClick={() => addToBottom(card.id)}\n        >\n          <GetApp fontSize=\"small\" />\n        </IconButton>\n      </Cell>\n      <Cell align=\"right\">\n        <IconButton\n          aria-label=\"Shuffle into Turn Order Deck\"\n          title=\"Shuffle into Turn Order Deck\"\n          onClick={() => shuffleIntoDeck(card.id)}\n        >\n          <Loop fontSize=\"small\" />\n        </IconButton>\n      </Cell>\n    </RowWrapper>\n  )\n)\n\nRow.displayName = 'Row'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Row)\n","import styled from 'styled-components/macro'\nimport MuiTable from '@material-ui/core/Table'\n\nconst Table = styled(MuiTable)`\n  margin-top: 24px;\n  border-collapse: collapse;\n`\n\nexport default Table\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport TableBody from '@material-ui/core/TableBody'\n\nimport { ITurnOrderCard } from '../../../../types'\nimport { RootState, selectors } from '../../../../Redux/Store'\n\nimport Row from './Row'\nimport Table from './Table'\n\nconst renderRows = (discard: ITurnOrderCard[]) =>\n  discard.map((card, i) => <Row key={i} card={card} />)\n\nconst mapStateToProps = (state: RootState) => ({\n  discard: selectors.TurnOrder.ActiveGame.getDiscard(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst DiscardTable = React.memo(({ discard }: Props) => (\n  <Table>\n    <TableBody>{renderRows(discard)}</TableBody>\n  </Table>\n))\n\nDiscardTable.displayName = 'DiscardTable'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscardTable)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport { RootState, selectors, actions } from '../../../Redux/Store'\n\nimport ShuffleButton from '../../ShuffleButton'\n\nimport DiscardTable from './DiscardTable'\n\nconst mapStateToProps = (state: RootState) => ({\n  deck: selectors.TurnOrder.ActiveGame.getDeck(state),\n  availableCards: selectors.TurnOrder.Configuration.getAvailableCards(state),\n})\n\nconst mapDispatchToProps = {\n  resetGame: actions.TurnOrder.ActiveGame.resetGame,\n  drawCard: actions.TurnOrder.ActiveGame.draw,\n  newRound: actions.TurnOrder.ActiveGame.newRound,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ActiveTurnOrder = React.memo(\n  ({ availableCards, deck, resetGame, newRound, drawCard }: Props) => (\n    <React.Fragment>\n      {deck.length === 0 ? (\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => newRound(availableCards)}\n        >\n          New Round\n        </Button>\n      ) : (\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={drawCard}\n        >\n          Draw a card\n        </Button>\n      )}\n\n      <DiscardTable />\n\n      <ShuffleButton color=\"primary\" variant=\"extended\" onClick={resetGame}>\n        Reset Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n)\n\nActiveTurnOrder.displayName = 'ActiveTurnOrder'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActiveTurnOrder)\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst Card = styled(MuiCard)`\n  margin-top: 24px;\n`\n\nexport default Card\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport { ITurnOrderSetup } from '../../../types'\n\nimport Card from './Card'\n\nconst renderCardNames = (turnOrderSetup: ITurnOrderSetup) =>\n  turnOrderSetup.turnOrderCards.map((card, i) => (\n    <Typography component=\"p\" key={i}>\n      {card.name}\n    </Typography>\n  ))\n\ntype Props = {\n  turnOrderSetup: ITurnOrderSetup\n}\n\nconst CardNameDisplay = React.memo(({ turnOrderSetup }: Props) => (\n  <Card>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        Turn order cards\n      </Typography>\n      {renderCardNames(turnOrderSetup)}\n    </CardContent>\n  </Card>\n))\n\nCardNameDisplay.displayName = 'CardNameDisplay'\n\nexport default CardNameDisplay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport { MODES } from '../../../types'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport Card from './Card'\n\nconst renderModeOptions = () =>\n  MODES.map(mode => (\n    <FormControlLabel\n      key={mode}\n      value={mode}\n      control={<Radio />}\n      label={mode}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  mode: selectors.TurnOrder.Configuration.getMode(state),\n})\n\nconst mapDispatchToProps = {\n  setMode: actions.TurnOrder.Configuration.setMode,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ModeSelection = React.memo(({ mode, setMode }: Props) => (\n  <Card>\n    <CardContent>\n      <FormLabel>Mode</FormLabel>\n      <RadioGroup\n        aria-label=\"mode\"\n        name=\"turnOrderMode\"\n        value={mode}\n        onChange={(event: React.ChangeEvent<any>) =>\n          setMode(event.currentTarget.value)\n        }\n      >\n        {renderModeOptions()}\n      </RadioGroup>\n    </CardContent>\n  </Card>\n))\n\nModeSelection.displayName = 'ModeSelection'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModeSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport config from '../../../config'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nconst renderPlayerCountOptions = () =>\n  Object.values(config.TURNORDERSETUPS).map(playerCount => (\n    <FormControlLabel\n      key={playerCount.id}\n      value={playerCount.id}\n      control={<Radio />}\n      label={playerCount.name}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  selectPlayerCount: actions.TurnOrder.Configuration.selectPlayerCount,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst PlayerCountSelection = React.memo(\n  ({ selectPlayerCount, selectedPlayerCount }: Props) => (\n    <Card>\n      <CardContent>\n        <FormControl component={'fieldset' as 'div'}>\n          <FormLabel>Amount of Players</FormLabel>\n          <RadioGroup\n            aria-label=\"Players\"\n            name=\"turnOrderPlayerCountOptions\"\n            value={selectedPlayerCount.id}\n            onChange={(event: React.ChangeEvent<any>) => {\n              selectPlayerCount(event.currentTarget.value)\n            }}\n            row={true}\n          >\n            {renderPlayerCountOptions()}\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  )\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayerCountSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport config from '../../../config'\nimport { ITurnOrderPlayerCount } from '../../../types'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport Card from './Card'\n\nconst renderSetupOptions = (selectedPlayerCount: ITurnOrderPlayerCount) =>\n  Object.values(config.TURNORDERSETUPS[selectedPlayerCount.id].variations).map(\n    setup => (\n      <FormControlLabel\n        key={setup.id}\n        value={setup.id}\n        control={<Radio />}\n        label={setup.name}\n      />\n    )\n  )\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n  selectedSetup: selectors.TurnOrder.Configuration.getSelectedSetup(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: actions.TurnOrder.Configuration.selectSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst SetupSelection = React.memo(\n  ({ selectSetup, selectedSetup, selectedPlayerCount }: Props) => (\n    <Card>\n      <CardContent>\n        <FormControl component={'fieldset' as 'div'}>\n          <FormLabel>Player Cards Variants</FormLabel>\n          <RadioGroup\n            aria-label=\"Players Variant\"\n            name=\"turnOrderOptions\"\n            value={selectedSetup.id}\n            onChange={(event: React.ChangeEvent<any>) => {\n              selectSetup(event.currentTarget.value)\n            }}\n          >\n            {renderSetupOptions(selectedPlayerCount)}\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  )\n)\n\nSetupSelection.displayName = 'SetupSelection'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetupSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport CardNameDisplay from './CardNameDisplay'\nimport ModeSelection from './ModeSelection'\nimport PlayerCountSelection from './PlayerCountSelection'\nimport SetupSelection from './SetupSelection'\n\nconst mapStateToProps = (state: RootState) => ({\n  currentConfiguration: selectors.TurnOrder.Configuration.getConfiguration(\n    state\n  ),\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  startGame: actions.TurnOrder.ActiveGame.startGame,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst TurnOrderConfiguration = React.memo(\n  ({ currentConfiguration, startGame, selectedPlayerCount }: Props) => {\n    const availableVariations = Object.keys(selectedPlayerCount.variations).map(\n      key => [selectedPlayerCount.variations[key]]\n    )\n\n    const hasMoreThanOneVariant: boolean = availableVariations.length > 1\n\n    return (\n      <React.Fragment>\n        <PlayerCountSelection />\n        {hasMoreThanOneVariant ? <SetupSelection /> : null}\n        <ModeSelection />\n        <CardNameDisplay turnOrderSetup={currentConfiguration} />\n        <ShuffleButton\n          color=\"primary\"\n          variant=\"extended\"\n          onClick={() => startGame(currentConfiguration.turnOrderCards)}\n        >\n          Start Game\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nTurnOrderConfiguration.displayName = 'TurnOrderConfiguration'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TurnOrderConfiguration)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from '../../../Redux/Store'\n\nimport ActiveGame from './ActiveGame'\nimport TurnOrderConfiguration from './TurnOrderConfiguration'\n\nconst mapStateToProps = (state: RootState) => ({\n  gameHasStarted: selectors.TurnOrder.ActiveGame.getHasStarted(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    gameHasStarted: boolean\n  }\n\nconst TurnOrder = React.memo(({ gameHasStarted }: Props) => (\n  <React.Fragment>\n    {gameHasStarted ? <ActiveGame /> : <TurnOrderConfiguration />}\n  </React.Fragment>\n))\n\nTurnOrder.displayName = 'TurnOrder'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TurnOrder)\n","import styled from 'styled-components/macro'\n\nconst HeaderPlaceholder = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  justify-content: flex-end;\n\n  min-height: 56px;\n\n  @media (min-width: 0px) and (orientation: landscape) {\n    min-height: 48px;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 64px;\n  }\n`\n\nexport default HeaderPlaceholder\n","import styled, { css } from 'styled-components/macro'\n\ntype Props = {\n  drawerIsOpen: boolean\n  isLoading: boolean\n}\n\nconst openDrawerMixin = css`\n  margin-left: 0;\n  transition: ${props => props.theme.muiTransitions.contentShift};\n`\n\nconst Wrapper = styled('div')<Props>`\n  flex-grow: 1;\n  padding: ${props => props.theme.spacing.unit * 3}px;\n  margin-left: -${props => props.theme.drawerWidth}px;\n  transition: ${props => props.theme.muiTransitions.content};\n\n  ${props => (props.drawerIsOpen ? openDrawerMixin : '')}\n\n  ${props =>\n    props.isLoading\n      ? `\n      text-align: center;\n      padding-top: 150px;\n    `\n      : ''}\n`\n\nexport default Wrapper\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Nemeses from '../pages/Nemeses'\nimport Mages from '../pages/Mages'\nimport Supply from '../pages/Supply'\nimport Settings from '../pages/Settings'\nimport TurnOrder from '../pages/TurnOrder'\n\nimport { ROUTES } from '../../routes'\nimport HeaderPlaceholder from './HeaderPlaceholder'\nimport Wrapper from './Wrapper'\n\ntype Props = {\n  route: string\n  isLoading: boolean\n  drawerIsOpen: boolean\n}\n\nconst Content = React.memo(({ route, isLoading, drawerIsOpen }: Props) => (\n  <Wrapper isLoading={isLoading} drawerIsOpen={drawerIsOpen}>\n    <HeaderPlaceholder />\n    {isLoading ? (\n      <CircularProgress />\n    ) : (\n      {\n        [ROUTES.nemeses]: <Nemeses />,\n        [ROUTES.mages]: <Mages />,\n        [ROUTES.supply]: <Supply />,\n        [ROUTES.turnOrder]: <TurnOrder />,\n        [ROUTES.settings]: <Settings />,\n      }[route]\n    )}\n  </Wrapper>\n))\n\nContent.displayName = 'Content'\n\nexport default Content\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Title = styled(Typography)``\n\nexport default Title\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport MuiAppBar from '@material-ui/core/AppBar'\n\ntype Props = {\n  drawerIsOpen: boolean\n}\n\nconst openDrawerMixin = css`\n  width: calc(100% - ${props => props.theme.drawerWidth}px);\n  margin-left: ${props => props.theme.drawerWidth}px;\n  transition: ${props => props.theme.muiTransitions.appBarShift};\n`\n\n// eslint-disable-next-line no-unexpected-multiline\nconst AppBar = styled(({ drawerIsOpen, ...rest }) => <MuiAppBar {...rest} />)<\n  Props\n>`\n  position: fixed;\n\n  ${props => (props.drawerIsOpen ? openDrawerMixin : '')}\n`\n\nexport default AppBar\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport MuiIconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\ntype WrapperProps = {\n  drawerIsOpen: boolean\n}\n\nconst Wrapper = styled('div')<WrapperProps>`\n  margin-left: 12px;\n  margin-right: 20px;\n\n  color: #fff;\n\n  ${props => (props.drawerIsOpen ? `display: none;` : '')}\n`\n\nconst IconButton = styled(MuiIconButton)`\n  color: #fff;\n`\n\ntype Props = {\n  drawerIsOpen: boolean\n  onClick: () => void\n}\n\nconst MenuButton = ({ drawerIsOpen, onClick }: Props) => (\n  <Wrapper drawerIsOpen={drawerIsOpen}>\n    <IconButton aria-label=\"Menu\" onClick={onClick}>\n      <MenuIcon />\n    </IconButton>\n  </Wrapper>\n)\n\nexport default MenuButton\n","import React from 'react'\n\nimport Toolbar from '@material-ui/core/Toolbar'\n\nimport Title from './Title'\nimport AppBar from './AppBar'\nimport MenuButton from './MenuButton'\n\ntype Props = {\n  drawerIsOpen: boolean\n  currentLocation: string\n  toggleDrawer: () => void\n}\n\nconst TopBar = React.memo(\n  ({ drawerIsOpen, currentLocation, toggleDrawer }: Props) => (\n    <AppBar drawerIsOpen={drawerIsOpen}>\n      <Toolbar disableGutters={!drawerIsOpen}>\n        <MenuButton drawerIsOpen={drawerIsOpen} onClick={toggleDrawer} />\n        <Title variant=\"h6\" color=\"inherit\">\n          {currentLocation}\n        </Title>\n      </Toolbar>\n    </AppBar>\n  )\n)\n\nTopBar.displayName = 'TopBar'\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\ntype Props = {\n  route: string\n  clickhandler: (route: string) => any\n  children: any\n}\n\nconst RouteItem = React.memo(({ route, clickhandler, children }: Props) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n))\n\nRouteItem.displayName = 'RouteItem'\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes'\nimport RouteItem from './RouteItem'\n\ntype Props = {\n  locationhandler: (route: string) => void\n}\n\nconst Routes = React.memo(({ locationhandler }: Props) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-broken-skull\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-crystal-wand\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-campfire\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-player-lift\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon\n        style={{\n          width: '0.9em',\n        }}\n      />\n    </RouteItem>\n  </List>\n))\n\nRoutes.displayName = 'Routes'\n\nexport default Routes\n","import styled from 'styled-components/macro'\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  justify-content: flex-end;\n\n  min-height: 56px;\n\n  @media (min-width: 0px) and (orientation: landscape) {\n    min-height: 48px;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 64px;\n  }\n`\n\nexport default Header\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst AppInfo = styled(Typography)`\n  margin: ${props => props.theme.spacing.unit * 2}px;\n`\n\nexport default AppInfo\n","import styled from 'styled-components/macro'\nimport Link from '@material-ui/core/Link'\n\nconst GithHubLink = styled(Link)`\n  display: block;\n  line-height: 24px;\n  margin-top: ${props => props.theme.spacing.unit * 2}px;\n`\n\nexport default GithHubLink\n","import styled from 'styled-components/macro'\n\nconst GitHubLogo = styled('img')`\n  width: 24px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: ${props => props.theme.spacing.unit}px;\n`\n\nexport default GitHubLogo\n","import styled from 'styled-components/macro'\nimport MuiDrawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Drawer = styled(MuiDrawer)`\n  width: 240px;\n  flex-shrink: 0;\n`\n\n// FIXME remove withStyles call\nexport default withStyles({\n  paper: {\n    width: 240,\n  },\n})(Drawer)\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\nimport Routes from '../Routes'\nimport Header from './Header'\nimport AppInfo from './AppInfo'\nimport GitHubLink from './GitHubLink'\nimport GitHubLogo from './GitHubLogo'\nimport Drawer from './Drawer'\n\ntype Props = {\n  drawerIsOpen: boolean\n  toggleDrawer: () => void\n  moveTo: (route: string) => void\n}\n\nconst DrawerMenu = React.memo(\n  ({ drawerIsOpen, toggleDrawer, moveTo }: Props) => (\n    <Drawer\n      open={drawerIsOpen}\n      onClose={toggleDrawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n    >\n      <Header>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </Header>\n      <Divider />\n      <Routes locationhandler={moveTo} />\n      <Divider />\n      <AppInfo>\n        Version: {process.env.REACT_APP_VERSION}\n        <GitHubLink\n          href=\"https://github.com/on3iro/aeons-end-randomizer\"\n          color=\"inherit\"\n          target=\"_blank\"\n        >\n          <GitHubLogo src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" />\n          Github\n        </GitHubLink>\n      </AppInfo>\n    </Drawer>\n  )\n)\n\nDrawerMenu.displayName = 'DrawerMenu'\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../Redux/Store'\n\nimport { ROUTES } from '../../routes'\nimport Content from '../Content'\nimport TopBar from '../TopBar'\nimport DrawerMenu from '../DrawerMenu'\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoading: selectors.Main.ContentLoading.getIsLoading(state),\n})\n\nconst mapDispatchToProps = {\n  getUserConfiguration: actions.Main.getUserConfiguration,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    isLoading: boolean\n  }\n\nconst MainApp = ({ getUserConfiguration, isLoading }: Props) => {\n  const [currentLocation, setCurrentLocation] = useState(ROUTES.nemeses)\n  const moveTo = (route: string) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  useEffect(() => {\n    getUserConfiguration()\n  }, [getUserConfiguration])\n\n  return (\n    <React.Fragment>\n      <TopBar\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        moveTo={moveTo}\n      />\n      <Content\n        isLoading={isLoading}\n        route={currentLocation}\n        drawerIsOpen={drawerIsOpen}\n      />\n    </React.Fragment>\n  )\n}\n\nMainApp.displayName = 'MainApp'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainApp)\n","import styled from 'styled-components/macro'\n\nconst Wrapper = styled('div')`\n  height: 100%;\n  display: flex;\n  padding-bottom: 72px;\n`\n\nexport default Wrapper\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components/macro'\n\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\n\nimport { mainTheme, muiTheme } from '../../mainTheme'\n\nimport MainApp from './MainApp'\nimport Wrapper from './Wrapper'\n\ntype Props = { classes: any }\n\nconst App = React.memo(() => (\n  <ThemeProvider theme={mainTheme}>\n    <MuiThemeProvider theme={muiTheme}>\n      <Wrapper>\n        <CssBaseline />\n        <MainApp />\n      </Wrapper>\n    </MuiThemeProvider>\n  </ThemeProvider>\n))\n\nApp.displayName = 'App'\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport JssProvider from 'react-jss/lib/JssProvider'\nimport { create } from 'jss'\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './Redux/configureStore'\nimport { initialState } from './Redux/Store'\n\nconst store = configureStore(initialState)\n\nconst generateClassName = createGenerateClassName()\n// @ts-ignore\nconst jss = create({\n  ...jssPreset(),\n  // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n  insertionPoint: document.getElementById('jss-insertion-point'),\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <JssProvider jss={jss} generateClassName={generateClassName}>\n      <App />\n    </JssProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// @ts-ignore\nserviceWorker.register()\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { install, StoreCreator } from 'redux-loop'\n\nimport { RootReducer, RootState } from './Store'\n\nconst configureStore = (initialState: RootState) => {\n  // Add middleware to this array if necessary\n  const middleWares: any[] = []\n\n  const enhancers = [applyMiddleware(...middleWares), install<RootState>()]\n\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      // @ts-ignore\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : compose\n\n  const enhancedCreateStore = createStore as StoreCreator\n  const store = enhancedCreateStore(\n    RootReducer,\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  return store\n}\n\nexport { configureStore as default }\n"],"sourceRoot":""}