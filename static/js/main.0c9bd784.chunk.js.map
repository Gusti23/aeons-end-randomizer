{"version":3,"sources":["routes.js","config/index.js","config/aeonsData.js","components/RouteItem.jsx","components/Routes.jsx","hooks/useSelectedSets.jsx","components/ShuffleButton.jsx","components/helpers.js","components/Nemeses.jsx","components/Mages.jsx","components/Supply.jsx","components/Settings.jsx","components/Content.jsx","App.jsx","appStyles.js","serviceWorker.js","index.js"],"names":["ROUTES","config","DATA","sets","WE","nemeses","set","name","mages","cards","type","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","RouteItem","_ref","route","clickhandler","children","react_default","a","createElement","ListItem_default","button","key","onClick","ListItemIcon_default","ListItemText_default","primary","Routes","locationhandler","List_default","components_RouteItem","className","Build_default","style","width","useSelectedSets","setConfiguration","useContext","SetContext","selectedSets","Object","keys","filter","noSelectedSetsComponent","length","Typography_default","paragraph","ShuffleButton","withStyles","root","position","bottom","right","Fab","createSlotList","amount","Array","from","getListOfAvailableEntity","entity","reduce","acc","concat","toConsumableArray","getRandomEntity","availableEntities","Math","floor","random","createEntityList","slotList","slot","i","last","hasCostOperation","undefined","operation","newEntity","threshold","filterByCost","result","Nemeses","_useSelectedSets","_useState","useState","_useState2","slicedToArray","nemesis","setNemesis","availableNemeses","Fragment","components_ShuffleButton","color","variant","Mages","setMages","_useState3","_useState4","setAmount","availableMages","hasEmptySlots","indexOf","FormControl_default","component","FormLabel_default","RadioGroup_default","aria-label","value","toString","onChange","e","parseInt","target","FormControlLabel_default","control","Radio_default","label","map","mage","TILECONFIGS","tiles","gridList","height","card","minWidth","_ref2","classes","emptySlotList","setCards","tileConfig","GridList_default","cellHeight","cols","GridListTile_default","ListSubheader_default","Card_default","CardContent_default","title","gutterBottom","pos","createTiles","availableCards","gemSlots","_ref3","availableGems","_ref4","gems","relicSlots","_ref5","availableRelics","_ref6","relics","spellSlots","_ref7","availableSpells","_ref8","spells","Settings","_useContext","dispatch","FormGroup_default","Checkbox_default","checked","payload","defineProperty","handleChange","Content","_ROUTES$nemeses$ROUTE","rest","objectWithoutProperties","drawerHeader","components_Nemeses","components_Mages","components_Supply","components_Settings","SetsReducer","state","action","objectSpread","React","createContext","theme","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","withTheme","drawerIsOpen","setDrawerIsOpen","toggleDrawer","currentLocation","setCurrentLocation","defaultSets","_useReducer","useReducer","_useReducer2","CssBaseline_default","AppBar_default","classNames","Toolbar_default","disableGutters","IconButton_default","Menu_default","grow","Drawer_default","open","onClose","anchor","paper","ChevronLeft_default","Divider_default","components_Routes","Provider","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c9bd784.chunk.js","sourcesContent":["export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  settings: \"Settings\"\n}\n","import { DATA } from './aeonsData.js'\n\nexport default {\n  DATA\n}\n","export const DATA = {\n  sets: [\"WE\", \"AE\", \"BS\", \"Legacy\", \"Nameless\", \"Depths\", \"TV\", \"OD\"],\n  \"WE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"GateWitch\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"HollowCrown\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"MagusOfCloaks\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Dezmodia\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Garu\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gex\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Mazahaedron\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"MistWE\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Quilius\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Ulgimor\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"nemeses\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"KnightOfShackles\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Sparrow\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"TV\",\n        \"name\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"nemeses\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"ThriceDeadProphet\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Indira\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"BlightLord\"\n      },\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Nameless\",\n        \"name\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Bladius\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Deathmind\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"FungalMesh\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"MaelstromRisen\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"SpawningHorror\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Nym\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Reeve\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Depths\",\n        \"name\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"CarapaceQueen\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"CrookedMask\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"PrinceOfGluttons\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Adelheim\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Brama\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Jian\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Kadir\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Lash\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Mist\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Phaedraxa\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = ({ route, clickhandler, children }) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n)\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes.js'\nimport RouteItem from './RouteItem.jsx'\n\nconst Routes = ({ locationhandler }) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-broken-skull\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-crystal-wand\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className=\"ra ra-lg ra-campfire\" />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n        width: '0.9em'\n      }} />\n    </RouteItem>\n  </List>\n)\n\nexport default Routes\n","import React, { useContext } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetContext } from '../App.jsx'\n\nconst useSelectedSets = () => {\n  const { setConfiguration } = useContext(SetContext)\n  const selectedSets = Object\n    .keys(setConfiguration)\n    .filter( key => setConfiguration[key])\n  const noSetsSelected = selectedSets.length < 1\n\n  const noSelectedSetsComponent = noSetsSelected\n    ? (<Typography paragraph>\n        There is currently no set selected. Please activate at least one set in the settings.\n      </Typography>)\n    : null\n\n  return {\n    selectedSets,\n    noSelectedSetsComponent\n  }\n}\n\nexport default useSelectedSets\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'absolute',\n    bottom: '30px',\n    right: '30px'\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import config from '../config'\n\nexport const createSlotList = (amount) => {\n    return Array.from({ length: amount }, () => \"EMPTY\");\n}\n\n\nexport const getListOfAvailableEntity = (selectedSets, entity) => selectedSets.reduce(\n  (acc, set) => {\n    return [ ...acc, ...config.DATA[set][entity] ]\n  },[]\n)\n\nexport const getRandomEntity = (availableEntities) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\nconst filterByCost = (entity, slot) => {\n  switch (slot.operation) {\n    case \"<\": {\n      return entity.cost < slot.threshold\n    }\n    case \">\": {\n      return entity.cost > slot.threshold\n    }\n    case \"=\": {\n      return entity.cost === slot.threshold\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nexport const createEntityList = (availableEntities, slotList) => {\n  const entities = slotList.reduce(\n    (acc, slot, i) => {\n      const last = i === slotList.length - 1\n      const hasCostOperation = slot.operation !== undefined\n      const newEntity = hasCostOperation\n        ? getRandomEntity(acc.availableEntities.filter(entity => filterByCost(entity, slot)))\n        : getRandomEntity(acc.availableEntities)\n\n      if (last) {\n        return [ ...acc.result, newEntity ]\n      }\n\n      const remainingEntitites = acc.availableEntities.filter(\n        entity => entity.name !== newEntity.name\n      )\n\n      return {\n        availableEntities: remainingEntitites,\n        result: [ ...acc.result, newEntity]\n      }\n  }, { availableEntities, result: [] })\n\n  return entities\n}\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport useSelectedSets from '../hooks/useSelectedSets.jsx'\n\nimport ShuffleButton from './ShuffleButton.jsx'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from './helpers.js'\n\n\nconst Nemeses = () => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [nemesis, setNemesis] = useState(null)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableNemeses = getListOfAvailableEntity(selectedSets, \"nemeses\")\n  const handleShuffle = () => {\n    setNemesis(getRandomEntity(availableNemeses))\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? <Typography>{nemesis['name']}, {nemesis['set']}</Typography>\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default Nemeses\n","import React, { useState } from 'react'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport useSelectedSets from '../hooks/useSelectedSets.jsx'\n\nimport ShuffleButton from './ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from './helpers.js'\n\n\nconst Mages = () => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [mages, setMages] = useState([])\n  const [amount, setAmount] = useState(1)\n  const handleAmountChange = (e) => {\n    setAmount(parseInt(e.target.value))\n  }\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableMages = getListOfAvailableEntity(selectedSets, \"mages\")\n  const handleShuffle = () => {\n    const slotList = createSlotList(amount)\n    const mages = createEntityList(availableMages, slotList)\n    setMages(mages)\n  }\n\n  const hasEmptySlots = mages.indexOf(\"EMPTY\") > -1 || mages.length === 0\n\n  return (\n    <React.Fragment>\n      <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Amount of Mages</FormLabel>\n          <RadioGroup\n            aria-label=\"Amount of Mages\"\n            name=\"mageAmount\"\n            value={amount.toString()}\n            onChange={handleAmountChange}\n          >\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n            <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n            <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n          </RadioGroup>\n        </FormControl>\n      {\n        hasEmptySlots\n          ? <Typography>Tap button to recruit mages</Typography>\n          : <List>\n            {\n              mages.map(mage => (\n                <ListItem key={mage.name}>\n                  <ListItemText>{mage.name}, {mage.set}</ListItemText>\n                </ListItem>\n              ))\n            }\n          </List>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default Mages\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport useSelectedSets from '../hooks/useSelectedSets.jsx'\n\nimport ShuffleButton from './ShuffleButton.jsx'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from './helpers.js'\n\nconst TILECONFIGS = {\n  \"market1\": {\n    name: \"MARKET SETUP 1\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  }\n}\n\nconst createTiles = (tileConfig, cards, classes) => {\n  return tileConfig.tiles.map(({ type, operation, threshold }, i) => (\n      <GridListTile key={i} cols={1} style={{ height: 'auto' }}>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {type} {operation} {threshold ? threshold : \"\"}\n            </Typography>\n            <Typography component=\"p\">\n              { cards[i].name !== undefined ? cards[i].name : \"-\" }\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Set: { cards[i].set !== undefined ? cards[i].set : \"-\" }\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Cost: { cards[i].cost !== undefined ? cards[i].cost : \"-\" }\n            </Typography>\n          </CardContent>\n        </Card>\n      </GridListTile>\n  ))\n}\n\nconst Supply = ({ classes }) => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const emptySlotList = createSlotList(9)\n  const [cards, setCards] = useState(emptySlotList)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const tileConfig = TILECONFIGS[\"market1\"]\n\n  const handleShuffle = () => {\n    const tiles = tileConfig.tiles\n    const availableCards = getListOfAvailableEntity(selectedSets, \"cards\")\n\n    // Gems\n    const gemSlots = tiles.filter(({ type }) => type === \"Gem\")\n    const availableGems = availableCards.filter(({ type }) => type === \"Gem\")\n    const gems = createEntityList(availableGems, gemSlots)\n\n    // Relics\n    const relicSlots = tiles.filter(({ type }) => type === \"Relic\")\n    const availableRelics = availableCards.filter(({ type }) => type === \"Relic\")\n    const relics = createEntityList(availableRelics, relicSlots)\n\n    // Spells\n    const spellSlots = tiles.filter(({ type }) => type === \"Spell\")\n    const availableSpells = availableCards.filter(({ type }) => type === \"Spell\")\n    const spells = createEntityList(availableSpells, spellSlots)\n\n    setCards([...gems, ...relics, ...spells])\n  }\n\n  return (\n    <React.Fragment>\n      <GridList cellHeight={180} className={classes.gridList} cols={2}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">{tileConfig.name}</ListSubheader>\n        </GridListTile>\n        { createTiles(tileConfig, cards, classes) }\n      </GridList>\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default withStyles({\n  gridList: {\n    width: 300,\n    height: 450,\n  },\n  card: {\n    minWidth: 30,\n  },\n})(Supply)\n","import React, { useContext } from 'react'\n\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { SetContext } from '../App.jsx'\n\nconst Settings = () => {\n  const { setConfiguration, sets, dispatch } = useContext(SetContext)\n  const handleChange= (set) => dispatch({ type: \"SET_TOGGLE\", payload: { [set]: !setConfiguration[set]} })\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Select active sets</FormLabel>\n      <FormGroup>\n        {\n          sets.map(set => (\n            <FormControlLabel\n              key={set}\n              control={\n                <Checkbox\n                  checked={setConfiguration[set]}\n                  onChange={() => handleChange(set)}\n                  value={set}\n                />\n              }\n              label={set}\n            />\n          ))\n        }\n      </FormGroup>\n    </FormControl>\n  )\n}\n\nexport default Settings\n","import React from 'react'\n\nimport Nemeses from './Nemeses.jsx'\nimport Mages from './Mages.jsx'\nimport Supply from './Supply.jsx'\nimport Settings from './Settings.jsx'\n\nimport { ROUTES } from '../routes.js'\n\n\nconst Content = ({ classes, route, ...rest }) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      {\n        [ROUTES.nemeses]: <Nemeses />,\n        [ROUTES.mages]: <Mages />,\n        [ROUTES.supply]: <Supply />,\n        [ROUTES.settings]: <Settings />\n      }[route]\n    }\n  </div>\n)\n\nexport default Content\n","import React, { useState, useReducer } from 'react';\n\nimport classNames from 'classnames'\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport { styles } from './appStyles.js'\nimport { ROUTES } from './routes.js'\nimport config from './config'\n\nimport Routes from './components/Routes.jsx'\nimport Content from './components/Content.jsx'\n\n\nconst SetsReducer = (state, action) => {\n  switch (action.type) {\n    case (\"SET_TOGGLE\"): {\n      return { ...state, ...action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const SetContext = React.createContext(null)\n\nconst App = ({ classes, theme }) => {\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const defaultSets = config.DATA.sets.reduce(\n    (acc, set) => ({ ...acc, [set]: false }) , {}\n  )\n  const [ setConfiguration, dispatch ] = useReducer(SetsReducer, defaultSets)\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: drawerIsOpen,\n        })}\n      >\n        <Toolbar disableGutters={!drawerIsOpen}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={toggleDrawer}\n            className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            {currentLocation}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        open={drawerIsOpen}\n        onClose={toggleDrawer}\n        variant=\"persistent\"\n        className={classes.drawer}\n        anchor=\"left\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n        </div>\n        <Divider />\n        <Routes locationhandler={moveTo} />\n      </Drawer>\n      <SetContext.Provider value={{ setConfiguration, dispatch, sets: config.DATA.sets }}>\n        <Content\n          route={currentLocation}\n          classes={classes}\n          className={classNames(classes.content, {\n            [classes.contentShift]: drawerIsOpen,\n          })}\n        />\n      </SetContext.Provider>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","const drawerWidth = 240;\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}