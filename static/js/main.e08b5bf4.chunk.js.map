{"version":3,"sources":["Redux/Store/Settings/Expansions/Selected.ts","config/aeonsData.ts","config/turnOrderSetups.ts","config/index.ts","config/marketSetups.ts","Redux/Store/TurnOrder/ActiveGame/index.ts","Redux/Store/MainContentLoading/index.ts","types.ts","Redux/helpers.ts","Redux/Store/TurnOrder/Configuration/index.ts","Redux/Store/Nemesis/index.ts","routes.ts","Redux/Store/Mages/Count/index.ts","components/ShuffleButton.tsx","components/NoSelectedExpansions.tsx","components/pages/Nemeses/nemesesStyles.ts","components/pages/Nemeses/index.tsx","Redux/Store/Mages/Recruited/index.ts","Redux/Store/Supply/Selection/index.ts","components/pages/Mages/MageCountPicker.tsx","components/pages/Mages/MageGridWrapper.tsx","components/pages/Mages/MageCard.tsx","components/pages/Mages/mageStyles.tsx","components/pages/Mages/MageList.tsx","components/pages/Mages/EmptyMageListHint.tsx","components/pages/Mages/index.tsx","Redux/Store/Supply/RandomSetup/index.ts","Redux/Store/Supply/RandomSetup/helpers.ts","Redux/Store/Settings/SupplySetups/index.ts","hooks/useExpansionHandling.tsx","components/StyledExpansionPanel.tsx","components/StyledExpansionPanelSummary.tsx","components/pages/Supply/supplyStyles.ts","components/pages/Supply/ListWrapper.tsx","components/pages/Supply/CardTypeIcon.tsx","components/pages/Supply/MarketTile.tsx","components/pages/Supply/SupplyList.tsx","components/pages/Supply/MarketOptions.tsx","components/pages/Supply/index.tsx","components/pages/Settings/settingStyles.ts","Redux/Store/Settings/Expansions/index.ts","components/pages/Settings/ConfiguredSet.tsx","components/pages/Settings/CheckboxList.tsx","components/pages/Settings/ActiveSets.tsx","components/pages/Settings/index.tsx","components/pages/TurnOrder/TableCell.tsx","components/pages/TurnOrder/TableRow.tsx","components/pages/TurnOrder/styles.ts","components/pages/TurnOrder/DiscardTable.tsx","components/pages/TurnOrder/ActiveGame.tsx","components/pages/TurnOrder/CardNameDisplay.tsx","components/pages/TurnOrder/ModeSelection.tsx","components/pages/TurnOrder/SetupSelection.tsx","components/pages/TurnOrder/TurnOrderConfiguration.tsx","components/pages/TurnOrder/index.tsx","components/Content.tsx","components/App/TopBar.tsx","components/RouteItem.tsx","components/Routes.tsx","components/App/DrawerMenu.tsx","components/App/MainApp.tsx","components/App/index.tsx","components/App/appStyles.ts","serviceWorker.js","Redux/Store/Settings/index.ts","Redux/Store/Mages/index.ts","Redux/Store/Supply/index.ts","Redux/Store/TurnOrder/index.ts","Redux/Store/index.ts","index.tsx","Redux/configureStore.ts"],"names":["ActionTypes","DATA","WE","id","name","type","nemeses","expansion","mages","cards","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","p-1","p-2","p-3","p-4","p-5","TURNORDERCARDS","player1-1","cssClass","player1-2","player1-3","player1-4","player2-1","player2-2","player3-1","player4-1","wild","nemesis-1","nemesis-2","maelstrom","TURNORDERSETUPS","onePlayerThreeToc","turnOrderCards","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","config","DEFAULTSUPPLYCOUNT","EXPANSIONS","Object","keys","MARKETSETUPS","market1Inc","active","tiles","operation","threshold","market1","market2","market3","values","market4","market5","market6","random","default","initialState","reduce","acc","set","objectSpread","defineProperty","actions","toggleAll","createAction","TOGGLE_ALL","toggleExpansion","TOGGLE_EXPANSION","setToDB","state","SET_TO_DB","setToDBSuccessful","SET_TO_DB_SUCCESS","setToDBFailed","error","SET_TO_DB_FAILURE","fetchFromDB","FETCH_FROM_DB","fetchFromDBSuccessful","FETCH_FROM_DB_SUCCESS","fetchFromDBFailed","FETCH_FROM_DB_FAILURE","allSetsAreSelected","every","val","getSelectedExpansionsState","Settings","Expansions","Selected","getSelectedExpansionsArray","createSelector","selectedExpansions","filter","key","selectors","getAllSetsSelected","getHasStandaloneSet","some","MainContentLoading","isCard","card","undefined","MODES","_len","arguments","length","args","Array","_key","tuple","createSlotList","amount","from","getListOfAvailableEntity","selectedSets","entity","concat","toConsumableArray","shuffleDeck","deck","availableCards","slots","getEntity","getRandomEntity","slot","i","result","availableEntities","Math","floor","newStateWithDBWrite","newState","loop","Cmd","run","setToDb","successActionCreator","setTurnOrderToDbSuccess","failActionCreator","setTurnOrderToDbFailure","discard","started","noOp","init","INIT","draw","DRAW","newRound","NEW_ROUND","addToTop","cardId","ADD_TO_TOP","addToBottom","ADD_TO_BOTTOM","shuffleIntoDeck","SHUFFLE_INTO_DECK","SET_TURNORDER_TO_DB_SUCCESS","SET_TURNORDER_TO_DB_FAILURE","startGame","START_GAME","resetGame","RESET_GAME","TurnOrder","ActiveGame","Mode","SelectedSetup","setMode","mode","SET_MODE","selectSetup","setupId","SELECT_SETUP","getMode","Configuration","getSelectedSetup","getConfiguration","selectedSetup","setup","map","adjustSetup","getAvailableCards","ROUTES","setRandomNemesis","expansions","SET_RANDOM","Nemesis","ShuffleButton","withStyles","root","position","bottom","right","zIndex","Fab","NoSelectedExpansions","React","memo","react_default","a","createElement","Typography_default","paragraph","nemesesStyles","theme","createStyles","cardContent","cardIcon","fontSize","opacity","color","Nemeses","_ref","classes","hasStandaloneExpansionSelected","nemesis","Fragment","Card_default","className","CardContent_default","variant","component","components_ShuffleButton","onClick","components_NoSelectedExpansions","mapDispatchToProps","connect","SelectedExpansions","setCount","count","SET","Mages","Count","setRandomMages","Recruited","MageCountPicker","selectedValue","handleAmountChange","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","styled","withConfig","displayName","componentId","MageCard","mage","Grid_default","item","xs","md","mageStyles","height","MageList","Mages_MageGridWrapper","container","spacing","Mages_MageCard","EmptyMageListHint","marginTop","Typography","mageCount","setMageCount","setMages","noMagesGeneratedYet","Mages_MageCountPicker","toString","e","parseInt","currentTarget","Mages_EmptyMageListHint","Mages_MageList","MageCount","RecruitedMages","Supply","Selection","getRandomCardsByType","tileSetups","cardType","cardSlots","blueprints","blueprint","filteredByCost","setupBlueprint","indexOf","filterByCost","createCardList","_ref2","Cards","resetMarket","RESET","createMarket","CREATE","RandomSetup","useExpandedHandling","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","createExpansionHandler","panel","event","StyledExpansionPanel","borderRadius","&:before","display","margin","ExpansionPanel","StyledExpansionPanelSummary","minHeight","&$expanded","content","ExpansionPanelSummary","supplyStyles","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","minWidth","cardName","fontWeight","cardInfoListItem","padding","marginRight","infoText","gem","background","relic","spell","gemIcon","relicIcon","spellIcon","ListWrapper","CardTypeIcon","typeClass","MarketTile","tileSetup","rest","objectWithoutProperties","assign","toLowerCase","title","join","thresholdValue","getOperationString","List_default","ListItem_default","Supply_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","Predefined","Custom","getPredefined","SupplySetups","getCustom","getCustomAndPredefined","predefined","custom","getActiveSetups","customAndPredefined","MarketOptions","activeMarketSetups","allMarketSetups","expansionHandler","marketSetupId","renderMarketOptions","SupplySelection","_useExpandedHandling","components_StyledExpansionPanel","components_StyledExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","RandomSupply","settingStyles","Reducer","combineReducers","action","allSetsSelected","payload","getFromDb","getExpansionNamesByType","getStandaloneExpansions","sort","getMiniExpansions","getPromos","b","promoA","promoB","ConfiguredSet","configurationOfSets","handleChange","Checkbox_default","checked","CheckboxList","setConfig","changeHandler","FormGroup_default","style","marginBottom","Settings_ConfiguredSet","ActiveSets","handleSelectAll","standalones","miniExpansions","promos","Settings_CheckboxList","_useExpansionHandling","useExpansionHandling","Settings_ActiveSets","TableCell","&:first-child","paddingLeft","&:last-child","paddingRight","MuiTableCell","TableRow","TableRow_default","cardRow","TurnOrder_TableCell","align","IconButton_default","index_es","TurnOrderGame","turnOrderStyles","cardDeck","cardTable","borderCollapse","borderBottom","& *","player1","& td","borderColor","player2","player3","player4","DiscardTable","Table_default","TableBody_default","TurnOrder_TableRow","renderTableRows","styles","ActiveTurnOrder","drawCard","Button_default","size","TurnOrder_DiscardTable","TurnOrderConfig","CardNameDisplay","turnOrderSetup","gutterBottom","renderCardNames","ModeSelection","TurnOrderConfiguration","SetupSelection","currentConfiguration","TurnOrder_SetupSelection","TurnOrder_ModeSelection","TurnOrder_CardNameDisplay","gameHasStarted","TurnOrder_TurnOrderConfiguration","Content","_ROUTES$nemeses$ROUTE","route","isLoading","drawerHeader","CircularProgress_default","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","ListItemText_default","primary","Routes","locationhandler","components_RouteItem","Build_default","width","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","appInfo","process","Link_default","href","githubLink","target","src","alt","githubLogo","fetchExpansionsFromDB","fetchTurnOrderConfigFromDB","setCurrentLocation","_useState3","_useState4","setDrawerIsOpen","useEffect","App_TopBar","App_DrawerMenu","components_Content","contentShift","loading","createMuiTheme","blue","pink","useNextVariants","App","core_styles","CssBaseline_default","App_MainApp","paddingBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","alignItems","mixins","toolbar","justifyContent","flexGrow","unit","lineHeight","verticalAlign","textAlign","paddingTop","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","_action$payload","availableMages","createMageList","_createSupply","gems","relics","spells","createSupply","activeGameActions","cardDrawn","cardToAdd","find","cardToShuffle","newDeck","shuffledDeck","RootReducer","availableNemeses","store","enhancers","applyMiddleware","apply","install","composeEnhancers","compose","enhancedCreateStore","createStore","configureStore","ReactDOM","render","es","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e08b5bf4.chunk.js","sourcesContent":["import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { RootState } from '../../'\n\n\nconst EXPANSIONS_DB_KEY = 'expansions'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{ [key: string]: boolean }>\nexport const initialState: State = config.EXPANSIONS.reduce(\n  (acc, set) => ({ ...acc, [set]: false }) , {}\n)\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/SelectedExpansions/TOGGLE_ALL',\n  TOGGLE_EXPANSION = 'Settings/Expansions/SelectedExpansions/TOGGLE_EXPANSION',\n  SET_TO_DB = 'Settings/Expansions/SelectedExpansions/SET_TO_DB',\n  SET_TO_DB_SUCCESS ='Settings/Expansions/SelectedExpansions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE ='Settings/Expansions/SelectedExpansions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleExpansion: (expansion: string) => createAction(ActionTypes.TOGGLE_EXPANSION, expansion),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) => createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) => createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) => createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nconst allSetsAreSelected = (state: State) => Object\n  .values(state)\n  .every(val => val === true)\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      const allSetsSelected = allSetsAreSelected(state)\n      const newState = config.EXPANSIONS\n        .reduce((acc, set) => ({ ...acc, [set]: !allSetsSelected }), {})\n\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: [EXPANSIONS_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.TOGGLE_EXPANSION: {\n      const newState = { ...state, [action.payload]: !state[action.payload] }\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: [EXPANSIONS_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>( getFromDb, {\n          args: [EXPANSIONS_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return action.payload || initialState\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedExpansionsState = (state: RootState) => state.Settings.Expansions.Selected\n\nconst getSelectedExpansionsArray = createSelector(\n  [ getSelectedExpansionsState ],\n  (selectedExpansions) => Object\n    .keys(selectedExpansions)\n    .filter(key => selectedExpansions[key])\n)\n\nconst getAllSetsSelected = createSelector(\n  [ getSelectedExpansionsState ],\n  (selectedExpansions) => allSetsAreSelected(selectedExpansions)\n)\n\nconst getHasStandaloneSet = createSelector(\n  [ getSelectedExpansionsArray ],\n  (selectedExpansions) => selectedExpansions\n    .some(expansion => config.DATA[expansion].type === \"standalone\")\n)\n\nexport const selectors = {\n  getSelectedExpansionsState,\n  getSelectedExpansionsArray,\n  getAllSetsSelected,\n  getHasStandaloneSet,\n}\n","import { IExpansionData } from '../types'\n\nexport const DATA: IExpansionData = {\n  \"WE\": {\n    \"id\": \"WE\",\n    \"name\": \"War Eternal\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"id\": \"TV\",\n    \"name\": \"Void\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"id\": \"OD\",\n    \"name\": \"Outer Dark\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"id\": \"Nameless\",\n    \"name\": \"Nameless\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"id\": \"Legacy\",\n    \"name\": \"Legacy\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [ \n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Green\",\n        \"id\": \"LegacyGreen\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Yellow\",\n        \"id\": \"LegacyYellow\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Orange\",\n        \"id\": \"LegacyOrange\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Blue\",\n        \"id\": \"LegacyBlue\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"id\": \"Depths\",\n    \"name\": \"Depths\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"id\": \"BS\",\n    \"name\": \"Buried Secrets\",\n    \"type\": \"mini\",\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"id\": \"AE\",\n    \"name\": \"Aeons End\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Rageborne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  },\n  \"p-1\": {\n    \"id\": \"p-1\",\n    \"name\": \"Drown in Flames\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-1\",\n        \"name\": \"Drown in Flames\",\n        \"id\": \"DrownInFlames\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"p-2\": {\n    \"id\": \"p-2\",\n    \"name\": \"Fleeting Vision\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-2\",\n        \"name\": \"Fleeting Vision\",\n        \"id\": \"FleetingVision\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"p-3\": {\n    \"id\": \"p-3\",\n    \"name\": \"Splinter Missile\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-3\",\n        \"name\": \"Splinter Missile\",\n        \"id\": \"SplinterMissile\",\n        \"cost\": 5\n      }\n    ]\n  },\n  \"p-4\": {\n    \"id\": \"p-4\",\n    \"name\": \"Echo Stone\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"p-4\",\n        \"name\": \"Echo Stone\",\n        \"id\": \"EchoStone\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"p-5\": {\n    \"id\": \"p-5\",\n    \"name\": \"Thieving Spirit\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-5\",\n        \"name\": \"Thieving Spirit\",\n        \"id\": \"ThievingSpirit\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","import { ITurnOrderSetups, ITurnOrderCard } from '../types'\n\nexport const TURNORDERCARDS: {[key: string]: ITurnOrderCard} = {\n  \"player1-1\": {id:\"player1-1\", name: 'Player 1', cssClass: 'player1'},\n  \"player1-2\": {id:\"player1-2\", name: 'Player 1', cssClass: 'player1'},\n  \"player1-3\": {id:\"player1-3\", name: 'Player 1', cssClass: 'player1'},\n  \"player1-4\": {id:\"player1-4\", name: 'Player 1', cssClass: 'player1'},\n\n  \"player2-1\": {id:\"player2-1\", name: 'Player 2', cssClass: 'player2'},\n  \"player2-2\": {id:\"player2-2\", name: 'Player 2', cssClass: 'player2'},\n\n  \"player3-1\": {id:\"player3-1\", name: 'Player 3', cssClass: 'player3'},\n  \"player4-1\": {id:\"player4-1\", name: 'Player 4', cssClass: 'player4'},\n\n  \"wild\": {id:\"wild\", name: 'Wild', cssClass: 'wild'},\n\n  \"nemesis-1\": {id:\"nemesis-1\", name: 'Nemesis', cssClass: 'nemesis'},\n  \"nemesis-2\": {id:\"nemesis-2\", name: 'Nemesis', cssClass: 'nemesis'},\n\n  \"maelstrom\": {id:\"maelstrom\", name: 'Maelstrom Assault', cssClass: 'maelstrom'},\n}\n\nexport const TURNORDERSETUPS: ITurnOrderSetups = {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player (3 toc)',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player1-2\"],\n      TURNORDERCARDS[\"player1-3\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player (4 toc)',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player1-2\"],\n      TURNORDERCARDS[\"player1-3\"],\n      TURNORDERCARDS[\"player1-4\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player1-2\"],\n      TURNORDERCARDS[\"player2-1\"],\n      TURNORDERCARDS[\"player2-2\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player2-1\"],\n      TURNORDERCARDS[\"player3-1\"],\n      TURNORDERCARDS[\"wild\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player2-1\"],\n      TURNORDERCARDS[\"player3-1\"],\n      TURNORDERCARDS[\"player4-1\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  }\n}\n","import { DATA } from './aeonsData'\nimport { MARKETSETUPS } from './marketSetups'\nimport { TURNORDERSETUPS, TURNORDERCARDS } from './turnOrderSetups'\n\nconst EXPANSIONS = Object.keys(DATA)\nconst DEFAULTSUPPLYCOUNT = 9\n\nexport default {\n  DATA,\n  DEFAULTSUPPLYCOUNT,\n  EXPANSIONS,\n  MARKETSETUPS,\n  TURNORDERSETUPS,\n  TURNORDERCARDS,\n}\n","import { IMarketSetups } from '../types'\n\nexport const MARKETSETUPS: IMarketSetups = {\n  \"market1Inc\": {\n    id: \"market1Inc\",\n    name: \"Market Setup 1 (inclusive)\",\n    type: \"custom\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<=\", threshold: 5 },\n      { type: \"Spell\", operation: \"<=\", threshold: 5 },\n      { type: \"Spell\", operation: \">=\", threshold: 5 },\n      { type: \"Spell\", operation: \">=\", threshold: 5 },\n    ]\n  },\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    type: \"official\",\n    default: true, // this flag removes the setup from the settings, so it will always be active\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  }\n}\n\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport { RootState } from '../../'\nimport { ITurnOrderCard } from '../../../../types'\nimport { shuffleDeck } from '../../../helpers'\n\n\nexport const TURNORDER_GAME_DB_KEY = 'turnOrderGameState'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run<Action>( setToDb, {\n      args: [TURNORDER_GAME_DB_KEY, newState],\n      successActionCreator: actions.setTurnOrderToDbSuccess,\n      failActionCreator: actions.setTurnOrderToDbFailure,\n    })\n  )\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  deck: Array<ITurnOrderCard>,\n  discard: Array<ITurnOrderCard>,\n  started: boolean\n}\nexport const initialState: State = {\n  deck: [],\n  discard: [],\n  started: false,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  INIT = 'TurnOrder/ActiveGame/INIT',\n  DRAW = 'TurnOrder/ActiveGame/DRAW',\n  NEW_ROUND = 'TurnOrder/ActiveGame/NEW_ROUND',\n  ADD_TO_TOP = 'TurnOrder/ActiveGame/ADD_TO_TOP',\n  ADD_TO_BOTTOM = 'TurnOrder/ActiveGame/ADD_TO_BOTTOM',\n  SHUFFLE_INTO_DECK = 'TurnOrder/ActiveGame/SHUFFLE_INTO_DECK',\n  SET_TURNORDER_TO_DB_SUCCESS = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_SUCCESS',\n  SET_TURNORDER_TO_DB_FAILURE = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_FAILURE',\n  START_GAME = 'TurnOrder/ActiveGame/START_GAME',\n  RESET_GAME = 'TurnOrder/ActiveGame/RESET_GAME',\n  FETCH_FROM_DB = 'TurnOrder/ActiveGame/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/ActiveGame/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/ActiveGame/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction(\"NOOP\"),\n  init: (state: State) => createAction(ActionTypes.INIT, state),\n  draw: () => createAction(ActionTypes.DRAW),\n  newRound: (turnOrderCards: ITurnOrderCard[]) =>\n    createAction(ActionTypes.NEW_ROUND, turnOrderCards),\n  addToTop: (cardId: string) => createAction(ActionTypes.ADD_TO_TOP, cardId),\n  addToBottom: (cardId: string) => createAction(ActionTypes.ADD_TO_BOTTOM, cardId),\n  shuffleIntoDeck: (cardId: string) => createAction(ActionTypes.SHUFFLE_INTO_DECK, cardId),\n  setTurnOrderToDbSuccess: () => createAction(ActionTypes.SET_TURNORDER_TO_DB_SUCCESS),\n  setTurnOrderToDbFailure: () => createAction(ActionTypes.SET_TURNORDER_TO_DB_FAILURE),\n  startGame: (turnOrderCards: ITurnOrderCard[]) => createAction(ActionTypes.START_GAME, turnOrderCards),\n  resetGame: () => createAction(ActionTypes.RESET_GAME),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) => createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.INIT: {\n      return action.payload\n    }\n\n    case ActionTypes.DRAW: {\n      const { deck } = state\n\n      if(deck.length === 0) return state\n\n      const cardDrawn = deck[deck.length - 1];\n\n      const newState = {\n        ...state,\n        deck: deck.filter(card => card.id !== cardDrawn.id),\n        discard: [cardDrawn, ...state.discard ]\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.NEW_ROUND: {\n      const newState = {\n        ...state,\n        deck: shuffleDeck(action.payload),\n        discard: []\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_TOP: {\n      const cardId = action.payload\n      const cardToAdd = state\n        .discard\n        .find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [...state.deck, cardToAdd],\n        discard: state\n          .discard\n          .filter(card => card.id !== cardId)\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_BOTTOM: {\n      const cardId = action.payload\n      const cardToAdd = state\n        .discard\n        .find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [cardToAdd, ...state.deck],\n        discard: state\n          .discard\n          .filter(card => card.id !== cardId)\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.SHUFFLE_INTO_DECK: {\n      const cardId = action.payload\n      const cardToShuffle = state\n        .discard\n        .find(card => card.id === cardId)\n\n      if (!cardToShuffle) return state\n\n      const newDeck = [...state.deck, cardToShuffle]\n      const shuffledDeck = shuffleDeck(newDeck)\n\n      const newState = {\n        ...state,\n        deck: shuffledDeck,\n        discard: state\n          .discard\n          .filter(card => card.id !== cardId)\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.START_GAME: {\n      return newStateWithDBWrite({\n        started: true,\n        deck: shuffleDeck(action.payload),\n        discard: [],\n      })\n    }\n\n    case ActionTypes.RESET_GAME: {\n      return newStateWithDBWrite({\n        started: false,\n        deck: [],\n        discard: [],\n      })\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>( getFromDb, {\n          args: [TURNORDER_GAME_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getDeck = (state: RootState) => state.TurnOrder.ActiveGame.deck\nconst getDiscard = (state: RootState) => state.TurnOrder.ActiveGame.discard\nconst getHasStarted = (state: RootState) => state.TurnOrder.ActiveGame.started\n\nexport const selectors = {\n  getDeck,\n  getDiscard,\n  getHasStarted,\n}\n","import { combineReducers } from 'redux-loop'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport { RootState } from '../'\nimport * as SelectedExpansions from '../Settings/Expansions/Selected'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<boolean>\nexport const initialState = false\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = SelectedExpansions.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB: {\n      return true\n    }\n\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_SUCCESS:\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return false\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getIsLoading = (state: RootState) => state.MainContentLoading\n\nexport const selectors = {\n  getIsLoading\n}\n","//////////\n// UTIL //\n//////////\n\ntype List = string | number | boolean | undefined | null | void | {};\nexport const tuple = <T extends List[]>(...args: T) => args;\n\n//////////\n// DATA //\n//////////\n\nexport interface ICreature {\n  expansion: string;\n  name: string;\n  id: string;\n}\n\nexport type CardType = \"Gem\" | \"Relic\" | \"Spell\" | \"EMPTY\"\n\nexport interface ICard {\n  type: CardType;\n  expansion: string;\n  name: string;\n  id: string;\n  cost: number;\n}\n\nexport type ExpansionType = \"standalone\" | \"mini\" | \"promo\"\n\nexport type EntityType = \"nemeses\" | \"mages\" | \"cards\"\nexport type Entity = ICard | ICreature\n\nexport interface IExpansion {\n  id: string;\n  name: string;\n  type: ExpansionType;\n  nemeses: Array<ICreature>;\n  mages: Array<ICreature>;\n  cards: Array<ICard>;\n}\n\nexport interface IExpansionData {\n  [key: string]: IExpansion;\n}\n\n////////////\n// Market //\n////////////\n\nexport type MarketType = \"official\" | \"custom\"\nexport type Operation =\n  \"<\"\n  | \">\"\n  | \"=\"\n  | \"<=\"\n  | \">=\"\n  | \"ANY\"\n  | \"OR\"\n  | \"NoOp\"\n\nexport interface IBluePrint {\n  type: CardType;\n  operation: Operation;\n  threshold?: number;\n  values?: Array<number>;\n}\n\nexport interface IEmptyBluePrint extends IBluePrint {\n  type: \"EMPTY\";\n  operation: \"NoOp\";\n}\nexport type Slot = IBluePrint | IEmptyBluePrint\n\nexport type IMarketSetup = Readonly<{\n  id: string;\n  name: string;\n  type: MarketType;\n  default?: boolean;\n  active: boolean;\n  tiles: Array<Slot>;\n}>\n\nexport type IMarketSetups = Readonly<{ [key: string]: IMarketSetup }>\n\n///////////////\n// TurnOrder //\n///////////////\n\nexport type Player =\n  \"Player 1\"\n  | \"Player 2\"\n  | \"Player 3\"\n  | \"Player 4\"\n  | \"Nemesis\"\n  | \"Wild\"\n  | \"Maelstrom Assault\"\n\nexport interface ITurnOrderCard {\n  id: string;\n  name: Player;\n  cssClass: string;\n}\n\nexport interface ITurnOrderSetup {\n  id: string;\n  name: string;\n  turnOrderCards: Array<ITurnOrderCard>\n}\n\nexport interface ITurnOrderSetups {\n  [key: string]: ITurnOrderSetup\n}\n\nexport const isCard = (card: ICard | Slot): card is ICard => {\n  return (<ICard>card).name !== undefined\n}\n\nexport const MODES = tuple(\"Default\", \"Maelstrom\")\nexport type Mode = typeof MODES[number] // automatically creates union from tuple\n","import config from '../config'\nimport * as types from '../types'\n\n\nexport const createSlotList = (amount: number): Array<types.IEmptyBluePrint> => {\n  return Array.from({ length: amount }, (): types.IEmptyBluePrint => ({ type: \"EMPTY\", operation: \"NoOp\" }))\n}\n\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = [ \"AE\", \"WE\" ]\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ {...}, ...]\n  */\nexport const getListOfAvailableEntity = (\n  selectedSets: ReadonlyArray<string>,\n  entity: types.EntityType\n) => selectedSets.reduce(\n  (acc: Array<types.ICard | types.ICreature >, expansion: string): Array<types.ICard | types.ICreature> => {\n    return [ ...acc, ...config.DATA[expansion][entity] ]\n  },\n  []\n)\n\nexport const isCardArray = (entityList: Array<types.ICard | types.ICreature>): entityList is Array<types.ICard> => {\n  return (<types.ICard>entityList[0]).name !== undefined\n}\n\n// TODO Refactor turnorder cards and mages (code duplication)\ntype TurnOrderListReductionResult = {\n  availableCards: types.ITurnOrderCard[],\n  result: types.ITurnOrderCard[]\n}\n\nexport const createTurnOrderCardList = (\n  availableCards: types.ITurnOrderCard[],\n  slots: types.ITurnOrderCard[],\n  getEntity: <T>(list: Array<T>) => T\n): TurnOrderListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: TurnOrderListReductionResult,\n      slot: types.ITurnOrderCard,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(acc.availableCards) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [ ...acc.result, card ]\n      }\n    }, { availableCards, result: [] })\n\n  return result\n}\n\ntype MageListReductionResult = {\n  availableMages: types.ICreature[],\n  result: types.ICreature[]\n}\n\nexport const createMageList = (\n  availableMages: types.ICreature[],\n  slots: Array<types.Slot>,\n  getEntity: <T>(list: Array<T>) => T\n): MageListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: MageListReductionResult,\n      slot: types.Slot,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const mage = getEntity(acc.availableMages) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingMages = acc.availableMages.filter(\n        entity => entity.id !== mage.id\n      )\n\n      return {\n        availableMages: remainingMages,\n        result: [ ...acc.result, mage ]\n      }\n  }, { availableMages, result: [] })\n\n  return result\n}\n\nexport const shuffleDeck = (deck: types.ITurnOrderCard[]): types.ITurnOrderCard[] => {\n  return createTurnOrderCardList(deck, deck, getRandomEntity).result\n}\n\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = <E>(availableEntities: Array<E>) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { ITurnOrderSetup, Mode } from '../../../../types'\nimport { RootState } from '../../'\nimport { actions as activeGameActions, Action as ActiveGameAction } from '../ActiveGame'\n\n\nconst TURNORDER_CONFIG_DB_KEY = 'turnOrderConfig'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst adjustSetup = (mode: Mode, setup: ITurnOrderSetup): ITurnOrderSetup => {\n  switch (mode) {\n    case 'Maelstrom': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return (card.id === 'nemesis-1')\n            ? config.TURNORDERCARDS[\"maelstrom\"]\n            : card\n        })\n      }\n    }\n\n    case 'Default':\n    default: {\n      return setup\n    }\n  }\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Mode: Mode,\n  SelectedSetup: ITurnOrderSetup\n}>\nexport const initialState: State = {\n  Mode: 'Default',\n  SelectedSetup: config.TURNORDERSETUPS['onePlayerThreeToc']\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_MODE = 'TurnOrder/Configuration/SET_MODE',\n  SELECT_SETUP = 'TurnOrder/Configuration/SELECT_SETUP',\n  SET_TO_DB = 'TurnOrder/Configuration/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'TurnOrder/Configuration/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'TurnOrder/Configuration/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'TurnOrder/Configuration/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/Configuration/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/Configuration/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  setMode: (mode: Mode) => createAction(ActionTypes.SET_MODE, mode),\n  selectSetup: (setupId: string) => createAction(ActionTypes.SELECT_SETUP, setupId),\n  setToDB: () => createAction(ActionTypes.SET_TO_DB),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: () => createAction(ActionTypes.SET_TO_DB_FAILURE),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) => createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action | ActiveGameAction> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_MODE: {\n      const newState = { ...state, Mode: action.payload }\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.SELECT_SETUP: {\n      const newState = { ...state, SelectedSetup: config.TURNORDERSETUPS[action.payload] }\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>( getFromDb, {\n          args: [TURNORDER_CONFIG_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return loop(\n        newState,\n        // If we could load the configuration also load the actual\n        // turnorder game state\n        Cmd.action<ActiveGameAction>(activeGameActions.fetchFromDB())\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMode = (state: RootState) => state.TurnOrder.Configuration.Mode\nconst getSelectedSetup = (state: RootState) => state.TurnOrder.Configuration.SelectedSetup\nconst getConfiguration = createSelector(\n  [ getMode, getSelectedSetup ],\n  (mode, selectedSetup) => adjustSetup(mode, selectedSetup)\n)\nconst getAvailableCards = createSelector(\n  [ getConfiguration ],\n  (config) => config.turnOrderCards\n)\n\nexport const selectors = {\n  getMode,\n  getSelectedSetup,\n  getConfiguration,\n  getAvailableCards,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../types'\nimport { RootState } from '../'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from '../../helpers'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<ICreature> | undefined\nexport const initialState: State = undefined\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Nemesis/SET_RANDOM'\n}\n\nexport const actions = {\n  setRandomNemesis: (expansions: ReadonlyArray<string>) => createAction(ActionTypes.SET_RANDOM, expansions),\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const expansions = action.payload\n      const availableNemeses = getListOfAvailableEntity(expansions, \"nemeses\")\n      return getRandomEntity(availableNemeses)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getNemesis = (state: RootState) => state.Nemesis\n\nexport const selectors = {\n  getNemesis\n}\n","export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport { RootState } from '../../'\n\n\n///////////\n// STATE //\n///////////\n\nexport type MageCount = 1 | 2 | 3 | 4\nexport type State = MageCount\nexport const initialState: State = 1\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET = 'Mages/Count/SET'\n}\n\nexport const actions = {\n  setCount: (count: MageCount) => createAction(ActionTypes.SET, count),\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCount = (state: RootState) => state.Mages.Count\n\nexport const selectors = {\n  getCount\n}\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '24px',\n    right: '24px',\n    zIndex: 10,\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\n\nconst NoSelectedExpansions = React.memo(() => (\n  <Typography paragraph>\n    There is currently no standalone set selected. Please activate at least one standalone set in the settings.\n  </Typography>\n))\n\nexport default NoSelectedExpansions\n","import { createStyles } from '@material-ui/core'\n\nconst nemesesStyles = (theme: any) => createStyles({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default nemesesStyles\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\nimport * as Nemesis from '../../../Redux/Store/Nemesis'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nimport nemesesStyles from './nemesesStyles'\n\nconst Nemeses = React.memo(({\n  classes,\n  hasStandaloneExpansionSelected,\n  nemesis,\n  selectedExpansions,\n  setRandomNemesis,\n}: {\n  classes: any,\n  hasStandaloneExpansionSelected: boolean,\n  nemesis: ICreature | undefined,\n  selectedExpansions: ReadonlyArray<string>,\n  setRandomNemesis: (expansions: ReadonlyArray<string>) => Nemesis.Action\n}) => {\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? (\n            <React.Fragment>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography color=\"textSecondary\">{config.DATA[nemesis.expansion].name}</Typography>\n                  <Typography variant=\"h6\" component=\"h2\">{nemesis['name']}</Typography>\n                </CardContent>\n                <i className={`ra ra-lg ra-broken-skull ${classes.cardIcon}`} />\n              </Card>\n\n            </React.Fragment>\n          )\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={() => setRandomNemesis(selectedExpansions)}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: SelectedExpansions.selectors.getHasStandaloneSet(state),\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsArray(state),\n  nemesis: Nemesis.selectors.getNemesis(state),\n})\n\nconst mapDispatchToProps = {\n  setRandomNemesis: Nemesis.actions.setRandomNemesis\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(nemesesStyles)(Nemeses))\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../../config'\nimport { ICreature } from '../../../../types'\nimport { RootState } from '../../'\nimport {\n  createSlotList,\n  createMageList,\n  getListOfAvailableEntity,\n  getRandomEntity,\n} from '../../../helpers'\n\nimport { MageCount } from '../Count'\n\n///////////\n// STATE //\n///////////\n\nexport type State = ReadonlyArray<ICreature>\nexport const initialState: State = []\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Mages/Recruited/SET_RANDOM'\n}\n\nexport const actions = {\n  setRandomMages: (expansions: ReadonlyArray<string>, count: MageCount) => createAction(ActionTypes.SET_RANDOM, { expansions, count }),\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const { expansions, count } = action.payload\n      const availableMages = getListOfAvailableEntity(expansions, \"mages\")\n      const slotList = createSlotList(count)\n      const { result } = createMageList(availableMages, slotList, getRandomEntity)\n      return result\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMages = (state: RootState) => state.Mages.Recruited\n\nexport const selectors = {\n  getMages\n}\n\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Selected: types.IMarketSetup\n}>\nexport const initialState: State = {\n  // FIXME we should ensure with typescript, that the 'default: true' property is not\n  // optional for default state here\n  Selected: config.MARKETSETUPS['random'],\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SELECT_SETUP = \"Supply/Selection/SELECT_SETUP\"\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  selectSetup: (setup: Readonly<types.IMarketSetup>) => createAction(ActionTypes.SELECT_SETUP, setup),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SELECT_SETUP: {\n      return {\n        ...state,\n        Selected: action.payload\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedSetup = (state: RootState) => state.Supply.Selection.Selected\n\nexport const selectors = {\n  getSelectedSetup,\n}\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst MageCountPicker = React.memo(({ selectedValue, handleAmountChange }:{\n  selectedValue: string,\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}) => (\n  <Card>\n    <CardContent>\n      <FormControl component={\"fieldset\" as \"div\"}>\n        <FormLabel>Amount of Mages</FormLabel>\n        <RadioGroup\n          aria-label=\"Amount of Mages\"\n          name=\"mageAmount\"\n          value={selectedValue}\n          onChange={handleAmountChange}\n          row={true}\n        >\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n))\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default MageGridWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../types'\n\nconst MageCard = React.memo(({mage, classes}: {\n  mage: ICreature,\n  classes: any\n}) => (\n  <Grid item xs={6} md={3}>\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography color=\"textSecondary\">{config.DATA[mage.expansion].name}</Typography>\n        <Typography variant=\"h6\" component=\"h2\">{mage.name}</Typography>\n      </CardContent>\n      <i className={`ra ra-lg ra-fluffy-swirl ${classes.cardIcon}`} />\n    </Card>\n  </Grid>\n))\n\nexport default MageCard\n","import { createStyles } from '@material-ui/core'\n\nconst mageStyles = (theme: any) => createStyles({\n  card: {\n    position: 'relative',\n    height: '100%',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default mageStyles\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport MageGridWrapper from './MageGridWrapper'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ICreature } from '../../../types'\n\nimport MageCard from './MageCard'\nimport mageStyles from './mageStyles'\n\nconst MageList = React.memo(({ mages, classes }: {\n  mages: ReadonlyArray<ICreature>,\n  classes: any\n}) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {\n        mages.map(mage => (\n          <MageCard\n            classes={classes}\n            mage={mage}\n            key={mage.name}\n          />\n        ))\n      }\n    </Grid>\n  </MageGridWrapper>\n))\n\nexport default withStyles(mageStyles)(MageList)\n","import { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = withStyles({\n  root: {\n    marginTop: 24\n  }\n})(Typography)\n\nexport default EmptyMageListHint\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { ICreature } from '../../../types'\n\nimport { RootState } from '../../../Redux/Store'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\nimport * as MageCount from '../../../Redux/Store/Mages/Count'\nimport * as RecruitedMages from '../../../Redux/Store/Mages/Recruited'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\n\nconst Mages = React.memo(({\n  hasStandaloneExpansionSelected,\n  selectedExpansions,\n  mageCount,\n  setMageCount,\n  setMages,\n  mages,\n}: {\n  hasStandaloneExpansionSelected: boolean,\n  selectedExpansions: ReadonlyArray<string>,\n  mageCount: MageCount.MageCount,\n  setMageCount: (count: MageCount.MageCount) => MageCount.Action,\n  setMages: (expansions: ReadonlyArray<string>, count: MageCount.MageCount) => RecruitedMages.Action,\n  mages: ReadonlyArray<ICreature>\n}) => {\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  const handleShuffle = () => {\n    setMages(selectedExpansions, mageCount)\n  }\n\n  const noMagesGeneratedYet = mages.length === 0\n\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMageCount(parseInt(e.currentTarget.value) as MageCount.MageCount)\n  }\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={mageCount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        noMagesGeneratedYet\n          ? <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: SelectedExpansions.selectors.getHasStandaloneSet(state),\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsArray(state),\n  mageCount: MageCount.selectors.getCount(state),\n  mages: RecruitedMages.selectors.getMages(state),\n})\n\nconst mapDispatchToProps = {\n  setMageCount: MageCount.actions.setCount,\n  setMages: RecruitedMages.actions.setRandomMages,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mages)\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport { Slot, ICard } from '../../../../types'\nimport { createSlotList } from '../../../helpers'\nimport config from '../../../../config'\nimport { RootState } from '../../'\nimport { createSupply } from './helpers'\n\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Cards: ReadonlyArray<Slot | ICard>\n}>\nexport const initialState: State = {\n  Cards: createSlotList(config.DEFAULTSUPPLYCOUNT)\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  RESET = 'Supply/RandomSetup/RESET',\n  CREATE = 'Supply/RandomSetup/CREATE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  resetMarket: () => createAction(ActionTypes.RESET),\n  createMarket: (\n    expansions: ReadonlyArray<string>,\n    tiles: ReadonlyArray<Slot>\n  ) => createAction(ActionTypes.CREATE, { expansions, tiles }),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.RESET: {\n      return initialState\n    }\n\n    case ActionTypes.CREATE: {\n      const { expansions, tiles } = action.payload\n      const { gems, relics, spells } = createSupply(expansions, tiles)\n      return {\n        ...state,\n        Cards: [...gems.result, ...relics.result, ...spells.result]\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCards = (state: RootState) => state.Supply.RandomSetup.Cards\n\nexport const selectors = {\n  getCards\n}\n","import {\n   ICard, \n   IBluePrint, \n   CardType,\n} from '../../../../types'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity,\n  isCardArray\n} from '../../../helpers'\n\n\ntype CardListReduceResult = {\n  availableCards: ICard[],\n  result: ICard[]\n}\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (\n  card: ICard,\n  setupBlueprint: IBluePrint\n) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"<=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost <= setupBlueprint.threshold\n    }\n    case \">=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost >= setupBlueprint.threshold\n    }\n    case \"=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      if (!setupBlueprint.values) return true\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nconst createCardList = (\n  availableCards: ICard[],\n  blueprints: Array<IBluePrint>,\n  getEntity: <T>(list: Array<T>) => T\n): CardListReduceResult => {\n  const result = blueprints.reduce(\n    (\n      acc: CardListReduceResult,\n      blueprint: IBluePrint,\n      i: number\n    ) => {\n      const filteredByCost = acc.availableCards.filter(card => filterByCost(card, blueprint))\n\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(filteredByCost) || blueprint\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [ ...acc.result, card ]\n      }\n  }, { availableCards, result: [] })\n\n  return result\n}\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (\n    availableCards: ReadonlyArray<ICard>,\n    tileSetups: ReadonlyArray<IBluePrint>,\n    cardType: CardType\n) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createCardList(availableCardsOfType, cardSlots, getRandomEntity)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nexport const createSupply = (\n    selectedExpansions: ReadonlyArray<string>,\n    tileSetups: ReadonlyArray<IBluePrint>\n) => {\n  const availableCards = getListOfAvailableEntity(selectedExpansions, \"cards\")\n\n  if (!isCardArray(availableCards)) {\n    return { gems: { result: [] }, relics: { result: [] }, spells: { result: [] } }\n  }\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Predefined: types.IMarketSetups,\n  Custom: types.IMarketSetups,\n}\nexport const initialState: State = {\n  Predefined: config.MARKETSETUPS,\n  Custom: {},\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes { }\n\nexport const actions = {\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n  /////////////\n  // REDUCER //\n  /////////////\n\n  export const Reducer: LoopReducer<State, Action> = (\n    state: State = initialState,\n    action: Action\n  ) => {\n    switch (action.type) {\n      default: {\n        return state\n      }\n    }\n  }\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getPredefined = (state: RootState) => state.Settings.SupplySetups.Predefined\nconst getCustom = (state: RootState) => state.Settings.SupplySetups.Custom\nconst getCustomAndPredefined = createSelector(\n  [ getPredefined, getCustom ],\n  (predefined, custom) => ({ ...predefined, ...custom })\n)\nconst getActiveSetups = createSelector(\n  [ getCustomAndPredefined ],\n  (customAndPredefined) => Object\n    .values(customAndPredefined)\n    .filter(setup => setup.active)\n)\n\nexport const selectors = {\n  getPredefined,\n  getCustom,\n  getCustomAndPredefined,\n  getActiveSetups,\n}\n","import React, { useState } from 'react'\n\nconst useExpandedHandling = () => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState<boolean |  string>(false)\n\n  const createExpansionHandler = (panel: string) => (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, createExpansionHandler, setExpanded }\n}\n\nexport default useExpandedHandling\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n\nconst StyledExpansionPanel = withStyles({\n  root: {\n    borderRadius: 4,\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {\n    margin: 'auto',\n  },\n})(ExpansionPanel);\n\nexport default StyledExpansionPanel\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nconst StyledExpansionPanelSummary = withStyles({\n  root: {\n    minHeight: 48,\n    '&$expanded': {\n      minHeight: 48,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(ExpansionPanelSummary);\n\nexport default StyledExpansionPanelSummary\n","import { createStyles } from '@material-ui/core'\n\nconst supplyStyles = (theme: any) => createStyles({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  card: {\n    minWidth: 30,\n    minHeight: 148,\n    position: 'relative',\n    height: '100%',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardName: {\n    fontWeight: 'bold',\n  },\n  cardInfoListItem: {\n    padding: 0,\n  },\n  label: {\n    marginRight: 8,\n    display: 'inline-block',\n  },\n  infoText: {\n    display: 'inline-block',\n  },\n  gem: {\n    background: '#EDE7F6',\n  },\n  relic: {\n    background: '#E3F2FD',\n  },\n  spell: {\n    background: '#FFF3E0',\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2\n  },\n  gemIcon: {\n    color: '#B39DDB',\n  },\n  relicIcon: {\n    color: '#90CAF9',\n  },\n  spellIcon: {\n    color: '#FFCC80',\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nconst CardTypeIcon = React.memo(({type, classes}: {\n  type: string,\n  classes: any,\n}) => {\n  const typeClass = classes[`${type}Icon`]\n\n  switch (type) {\n    case 'gem': {\n      return <i className={`ra ra-lg ra-crystals ${classes.cardIcon} ${typeClass}`} />\n    }\n    case 'relic': {\n      return <i className={`ra ra-lg ra-crystal-wand ${classes.cardIcon} ${typeClass}`} /> \n    }\n    case 'spell': {\n      return <i className={`ra ra-lg ra-scroll-unfurled ${classes.cardIcon} ${typeClass}`} /> \n    }\n    default: {\n      return null\n    }\n  }\n})\n\nexport default CardTypeIcon\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport {\n  Slot,\n  ICard,\n  isCard,\n  Operation,\n} from '../../../types'\n\nimport CardTypeIcon from './CardTypeIcon'\n\n\nconst getOperationString = (\n  operation: Operation,\n  values?: number[], \n  threshold?: number\n) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}\n\nconst MarketTile = React.memo(({ tileSetup, card, classes, ...rest }: {\n  tileSetup: Slot,\n  card: Slot | ICard,\n  classes: any\n}) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card className={`${classes.card} ${classes[type.toLowerCase()]}`}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography className={classes.cardName} component=\"p\">\n            { isCard(card)\n                ? card.name\n                : \"-\"\n            }\n          </Typography>\n          <List>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Set:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { (isCard(card) && config.DATA[card.expansion] !== undefined)\n                    ? config.DATA[card.expansion].name\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Cost:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { isCard(card)\n                    ? card.cost\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} classes={classes} />\n      </Card>\n    </Grid>\n  )\n})\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport {\n  IMarketSetup,\n  ICard,\n  Slot\n} from '../../../types'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (\n  marketSetup: IMarketSetup, \n  cards: ReadonlyArray<Slot | ICard>, \n  classes: any\n) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        card={cards[i]}\n        classes={classes}\n      />\n    )\n  )\n}\n\nconst SupplyList = React.memo(({marketSetup, cards, classes}: {\n  marketSetup: IMarketSetup,\n  cards: ReadonlyArray<Slot | ICard>,\n  classes: any\n}) => (\n  <ListWrapper>\n    <Grid\n      container\n      spacing={16}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </Grid>\n  </ListWrapper>\n))\n\nexport default SupplyList\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nimport { IMarketSetup, IMarketSetups } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as SupplySelection from '../../../Redux/Store/Supply/Selection'\nimport * as SupplySetups from '../../../Redux/Store/Settings/SupplySetups'\n\n\nconst renderMarketOptions = (activeMarketSetups: ReadonlyArray<IMarketSetup>) =>\n  activeMarketSetups\n    .map(setup => (\n      <FormControlLabel\n        key={setup.id}\n        value={setup.id}\n        control={<Radio />}\n        label={setup.name}\n      />\n    ))\n\nconst MarketOptions = React.memo(({\n  activeMarketSetups,\n  allMarketSetups,\n  expansionHandler,\n  marketSetupId,\n  selectSetup,\n}: {\n  activeMarketSetups: ReadonlyArray<IMarketSetup>,\n  allMarketSetups: IMarketSetups,\n  expansionHandler: (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => void,\n  marketSetupId: string,\n  selectSetup: (setup: Readonly<IMarketSetup>) => SupplySelection.Action\n}) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={(event: React.ChangeEvent<any>) => {\n      expansionHandler(undefined, false)\n      selectSetup(allMarketSetups[event.currentTarget.value])\n    }}\n  >\n    { renderMarketOptions(activeMarketSetups) }\n  </RadioGroup>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  activeMarketSetups: SupplySetups.selectors.getActiveSetups(state),\n  allMarketSetups: SupplySetups.selectors.getCustomAndPredefined(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: SupplySelection.actions.selectSetup,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketOptions)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../../../Redux/Store'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\nimport * as SupplySelection from '../../../Redux/Store/Supply/Selection'\nimport * as SupplySetups from '../../../Redux/Store/Settings/SupplySetups'\nimport * as RandomSupply from '../../../Redux/Store/Supply/RandomSetup'\n\nimport useExpandedHandling from '../../../hooks/useExpansionHandling'\nimport { ICard, Slot, IMarketSetup } from '../../../types'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\n\nconst Supply = React.memo(({\n  classes,\n  cards,\n  createMarket,\n  hasStandaloneExpansionSelected,\n  marketSetup,\n  selectedExpansions,\n}: {\n  classes: any,\n  cards: ReadonlyArray<Slot | ICard>,\n  createMarket: (expansions: ReadonlyArray<string>, tiles: ReadonlyArray<Slot>) => RandomSupply.Action,\n  hasStandaloneExpansionSelected: boolean,\n  marketSetup: IMarketSetup,\n  selectedExpansions: ReadonlyArray<string>,\n}) => {\n  const { expanded, createExpansionHandler } = useExpandedHandling()\n  const expansionHandler = createExpansionHandler('setup')\n\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  const handleShuffle = () => {\n    createMarket(selectedExpansions, marketSetup.tiles)\n  }\n\n  return (\n    <React.Fragment>\n      <StyledExpansionPanel expanded={expanded === 'setup'} onChange={expansionHandler}>\n        <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            expansionHandler={expansionHandler}\n          />\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: SelectedExpansions.selectors.getHasStandaloneSet(state),\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsArray(state),\n  marketSetup: SupplySelection.selectors.getSelectedSetup(state),\n  cards: RandomSupply.selectors.getCards(state)\n})\nconst mapDispatchToProps = {\n  createMarket: RandomSupply.actions.createMarket,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(supplyStyles)(Supply))\n","const settingStyles = (theme: any) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import { combineReducers } from 'redux-loop'\n\nimport config from '../../../../config'\nimport * as Selected from './Selected'\n\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Selected: Selected.State\n}\n\nexport const initialState = {\n  Selected: Selected.initialState\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = Selected.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = combineReducers<State, Action>({\n  Selected: Selected.Reducer\n})\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getExpansionNamesByType = (type: string) => config.EXPANSIONS\n  .filter((expansion) => config.DATA[expansion].type === type)\n\nexport const selectors = {\n  getStandaloneExpansions: getExpansionNamesByType(\"standalone\").sort(),\n  getMiniExpansions: getExpansionNamesByType(\"mini\").sort(),\n  getPromos: getExpansionNamesByType(\"promo\")\n    .sort((a, b) => {\n      const promoA = config.DATA[a].name\n      const promoB = config.DATA[b].name\n\n      if (promoA < promoB) {\n        return -1;\n      }\n\n      if (promoA > promoB) {\n        return 1;\n      }\n\n      return 0;\n    }),\n}\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport config from '../../../config'\n\nconst ConfiguredSet = React.memo(({\n  set,\n  configurationOfSets,\n  handleChange\n}: {\n  set: string,\n  configurationOfSets: { [key: string]: boolean },\n  handleChange: (set: string) => void\n}) => (\n  <FormControlLabel\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={config.DATA[set].name}\n  />\n))\n\nexport default ConfiguredSet\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport ConfiguredSet from './ConfiguredSet'\n\n\nconst renderConfiguredSets = (\n  configurationOfSets: { [key: string]: boolean },\n  sets: ReadonlyArray<string>,\n  handleChange: (set: string) => void\n) => sets.map(set => (\n  <ConfiguredSet\n    key={set}\n    set={set}\n    configurationOfSets={configurationOfSets}\n    handleChange={handleChange}\n  />\n))\n\nconst CheckboxList = React.memo(({\n    label,\n    setConfig,\n    expansions,\n    changeHandler,\n    ...rest\n}: {\n    label: string,\n    setConfig: { [key: string]: boolean },\n    expansions: ReadonlyArray<string>,\n    changeHandler: (set: string) => void\n}) => (\n    <React.Fragment>\n        <FormLabel {...rest}>{label}</FormLabel>\n        <FormGroup {...rest} style={{ marginBottom: '20px' }}>\n        {\n            renderConfiguredSets(setConfig, expansions, changeHandler)\n        }\n        </FormGroup>\n    </React.Fragment>\n))\n\nexport default CheckboxList\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport config from '../../../config'\nimport { RootState } from '../../../Redux/Store'\nimport * as Expansions from '../../../Redux/Store/Settings/Expansions'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\n\nimport CheckboxList from './CheckboxList'\n\n\nconst ActiveSets = React.memo(({\n  allSetsSelected,\n  handleSelectAll,\n  standalones,\n  miniExpansions,\n  promos,\n  selectedExpansions,\n  handleChange\n}: {\n  allSetsSelected: boolean,\n  handleSelectAll: () => void,\n  standalones: ReadonlyArray<string>,\n  miniExpansions: ReadonlyArray<string>,\n  promos: ReadonlyArray<string>,\n  selectedExpansions: SelectedExpansions.State,\n  handleChange: (set: string) => void\n}) => (\n  <FormControl component={\"fieldset\" as \"div\"}>\n    <FormLabel/>\n    <FormGroup style={{ marginBottom: '20px' }}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={allSetsSelected}\n            onChange={handleSelectAll}\n            value={ allSetsSelected\n              ? \"Deselect All\"\n              : \"Select All\"\n            }\n          />\n        }\n        label={ allSetsSelected\n          ? \"Deselect All\"\n          : \"Select All\"\n        }\n      />\n    </FormGroup>\n    <CheckboxList\n      label=\"Standalone Sets\"\n      setConfig={selectedExpansions}\n      expansions={standalones}\n      changeHandler={handleChange}\n    />\n    <CheckboxList\n      label=\"Mini Expansions\"\n      setConfig={selectedExpansions}\n      expansions={miniExpansions}\n      changeHandler={handleChange}\n    />\n    <CheckboxList\n      label=\"Promos\"\n      setConfig={selectedExpansions}\n      expansions={promos}\n      changeHandler={handleChange}\n    />\n  </FormControl>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  standalones: Expansions.selectors.getStandaloneExpansions,\n  miniExpansions: Expansions.selectors.getMiniExpansions,\n  promos: Expansions.selectors.getPromos,\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsState(state),\n  allSetsSelected: SelectedExpansions.selectors.getAllSetsSelected(state)\n})\n\nexport default connect(mapStateToProps, {\n  handleSelectAll: SelectedExpansions.actions.toggleAll,\n  handleChange: SelectedExpansions.actions.toggleExpansion\n})(ActiveSets)\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\n\nimport useExpansionHandling from '../../../hooks/useExpansionHandling'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = React.memo(({ classes }: { classes: any }) => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n\n  return (\n    <StyledExpansionPanel expanded={expanded === 'sets'} onChange={createExpansionHandler('sets')}>\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Expansions</Typography>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets />\n      </ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n})\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport MuiTableCell from '@material-ui/core/TableCell'\n\nconst TableCell = withStyles({\n    root: {\n      padding: '4px 8px',\n      '&:first-child': {\n        paddingLeft: 16\n      },\n      '&:last-child': {\n        paddingRight: 8\n      },\n    }\n})(MuiTableCell)\n\nexport default TableCell\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiTableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport { ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport TableCell from './TableCell'\n\n\nconst TableRow = React.memo(({\n  card,\n  addToTop,\n  addToBottom,\n  shuffleIntoDeck,\n  classes\n}: {\n  card: ITurnOrderCard,\n  addToTop: (cardId: string) => TurnOrderGame.Action,\n  addToBottom: (cardId: string) => TurnOrderGame.Action,\n  shuffleIntoDeck: (cardId: string) => TurnOrderGame.Action,\n  classes: any\n}) => (\n  <MuiTableRow className={`${classes.cardRow} ${classes[card.cssClass]}`}>\n    <TableCell>\n      <Typography component='p'>{card.name}</Typography>\n    </TableCell>\n    <TableCell align=\"right\">\n      <IconButton\n        aria-label=\"Add to top\" \n        title=\"Add to top\" \n        onClick={() => addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </TableCell>\n    <TableCell align=\"right\">\n      <IconButton \n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </TableCell>\n    <TableCell align=\"right\">\n      <IconButton \n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </TableCell>\n  </MuiTableRow>\n))\n\nconst mapStateToProps = (state: RootState) => ({ })\n\nconst mapDispatchToProps = {\n  addToTop: TurnOrderGame.actions.addToTop,\n  addToBottom: TurnOrderGame.actions.addToBottom,\n  shuffleIntoDeck: TurnOrderGame.actions.shuffleIntoDeck,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow)\n","import { createStyles } from '@material-ui/core'\n\nconst turnOrderStyles = (theme: any) => createStyles({\n  cardDeck: {\n    marginTop: 24,\n  },\n  cardTable: {\n    marginTop: 24,\n    borderCollapse: 'collapse',\n  },\n  cardRow: {\n    borderBottom: '4px solid #fafafa',\n    '&:first-child': {\n      '& *': {\n        color: '#fff',\n      },\n    },\n  },\n  player1: {\n    background: '#F1F8E9',\n    '& td': {\n      borderColor: '#F1F8E9',\n    },\n    '&:first-child': {\n      background: '#8BC34A',\n      '& td': {\n        borderColor: '#8BC34A',\n      },\n    },\n  },\n  player2: {\n    background: '#FFF3E0',\n    '& td': {\n      borderColor: '#FFF3E0',\n    },\n    '&:first-child': {\n      background: '#FF9800',\n      '& td': {\n        borderColor: '#FF9800',\n      },\n    },\n  },\n  player3: {\n    background: '#E3F2FD',\n    '& td': {\n      borderColor: '#E3F2FD',\n    },\n    '&:first-child': {\n      background: '#2196F3',\n      '& td': {\n        borderColor: '#2196F3',\n      },\n    },\n  },\n  player4: {\n    background: '#F3E5F5',\n    '& td': {\n      borderColor: '#F3E5F5',\n    },\n    '&:first-child': {\n      background: '#9C27B0',\n      '& td': {\n        borderColor: '#9C27B0',\n      },\n    },\n  },\n  nemesis: {\n    background: '#ffebee',\n    '& td': {\n      borderColor: '#ffebee',\n    },\n    '&:first-child': {\n      background: '#f44336',\n      '& td': {\n        borderColor: '#f44336',\n      },\n    },\n  },\n  wild: {\n    background: '#FAFAFA',\n    '& td': {\n      borderColor: '#FAFAFA',\n    },\n    '&:first-child': {\n      background: '#9E9E9E',\n      '& td': {\n        borderColor: '#9E9E9E',\n      },\n    },\n  },\n  maelstrom: {\n    background: '#EFEBE9',\n    '& td': {\n      borderColor: '#EFEBE9',\n    },\n    '&:first-child': {\n      background: '#795548',\n      '& td': {\n        borderColor: '#795548',\n      },\n    },\n  }\n})\n\nexport default turnOrderStyles\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport MuiTable from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport TableRow from './TableRow'\nimport styles from './styles'\n\n\nconst renderTableRows = (\n  discard: ITurnOrderCard[],\n  classes: any\n) => discard.map((card, i) => (\n  <TableRow\n    key={i}\n    card={card}\n    classes={classes}\n  />\n))\n\nconst DiscardTable = React.memo(({\n  discard,\n  classes,\n}: {\n  discard: ITurnOrderCard[],\n  classes: any,\n}) => (\n <MuiTable className={classes.cardTable}>\n   <TableBody>\n     { renderTableRows(discard, classes) }\n   </TableBody>\n </MuiTable>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  discard: TurnOrderGame.selectors.getDiscard(state),\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DiscardTable))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport { ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\nimport * as TurnOrderConfig from '../../../Redux/Store/TurnOrder/Configuration'\n\nimport ShuffleButton from '../../ShuffleButton'\n\nimport DiscardTable from './DiscardTable'\n\nconst ActiveTurnOrder = React.memo(({\n  availableCards,\n  deck,\n  resetGame,\n  newRound,\n  drawCard,\n}: {\n  availableCards: ITurnOrderCard[],\n  deck: ITurnOrderCard[],\n  resetGame: () => TurnOrderGame.Action,\n  newRound: (availableCards: ITurnOrderCard[]) => TurnOrderGame.Action,\n  drawCard: () => TurnOrderGame.Action,\n}) => (\n  <React.Fragment>\n    {\n      deck.length === 0\n        ? (\n          <Button\n            size='large' \n            variant='contained' \n            color='secondary' \n            onClick={() => newRound(availableCards)}\n          >\n            New Round\n          </Button>\n        )\n        : (\n          <Button\n            size='large'\n            variant='contained'\n            color='secondary' \n            onClick={drawCard}\n          >\n            Draw a card\n          </Button>\n        )\n    }\n\n    <DiscardTable />\n\n    <ShuffleButton \n      color='primary'\n      variant='extended'\n      onClick={resetGame}\n    >\n        Reset Game\n    </ShuffleButton>\n  </React.Fragment>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  deck: TurnOrderGame.selectors.getDeck(state),\n  availableCards: TurnOrderConfig.selectors.getAvailableCards(state),\n})\n\nconst mapDispatchToProps = {\n  resetGame: TurnOrderGame.actions.resetGame,\n  drawCard: TurnOrderGame.actions.draw,\n  newRound: TurnOrderGame.actions.newRound\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveTurnOrder)\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\n\nimport {\n  ITurnOrderSetup\n} from '../../../types'\n\n\nconst renderCardNames = (turnOrderSetup: ITurnOrderSetup) => turnOrderSetup\n  .turnOrderCards\n  .map(\n    (card, i) => (\n      <Typography component='p' key={i}>\n        {card.name}\n      </Typography>\n    )\n  )\n\nconst CardNameDisplay = React.memo(({ classes, turnOrderSetup }: {\n  classes: any,\n  turnOrderSetup: ITurnOrderSetup\n}) => (\n  <Card className={classes.cardDeck}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>Turn order cards</Typography>\n      { renderCardNames(turnOrderSetup) }\n    </CardContent>\n  </Card>\n))\n\nexport default CardNameDisplay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\n\nimport { MODES, Mode } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderConfiguration from '../../../Redux/Store/TurnOrder/Configuration'\n\nconst renderModeOptions = () => MODES.map(mode => (\n  <FormControlLabel\n    key={mode}\n    value={mode}\n    control={<Radio />}\n    label={mode}\n  />\n))\n\nconst ModeSelection = React.memo(({\n  classes,\n  mode,\n  setMode,\n}: {\n  classes: any,\n  mode: Mode,\n  setMode: (mode: Mode) => TurnOrderConfiguration.Action\n}) => (\n  <Card className={classes.cardDeck}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>Mode</Typography>\n      <RadioGroup\n        aria-label='mode'\n        name='turnOrderMode'\n        value={mode}\n        onChange={\n          (event: React.ChangeEvent<any>) => setMode(event.currentTarget.value)\n        }\n      >\n       { renderModeOptions() }\n      </RadioGroup>\n    </CardContent>\n  </Card>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  mode: TurnOrderConfiguration.selectors.getMode(state),\n})\n\nconst mapDispatchToProps = {\n  setMode: TurnOrderConfiguration.actions.setMode\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModeSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport useExpansionHandling from '../../../hooks/useExpansionHandling'\nimport { ITurnOrderSetup } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderConfiguration from '../../../Redux/Store/TurnOrder/Configuration'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\n\nconst renderSetupOptions = () => Object.values(config.TURNORDERSETUPS).map(setup => (\n  <FormControlLabel\n    key={setup.id}\n    value={setup.id}\n    control={<Radio />}\n    label={setup.name}\n  />\n))\n\nconst SetupSelection = React.memo(({\n  selectSetup,\n  selectedSetup,\n}: {\n  selectSetup: (setupId: string) => TurnOrderConfiguration.Action,\n  selectedSetup: ITurnOrderSetup,\n}) => {\n  const { expanded, createExpansionHandler, setExpanded } = useExpansionHandling()\n\n  return (\n    <StyledExpansionPanel\n      expanded={expanded === 'setup'}\n      onChange={createExpansionHandler('setup')}\n    >\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>{selectedSetup.name}</Typography>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <RadioGroup\n          aria-label='Players'\n          name='turnOrderOptions'\n          value={selectedSetup.id}\n          onChange={\n            (event: React.ChangeEvent<any>) => {\n              selectSetup(event.currentTarget.value)\n              setExpanded(false)\n            }\n          }\n        >\n          {renderSetupOptions()}\n        </RadioGroup>\n      </ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )}\n)\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedSetup: TurnOrderConfiguration.selectors.getSelectedSetup(state)\n})\n\nconst mapDispatchToProps = {\n  selectSetup: TurnOrderConfiguration.actions.selectSetup\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ITurnOrderSetup, ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderConfig from '../../../Redux/Store/TurnOrder/Configuration'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport turnOrderStyles from './styles'\nimport CardNameDisplay from './CardNameDisplay'\nimport ModeSelection from './ModeSelection'\nimport SetupSelection from './SetupSelection'\n\nconst TurnOrderConfiguration = React.memo(({\n  currentConfiguration,\n  startGame,\n  classes\n}: {\n  currentConfiguration: ITurnOrderSetup,\n  startGame: (deck: ITurnOrderCard[]) => TurnOrderGame.Action,\n  classes: any\n}) => (\n  <React.Fragment>\n    <SetupSelection />\n    <ModeSelection classes={classes} />\n    <CardNameDisplay classes={classes} turnOrderSetup={currentConfiguration} />\n    <ShuffleButton\n      color='primary'\n      variant='extended'\n      onClick={() => startGame(currentConfiguration.turnOrderCards)}\n    >\n      Start Game\n    </ShuffleButton>\n  </React.Fragment>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  currentConfiguration: TurnOrderConfig.selectors.getConfiguration(state)\n})\n\nconst mapDispatchToProps = {\n  startGame: TurnOrderGame.actions.startGame\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(turnOrderStyles)(TurnOrderConfiguration))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport ActiveGame from './ActiveGame'\nimport TurnOrderConfiguration from './TurnOrderConfiguration'\n\n\nconst TurnOrder = React.memo(({\n  gameHasStarted,\n}: {\n  gameHasStarted: boolean,\n}) => (\n  <React.Fragment>\n    {gameHasStarted\n        ? <ActiveGame />\n        : <TurnOrderConfiguration />\n    }\n  </React.Fragment>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  gameHasStarted: TurnOrderGame.selectors.getHasStarted(state),\n})\n\nconst mapDispatchToProps = { }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TurnOrder)\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Nemeses from './pages/Nemeses'\nimport Mages from './pages/Mages'\nimport Supply from './pages/Supply'\nimport Settings from './pages/Settings'\nimport TurnOrder from './pages/TurnOrder'\n\nimport { ROUTES } from '../routes'\n\n\nconst Content = React.memo(({ classes, route, isLoading, ...rest }: {\n  classes: any,\n  route: string,\n  isLoading: boolean,\n  className: string\n}) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      isLoading\n        ? <CircularProgress />\n        : {\n          [ROUTES.nemeses]: <Nemeses />,\n          [ROUTES.mages]: <Mages />,\n          [ROUTES.supply]: <Supply />,\n          [ROUTES.turnOrder]: <TurnOrder />,\n          [ROUTES.settings]: <Settings />\n        }[route]\n    }\n  </div>\n))\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = React.memo(({ classes, drawerIsOpen, currentLocation, toggleDrawer }: {\n  classes: any,\n  drawerIsOpen: boolean,\n  currentLocation: string,\n  toggleDrawer: () => void\n}) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n))\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = React.memo(({ route, clickhandler, children }: {\n  route: string,\n  clickhandler: (route: string) => any,\n  children: any\n}) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n))\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes'\nimport RouteItem from './RouteItem'\n\nconst Routes = React.memo(({ locationhandler }: {\n  locationhandler: (route: string) => void\n}) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n))\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport Routes from '../Routes'\n\n\nconst DrawerMenu = React.memo(({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}: {\n  drawerIsOpen: boolean,\n  toggleDrawer: () => void,\n  classes: any,\n  moveTo: (route: string) => void\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography className={classes.appInfo}>\n      Version: {process.env.REACT_APP_VERSION}\n      <Link href=\"https://github.com/on3iro/aeons-end-randomizer\" color=\"inherit\" className={classes.githubLink} target=\"_blank\">\n        <img src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" className={classes.githubLogo} />Github\n      </Link>\n    </Typography>\n  </Drawer>\n))\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport classNames from 'classnames'\n\nimport { RootState } from '../../Redux/Store'\nimport * as MainContentLoading from '../../Redux/Store/MainContentLoading'\nimport * as SelectedExpansions from '../../Redux/Store/Settings/Expansions/Selected'\nimport * as TurnOrderConfig from '../../Redux/Store/TurnOrder/Configuration'\nimport { ROUTES } from '../../routes'\nimport Content from '../Content'\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\nconst MainApp = ({\n  classes,\n  fetchExpansionsFromDB,\n  fetchTurnOrderConfigFromDB,\n  isLoading,\n}: {\n  classes: any,\n  fetchExpansionsFromDB: () => SelectedExpansions.Action,\n  fetchTurnOrderConfigFromDB: () => TurnOrderConfig.Action,\n  isLoading: boolean,\n}) => {\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route: string) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    fetchExpansionsFromDB()\n    fetchTurnOrderConfigFromDB()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <Content\n        isLoading={isLoading}\n        route={currentLocation}\n        classes={classes}\n        className={\n          classNames(\n            classes.content,\n            { [classes.contentShift]: drawerIsOpen },\n            { [classes.loading]: isLoading }\n          )\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoading: MainContentLoading.selectors.getIsLoading(state)\n})\nconst mapDispatchToProps = {\n  fetchExpansionsFromDB: SelectedExpansions.actions.fetchFromDB,\n  fetchTurnOrderConfigFromDB: TurnOrderConfig.actions.fetchFromDB,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainApp)\n","import React from 'react';\n\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport blue from '@material-ui/core/colors/blue';\nimport pink from '@material-ui/core/colors/pink';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles'\n\nimport MainApp from './MainApp'\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = React.memo(({ classes }: { classes: any }) => (\n  <MuiThemeProvider theme={theme}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <MainApp classes={classes} />\n    </div>\n  </MuiThemeProvider>\n))\n\nexport default withStyles(styles, { withTheme: true })(App)\n","import { createStyles } from '@material-ui/core'\n\nconst drawerWidth = 240;\n\nexport const styles = (theme: any) => createStyles({\n  root: {\n    height: '100%',\n    display: 'flex',\n    paddingBottom: 72\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  appInfo: {\n    margin: theme.spacing.unit * 2\n  },\n  githubLink: {\n    display: 'block',\n    lineHeight: '24px',\n    marginTop: theme.spacing.unit * 2\n  },\n  githubLogo: {\n    width: '24px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing.unit\n  },\n  loading: {\n    textAlign: 'center',\n    paddingTop: '150px'\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Expansions from './Expansions'\nimport * as SupplySetups from './SupplySetups'\n\nexport type State = {\n  Expansions: Expansions.State,\n  SupplySetups: SupplySetups.State,\n}\n\nexport type Action =\n  Expansions.Action\n  | SupplySetups.Action\n\nexport const initialState = {\n  Expansions: Expansions.initialState,\n  SupplySetups: SupplySetups.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Expansions: Expansions.Reducer,\n  SupplySetups: SupplySetups.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Count from './Count'\nimport * as Recruited from './Recruited'\n\n\nexport type State = {\n  Count: Count.State,\n  Recruited: Recruited.State,\n}\n\nexport type Action =\n  Count.Action\n  | Recruited.Action\n\n  export const initialState = {\n    Count: Count.initialState,\n    Recruited: Recruited.initialState,\n  }\n\nexport const Reducer = combineReducers<State, Action>({\n  Count: Count.Reducer,\n  Recruited: Recruited.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Selection from './Selection'\nimport * as RandomSetup from './RandomSetup'\n\n\nexport type State = {\n  Selection: Selection.State,\n  RandomSetup: RandomSetup.State,\n}\n\nexport type Action =\n  Selection.Action\n  | RandomSetup.Action\n\nexport const initialState = {\n  Selection: Selection.initialState,\n  RandomSetup: RandomSetup.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Selection: Selection.Reducer,\n  RandomSetup: RandomSetup.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Configuration from './Configuration'\nimport * as ActiveGame from './ActiveGame'\n\n\nexport type State = {\n  Configuration: Configuration.State,\n  ActiveGame: ActiveGame.State,\n}\n\nexport type Action =\n  Configuration.Action\n  | ActiveGame.Action\n\nexport const initialState = {\n  Configuration: Configuration.initialState,\n  ActiveGame: ActiveGame.initialState,\n}\n\n// TODO extract initial fetch from subReducers and use here\n// (i am not yet sure of how to actually do that, but it would be neat =D)\nexport const Reducer = combineReducers<State, Action>({\n  Configuration: Configuration.Reducer,\n  ActiveGame: ActiveGame.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as MainContentLoading from './MainContentLoading'\nimport * as Settings from './Settings'\nimport * as Nemesis from './Nemesis'\nimport * as Mages from './Mages'\nimport * as Supply from './Supply'\nimport * as TurnOrder from './TurnOrder'\n\nexport type RootState = {\n  Settings: Settings.State,\n  MainContentLoading: MainContentLoading.State,\n  Nemesis: Nemesis.State,\n  Mages: Mages.State,\n  Supply: Supply.State,\n  TurnOrder: TurnOrder.State,\n}\n\nexport type RootAction =\n  Settings.Action\n  | MainContentLoading.Action\n  | Nemesis.Action\n  | Mages.Action\n  | Supply.Action\n  | TurnOrder.Action\n\nexport const initialState = {\n  Settings: Settings.initialState,\n  MainContentLoading: MainContentLoading.initialState,\n  Nemesis: Nemesis.initialState,\n  Mages: Mages.initialState,\n  Supply: Supply.initialState,\n  TurnOrder: TurnOrder.initialState,\n}\n\nexport const RootReducer = combineReducers<RootState, RootAction>({\n  Settings: Settings.Reducer,\n  MainContentLoading: MainContentLoading.Reducer,\n  Nemesis: Nemesis.Reducer,\n  Mages: Mages.Reducer,\n  Supply: Supply.Reducer,\n  TurnOrder: TurnOrder.Reducer,\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './Redux/configureStore'\nimport { initialState } from './Redux/Store'\n\nconst store = configureStore(initialState)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// @ts-ignore\nserviceWorker.register();\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { install, StoreCreator } from 'redux-loop'\n\nimport { RootReducer, RootState } from './Store'\n\nconst configureStore = (initialState: RootState) => {\n  // Add middleware to this array if necessary\n  const middleWares: any[] = [ ]\n\n  const enhancers = [\n    applyMiddleware(...middleWares),\n    install<RootState>()\n  ]\n\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      // @ts-ignore\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : compose\n\n  const enhancedCreateStore = createStore as StoreCreator\n  const store = enhancedCreateStore(\n    RootReducer,\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  return store\n}\n\nexport {\n  configureStore as default\n}\n"],"sourceRoot":""}