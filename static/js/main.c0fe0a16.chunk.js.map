{"version":3,"sources":["routes.js","config/index.js","config/aeonsData.js","config/marketSetups.js","globalContexts.js","hooks/useSelectedSets.jsx","components/ShuffleButton.jsx","components/pages/helpers.js","components/pages/Nemeses.jsx","components/pages/Mages/MageCountPicker.jsx","components/pages/Mages/MageList.jsx","components/pages/Mages/index.jsx","components/pages/Supply/supplyStyles.js","components/pages/Supply/ListWrapper.jsx","components/pages/Supply/MarketTile.jsx","components/pages/Supply/SupplyList.jsx","components/pages/Supply/MarketOptions.jsx","components/pages/Supply/index.jsx","components/pages/Settings/settingStyles.js","components/pages/Settings/ActiveSets.jsx","components/pages/Settings/index.jsx","components/DiscardTableCell.jsx","components/turnOrderSetups.js","components/TurnOrder.jsx","components/Content.jsx","components/App/TopBar.jsx","components/RouteItem.jsx","components/Routes.jsx","components/App/DrawerMenu.jsx","components/App/index.jsx","components/App/appStyles.js","serviceWorker.js","index.js"],"names":["ROUTES","config","DATA","sets","WE","nemeses","set","name","id","mages","cards","type","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","MARKETSETUPS","market1","tiles","operation","threshold","market2","market3","values","market4","market5","market6","random","SetConfigurationContext","React","createContext","useSelectedSets","configurationOfSets","useContext","selectedSets","Object","keys","filter","key","noSelectedSetsComponent","length","react_default","a","createElement","Typography_default","paragraph","ShuffleButton","withStyles","root","position","bottom","right","Fab","createSlotList","amount","Array","from","getListOfAvailableEntity","entity","reduce","acc","concat","toConsumableArray","getRandomEntity","availableEntities","Math","floor","createEntityList","slotList","slot","i","last","hasCostOperation","undefined","newEntity","card","setupBlueprint","indexOf","filterByCost","result","Nemeses","_useSelectedSets","_useState","useState","_useState2","slicedToArray","nemesis","setNemesis","availableNemeses","Fragment","components_ShuffleButton","onClick","color","variant","MageCountPicker","_ref","selectedValue","handleAmountChange","FormControl_default","component","FormLabel_default","RadioGroup_default","aria-label","value","onChange","FormControlLabel_default","control","Radio_default","label","MageList","List_default","map","mage","ListItem_default","ListItemText_default","Mages","setMages","_useState3","_useState4","setAmount","availableMages","hasEmptySlots","Mages_MageCountPicker","toString","e","parseInt","target","Mages_MageList","supplyStyles","theme","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","gridList","width","height","minWidth","ListWrapper","styled","withConfig","displayName","componentId","MarketTile","tileSetup","index","classes","rest","objectWithoutProperties","GridListTile_default","assign","cols","Card_default","className","style","CardContent_default","title","gutterBottom","join","thresholdValue","getOperationString","pos","SupplyList","marketSetup","Supply_ListWrapper","GridList_default","cellHeight","spacing","Supply_MarketTile","renderTiles","MarketOptions","marketSetupId","changeHandler","setup","getRandomCardsByType","availableCards","tileSetups","cardType","cardSlots","availableCardsOfType","_ref2","_ref3","expanded","setExpanded","setMarketSetup","emptySlotList","_useState5","_useState6","setCards","panel","ExpansionPanel_default","event","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","_createSupply","gems","relics","spells","createSupply","settingStyles","ActiveSets","allSetsSelected","handleSelectAll","handleChange","Checkbox_default","checked","FormGroup_default","renderConfiguredSets","_useContext","setSets","every","val","Settings_ActiveSets","newSets","objectSpread","defineProperty","setToDb","DiscardTableCell","padding","TableCell","turnOrderSetups","onePlayerThreeToc","turnOrderCards","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","shuffleDeck","deck","newCard","getRandomTurnOrderCard","currentDeck","TurnOrder","TURNORDERSETUPS","turnOrderSetup","setTurnOrderSetup","started","gameState","setGameState","discard","turnOrderState","setTurnOrderState","Button_default","cardDrawn","drawTurnOrderCard","Table_default","TableBody_default","TableRow_default","components_DiscardTableCell","align","IconButton_default","cardId","cardToAdd","find","addToTop","index_es","addToBottom","cardToShuffle","newDeck","shuffledDeck","shuffleIntoDeck","createTurnOrderDeck","Content","_ROUTES$nemeses$ROUTE","route","drawerHeader","pages_Nemeses","pages_Mages","pages_Supply","components_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","primary","Routes","locationhandler","components_RouteItem","Build_default","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","process","display","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","alignItems","mixins","toolbar","justifyContent","content","flexGrow","unit","contentShift","withTheme","setDrawerIsOpen","setCurrentLocation","defaultSets","useEffect","getFromDb","then","CssBaseline_default","App_TopBar","App_DrawerMenu","Provider","components_Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0fe0a16.chunk.js","sourcesContent":["export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { DATA } from './aeonsData'\nimport MARKETSETUPS from './marketSetups'\n\nexport default {\n  DATA,\n  MARKETSETUPS\n}\n","export const DATA = {\n  sets: [\"WE\", \"AE\", \"BS\", \"Legacy\", \"Nameless\", \"Depths\", \"TV\", \"OD\"],\n  \"WE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"nemeses\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"nemeses\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Rage Borne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","export default {\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n}\n\n","import React from 'react'\n\nexport const SetConfigurationContext = React.createContext(null)\n\n","import React, { useContext } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from 'globalContexts'\n\n/**\n * Custom hook to make the users configured sets available to a component.\n * If no sets have been selected a simple noSelectedSetsComponent will\n * be created, which can be rendered to warn the user. (this component will otherwise be null)\n *\n * returns { selectedSets, noSelectedSetsComponent } \n  */\nconst useSelectedSets = () => {\n  const { configurationOfSets } = useContext(SetConfigurationContext)\n  const selectedSets = Object\n    .keys(configurationOfSets)\n    .filter( key => configurationOfSets[key])\n  const noSetsSelected = selectedSets.length < 1\n\n  const noSelectedSetsComponent = noSetsSelected\n    ? (<Typography paragraph>\n        There is currently no set selected. Please activate at least one set in the settings.\n      </Typography>)\n    : null\n\n  return {\n    selectedSets,\n    noSelectedSetsComponent\n  }\n}\n\nexport default useSelectedSets\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '30px',\n    right: '30px'\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import config from 'config'\n\n/**\n * Creates a list containing \"EMPTY\" strings. The length of the list\n * is determined by the amount of empty slots (\"amount\" parameter)\n  */\nexport const createSlotList = (amount) => {\n    return Array.from({ length: amount }, () => \"EMPTY\");\n}\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = {\n *    AE: { mages: [ \"a\", \"b\" ] },\n *    WE: { mages: [ \"c\", \"d\" ] }\n *  }\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ \"a\", \"b\", \"c\", \"d\" ]\n  */\nexport const getListOfAvailableEntity = (selectedSets, entity) => selectedSets.reduce(\n  (acc, set) => {\n    return [ ...acc, ...config.DATA[set][entity] ]\n  },[]\n)\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = (availableEntities) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (card, setupBlueprint) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"=\": {\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\n/**\n * Given a list of available entities (e.g. \"mages\" or \"cards\") and a list\n * of slots to fill, this returns a new list where each \"slot\" has been replaced\n * by a random entity from the list of available entities.\n * If the entities have an operation specified, the available entities will\n * be filtered by cost and operation before a random entity is determined. (currently only relevant for cards)\n * Also do note, that each entity is unique and therefore will be removed from the\n * list of available entities for the rest of the function run, as soon as it has been\n * picked for a slot once.\n  */\nexport const createEntityList = (availableEntities, slotList) => {\n  const entities = slotList.reduce(\n    (acc, slot, i) => {\n      const last = i === slotList.length - 1\n\n      // Check for cards\n      const hasCostOperation = slot.operation !== undefined\n      const newEntity = hasCostOperation\n        ? getRandomEntity(acc.availableEntities.filter(entity => filterByCost(entity, slot)))\n        : getRandomEntity(acc.availableEntities)\n\n      if (last) {\n        return [ ...acc.result, newEntity ]\n      }\n\n      // Make sure each entity will only be added to the result list once\n      const remainingEntitites = acc.availableEntities.filter(\n        entity => entity.name !== newEntity.name\n      )\n\n      return {\n        availableEntities: remainingEntitites,\n        result: [ ...acc.result, newEntity]\n      }\n  }, { availableEntities, result: [] })\n\n  return entities\n}\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from './helpers.js'\n\n\nconst Nemeses = () => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [nemesis, setNemesis] = useState(null)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableNemeses = getListOfAvailableEntity(selectedSets, \"nemeses\")\n  const handleShuffle = () => {\n    setNemesis(getRandomEntity(availableNemeses))\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? <Typography>{nemesis['name']}, {nemesis['set']}</Typography>\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default Nemeses\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst MageCountPicker = ({ selectedValue, handleAmountChange }) => (\n  <FormControl component=\"fieldset\">\n    <FormLabel component=\"legend\">Amount of Mages</FormLabel>\n    <RadioGroup\n      aria-label=\"Amount of Mages\"\n      name=\"mageAmount\"\n      value={selectedValue}\n      onChange={handleAmountChange}\n    >\n      <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n      <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n      <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n      <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nexport default MageCountPicker\n","import React from 'react'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst MageList = ({ mages }) => (\n  <List>\n    {\n      mages.map(mage => (\n        <ListItem key={mage.name}>\n          <ListItemText>{mage.name}, {mage.set}</ListItemText>\n        </ListItem>\n      ))\n    }\n  </List>\n)\n\nexport default MageList\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from 'components/pages/helpers.js'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\n\n\nconst Mages = () => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [mages, setMages] = useState([])\n  const [amount, setAmount] = useState(1)\n  const handleAmountChange = (e) => {\n    setAmount(parseInt(e.target.value))\n  }\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableMages = getListOfAvailableEntity(selectedSets, \"mages\")\n  const handleShuffle = () => {\n    const slotList = createSlotList(amount)\n    const mages = createEntityList(availableMages, slotList)\n    setMages(mages)\n  }\n\n  const hasEmptySlots = mages.indexOf(\"EMPTY\") > -1 || mages.length === 0\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={amount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        hasEmptySlots\n          ? <Typography>Tap button to recruit mages</Typography>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default Mages\n","const supplyStyles = (theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  gridList: {\n    width: 330,\n    height: 450,\n  },\n  card: {\n    minWidth: 30,\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 20px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport Typography from '@material-ui/core/Typography'\n\nconst getOperationString = (operation, values, threshold) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}\n\nconst MarketTile = ({ tileSetup, index, cards, classes, ...rest }) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <GridListTile cols={1} {...rest}>\n      <Card className={classes.card} style={{ height: '145px' }}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography component=\"p\">\n            { cards[index].name !== undefined ? cards[index].name : \"-\" }\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            Set: { cards[index].set !== undefined ? cards[index].set : \"-\" }\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            Cost: { cards[index].cost !== undefined ? cards[index].cost : \"-\" }\n          </Typography>\n        </CardContent>\n      </Card>\n    </GridListTile>\n  )\n}\n\nexport default MarketTile\n","import React from 'react'\n\nimport GridList from '@material-ui/core/GridList'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (marketSetup, cards, classes) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        index={i}\n        cards={cards}\n        classes={classes}\n        style={{ height: '150px' }}\n      />\n    )\n  )\n}\n\nconst SupplyList = ({marketSetup, cards, classes}) => (\n  <ListWrapper>\n    <GridList\n      cellHeight={180}\n      className={classes.gridList}\n      cols={2}\n      spacing={8}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </GridList>\n  </ListWrapper>\n)\n\nexport default SupplyList\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport config from 'config'\n\nconst renderMarketOptions = () => Object\n  .values(config.MARKETSETUPS)\n  .map(setup => (\n    <FormControlLabel\n      key={setup.id}\n      value={setup.id}\n      control={<Radio />}\n      label={setup.name}\n    />\n  ))\n\nconst MarketOptions = ({ marketSetupId, changeHandler }) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={changeHandler}\n  >\n    { renderMarketOptions() }\n  </RadioGroup>\n)\n\nexport default MarketOptions\n","import React, { useState } from 'react'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\nimport config from 'config'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from '../helpers.js'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (availableCards, tileSetups, cardType) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createEntityList(availableCardsOfType, cardSlots)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nconst createSupply = (selectedSets, tileSetups) => {\n  const availableCards = getListOfAvailableEntity(selectedSets, \"cards\")\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\n// Component\nconst Supply = ({ classes }) => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState(null)\n  const handleExpansion = (panel) => (event, expanded) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  // Market setup handling\n  const [ marketSetup, setMarketSetup ] = useState(config.MARKETSETUPS['market1'])\n  const handleMarketSetup = (event) => {\n    setMarketSetup(config.MARKETSETUPS[event.target.value])\n    setExpanded(false)\n  }\n\n  // Set handling\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const emptySlotList = createSlotList(9)\n  const [cards, setCards] = useState(emptySlotList)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const handleShuffle = () => {\n    const { gems, relics, spells } = createSupply(selectedSets, marketSetup.tiles)\n    setCards([...gems, ...relics, ...spells])\n  }\n\n  return (\n    <React.Fragment>\n      <ExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            changeHandler={handleMarketSetup}\n          />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n}\n\nexport default withStyles(supplyStyles)(Supply)\n","const settingStyles = (theme) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\n\nconst renderConfiguredSets = (configurationOfSets, sets, handleChange) => sets.map(set => (\n  <FormControlLabel\n    key={set}\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={set}\n  />\n))\n\nconst ActiveSets = ({\n  allSetsSelected,\n  handleSelectAll,\n  sets,\n  configurationOfSets,\n  handleChange\n}) => (\n  <FormControl component=\"fieldset\">\n    <FormLabel component=\"legend\">Select active sets</FormLabel>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={allSetsSelected}\n          onChange={handleSelectAll}\n          value={ allSetsSelected\n            ? \"Deselect All\"\n            : \"Select All\"\n          }\n        />\n      }\n      label={ allSetsSelected\n        ? \"Deselect All\"\n        : \"Select All\"\n      }\n    />\n    <FormGroup>\n      {\n        renderConfiguredSets(configurationOfSets, sets, handleChange)\n      }\n    </FormGroup>\n  </FormControl>\n)\n\nexport default ActiveSets\n","import React, { useContext, useState } from 'react'\n\nimport { set as setToDb } from 'idb-keyval'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = ({ classes }) => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState(null)\n  const handleExpansion = (panel) => (event, expanded) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  // Sets\n  const { configurationOfSets, sets, setSets } = useContext(SetConfigurationContext)\n  const handleChange= (set) => {\n    const newSets = { ...configurationOfSets, [set]: !configurationOfSets[set] }\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  const allSetsSelected = Object.values(configurationOfSets).every(val => val === true)\n  const handleSelectAll = () => {\n    const newSets = sets.reduce((acc, set) => {\n      return { ...acc, [set]: !allSetsSelected }\n    }, {})\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  return (\n    <ExpansionPanel expanded={expanded === 'sets'} onChange={handleExpansion('sets')}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Configured Sets</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets\n          allSetsSelected={allSetsSelected}\n          handleSelectAll={handleSelectAll}\n          sets={sets}\n          configurationOfSets={configurationOfSets}\n          handleChange={handleChange}\n        />\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst DiscardTableCell = withStyles({\n    root: {\n        padding: '4px'\n    }\n})(TableCell)\n\nexport default DiscardTableCell","export default {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player with 3 turn order cards',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 1' },\n      { id: 4, name: 'Nemesis' },\n      { id: 5, name: 'Nemesis' }\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player with 4 turn order cards',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 1' },\n      { id: 4, name: 'Player 1' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 2' },\n      { id: 4, name: 'Player 2' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 2' },\n      { id: 3, name: 'Player 3' },\n      { id: 4, name: 'Wild' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 2' },\n      { id: 3, name: 'Player 3' },\n      { id: 4, name: 'Player 4' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  }\n}\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport ShuffleButton from './ShuffleButton.jsx'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport DiscardTableCell from './DiscardTableCell.jsx'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport TURNORDERSETUPS from './turnOrderSetups.js'\n\nconst renderTurnOrderOptions = () => Object.values(TURNORDERSETUPS).map(setup => (\n    <FormControlLabel\n        key={setup.id}\n        value={setup.id}\n        control={<Radio />}\n        label={setup.name} />\n))\n\nconst createTurnOrderDeck = (turnOrderSetup) => {\n    return turnOrderSetup.turnOrderCards.map((card, i) => {\n        return (\n            <Typography component='p' key={i}>\n                {card.name}\n            </Typography>\n        )\n    })\n}\n\n\nconst getRandomTurnOrderCard = (deck) => {\n    return deck[Math.floor(Math.random() * deck.length)]\n}\n\nconst shuffleDeck = (deck) => {\n    return deck.reduce(\n        (acc, card, i) => {\n            const newCard = getRandomTurnOrderCard(acc.currentDeck)\n            const last = i === deck.length - 1\n\n            if (last) {\n                return [...acc.result, newCard]\n            }\n\n            const newDeck = acc.currentDeck.filter(card => card.id !== newCard.id)\n\n            return {\n               currentDeck: newDeck,\n               result: [...acc.result, newCard]\n            }\n        }, {\n            currentDeck: deck,\n            result: []\n        })\n}\n\nconst TurnOrder = () => {\n\n  // Turn order setup handling\n  const [turnOrderSetup, setTurnOrderSetup] = useState(TURNORDERSETUPS['onePlayerThreeToc'])\n  const handleTurnOrderSetup = (event) => {\n    setTurnOrderSetup(TURNORDERSETUPS[event.target.value])\n  }\n\n  // Game state handling\n  const [gameState, setGameState] = useState({\n    started: false\n  })\n\n  const handleStartGame = () => {\n    setGameState({\n      started: true\n    })\n    setTurnOrderState({\n        ...turnOrderState,\n        deck: shuffleDeck(turnOrderSetup.turnOrderCards)\n    })\n  }\n\n  const handleResetGame = () => {\n    setGameState({\n      started: false\n    })\n      setTurnOrderState({\n          ...turnOrderState,\n          discard: []\n      })\n  }\n\n  // Turn order state handling\n  const [turnOrderState, setTurnOrderState] = useState({\n    deck: [],\n    discard: []\n  })\n\n  const drawTurnOrderCard = (deck) => {\n      if(deck.length === 0) return\n\n      const cardDrawn = deck[deck.length - 1];\n\n      setTurnOrderState({\n          deck: deck.filter(card => card.id !== cardDrawn.id),\n          discard: [...turnOrderState.discard, cardDrawn]\n      })\n  }\n\n  const startNewRound = () => {\n      setTurnOrderState({\n          deck: shuffleDeck(turnOrderSetup.turnOrderCards),\n          discard: []\n      })\n  }\n\n  const addToTop = (cardId) => {\n      const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n      setTurnOrderState({\n          deck: [...turnOrderState.deck, cardToAdd],\n          discard: turnOrderState.discard.filter(card => card.id !== cardId)\n      })\n  }\n\n  const addToBottom = (cardId) => {\n      const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n      setTurnOrderState({\n          deck: [cardToAdd, ...turnOrderState.deck],\n          discard: turnOrderState.discard.filter(card => card.id !== cardId)\n      })\n  }\n\n    const shuffleIntoDeck = (cardId) => {\n        const cardToShuffle = turnOrderState.discard.find(card => card.id === cardId)\n        const newDeck = [...turnOrderState.deck, cardToShuffle]\n        const shuffledDeck = shuffleDeck(newDeck)\n\n        setTurnOrderState({\n            deck: shuffledDeck,\n            discard: turnOrderState.discard.filter(card => card.id !== cardId)\n        })\n    }\n\n  return (\n    <React.Fragment>\n      {gameState.started\n         ? (\n         <React.Fragment>\n             {turnOrderState.deck.length === 0\n                 ? (<Button color='secondary' onClick={startNewRound}>New Round</Button>)\n                 : (<Button color='secondary' onClick={() => drawTurnOrderCard(turnOrderState.deck)}>Draw a card</Button>)}\n             <Table>\n                 <TableBody>\n            {turnOrderState.discard.map((card, i) => {\n                return (\n\n                <TableRow key={i}>\n                    <DiscardTableCell>\n                        <Typography component='p'>{card.name}</Typography>\n                    </DiscardTableCell>\n                    <DiscardTableCell align=\"center\">\n                        <IconButton aria-label=\"Add to top\" title=\"Add to top\" onClick={() => addToTop(card.id)}>\n                            <Publish fontSize=\"small\" />\n                        </IconButton>\n                    </DiscardTableCell>\n                    <DiscardTableCell align=\"center\">\n                        <IconButton aria-label=\"Add to bottom\" title=\"Add to bottom\" onClick={() => addToBottom(card.id)}>\n                            <GetApp fontSize=\"small\" />\n                        </IconButton>\n                    </DiscardTableCell>\n                    <DiscardTableCell align=\"center\">\n                        <IconButton aria-label=\"Shuffle into Turn Order Deck\" title=\"Shuffle into Turn Order Deck\" onClick={() => shuffleIntoDeck(card.id)}>\n                            <Loop fontSize=\"small\" />\n                        </IconButton>\n                    </DiscardTableCell>\n                </TableRow>\n\n            )})}\n                 </TableBody>\n             </Table>\n\n            <ShuffleButton color='primary' variant='extended' onClick={handleResetGame}>\n                Reset Game\n            </ShuffleButton>\n         </React.Fragment>\n         )\n         : (\n         <React.Fragment>\n           <RadioGroup\n             aria-label='Players'\n             name='turnOrderOptions'\n             value={turnOrderSetup.id}\n             onChange={handleTurnOrderSetup}>\n             {renderTurnOrderOptions()}\n           </RadioGroup>\n           {createTurnOrderDeck(turnOrderSetup)}\n           <ShuffleButton color='primary' variant='extended' onClick={handleStartGame}>\n             Start Game\n           </ShuffleButton>\n         </React.Fragment>\n         )}\n    </React.Fragment>\n  )\n}\n\nexport default TurnOrder\n","import React from 'react'\n\nimport Nemeses from 'components/pages/Nemeses'\nimport Mages from 'components/pages/Mages'\nimport Supply from 'components/pages/Supply'\nimport Settings from 'components/pages/Settings'\nimport TurnOrder from './TurnOrder.jsx'\n\nimport { ROUTES } from 'routes'\n\n\nconst Content = ({ classes, route, ...rest }) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      {\n        [ROUTES.nemeses]: <Nemeses />,\n        [ROUTES.mages]: <Mages />,\n        [ROUTES.supply]: <Supply />,\n        [ROUTES.turnOrder]: <TurnOrder />,\n        [ROUTES.settings]: <Settings />\n      }[route]\n    }\n  </div>\n)\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = ({ classes, drawerIsOpen, currentLocation, toggleDrawer }) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n)\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = ({ route, clickhandler, children }) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n)\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes.js'\nimport RouteItem from './RouteItem.jsx'\n\nconst Routes = ({ locationhandler }) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n)\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\n\nimport Routes from 'components/Routes.jsx'\n\nconst DrawerMenu = ({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography>{process.env.REACT_APP_VERSION}</Typography>\n  </Drawer>\n)\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react';\n\nimport { get as getFromDb } from 'idb-keyval'\n\nimport classNames from 'classnames'\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles.js'\nimport { ROUTES } from 'routes.js'\nimport config from 'config'\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport Content from 'components/Content.jsx'\n\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\n\nconst App = ({ classes, theme }) => {\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const defaultSets = config.DATA.sets.reduce(\n    (acc, set) => ({ ...acc, [set]: false }) , {}\n  )\n  const [ configurationOfSets, setSets ] = useState(defaultSets)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    getFromDb('sets').then(sets => {\n      if (sets !== undefined) {\n        setSets(sets)\n      }\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <SetConfigurationContext.Provider value={{ configurationOfSets, setSets, sets: config.DATA.sets }}>\n        <Content\n          route={currentLocation}\n          classes={classes}\n          className={classNames(classes.content, {\n            [classes.contentShift]: drawerIsOpen,\n          })}\n        />\n      </SetConfigurationContext.Provider>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","const drawerWidth = 240;\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}