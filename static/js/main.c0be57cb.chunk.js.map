{"version":3,"sources":["routes.js","config/index.js","config/aeonsData.js","config/marketSetups.js","config/turnOrderSetups.js","globalContexts.js","hooks/useSelectedSets.jsx","components/ShuffleButton.jsx","components/pages/helpers.js","components/pages/Nemeses/nemesesStyles.js","components/pages/Nemeses/index.jsx","components/pages/Mages/MageCountPicker.jsx","components/pages/Mages/MageGridWrapper.jsx","components/pages/Mages/MageCard.jsx","components/pages/Mages/mageStyles.jsx","components/pages/Mages/MageList.jsx","components/pages/Mages/EmptyMageListHint.jsx","components/pages/Mages/index.jsx","hooks/useExpansionHandling.jsx","components/StyledExpansionPanel.jsx","components/StyledExpansionPanelSummary.jsx","components/pages/Supply/supplyStyles.js","components/pages/Supply/ListWrapper.jsx","components/pages/Supply/CardTypeIcon.jsx","components/pages/Supply/MarketTile.jsx","components/pages/Supply/SupplyList.jsx","components/pages/Supply/MarketOptions.jsx","components/pages/Supply/index.jsx","components/pages/Settings/settingStyles.js","components/pages/Settings/ConfiguredSet.jsx","components/pages/Settings/ActiveSets.jsx","components/pages/Settings/index.jsx","components/pages/TurnOrder/TurnOrderTableCell.jsx","components/pages/TurnOrder/TurnOrderTableRow.jsx","components/pages/TurnOrder/turnOrderStyles.js","components/pages/TurnOrder/TurnOrderTable.jsx","components/pages/TurnOrder/ActiveTurnOrder.jsx","components/pages/TurnOrder/TurnOrderSetup.jsx","components/pages/TurnOrder/hooks.js","components/pages/TurnOrder/index.jsx","components/Content.jsx","components/App/TopBar.jsx","components/RouteItem.jsx","components/Routes.jsx","components/App/DrawerMenu.jsx","components/App/index.jsx","components/App/appStyles.js","serviceWorker.js","index.js"],"names":["ROUTES","config","DATA","sets","WE","id","name","nemeses","set","mages","cards","type","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","MARKETSETUPS","market1","tiles","operation","threshold","market2","market3","values","market4","market5","market6","random","TURNORDERSETUPS","onePlayerThreeToc","turnOrderCards","cssClass","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","SetConfigurationContext","React","createContext","useSelectedSets","configurationOfSets","useContext","selectedSets","Object","keys","filter","key","noSelectedSetsComponent","length","react_default","a","createElement","Typography_default","paragraph","ShuffleButton","withStyles","root","position","bottom","right","zIndex","Fab","createSlotList","amount","Array","from","getListOfAvailableEntity","entity","reduce","acc","concat","toConsumableArray","getRandomEntity","availableEntities","Math","floor","createEntityList","blueprintList","blueprint","i","last","hasCostOperation","undefined","newEntity","card","setupBlueprint","indexOf","filterByCost","result","nemesesStyles","theme","cardContent","cardIcon","fontSize","opacity","color","Nemeses","memo","_ref","classes","_useSelectedSets","_useState","useState","_useState2","slicedToArray","nemesis","setNemesis","availableNemeses","Fragment","Card_default","className","CardContent_default","variant","component","components_ShuffleButton","onClick","MageCountPicker","selectedValue","handleAmountChange","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","styled","withConfig","displayName","componentId","MageCard","mage","Grid_default","item","xs","md","mageStyles","MageList","Mages_MageGridWrapper","container","spacing","map","Mages_MageCard","EmptyMageListHint","marginTop","Typography","Mages","setMages","_useState3","_useState4","setAmount","availableMages","hasEmptySlots","Mages_MageCountPicker","toString","e","parseInt","target","Mages_EmptyMageListHint","Mages_MageList","slotList","useExpansionHandling","expanded","setExpanded","handleExpansion","panel","event","StyledExpansionPanel","borderRadius","&:before","display","margin","ExpansionPanel","StyledExpansionPanelSummary","minHeight","&$expanded","content","ExpansionPanelSummary","supplyStyles","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","minWidth","cardName","fontWeight","cardInfoListItem","padding","marginRight","infoText","gem","background","relic","spell","gemIcon","relicIcon","spellIcon","ListWrapper","CardTypeIcon","typeClass","MarketTile","tileSetup","index","rest","objectWithoutProperties","assign","toLowerCase","title","join","thresholdValue","getOperationString","List_default","ListItem_default","Supply_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","MarketOptions","marketSetupId","changeHandler","setup","getRandomCardsByType","availableCards","tileSetups","cardType","cardSlots","availableCardsOfType","_ref2","Supply","_ref3","_useExpansionHandling","setMarketSetup","setCards","components_StyledExpansionPanel","components_StyledExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","_createSupply","gems","relics","spells","createSupply","settingStyles","ConfiguredSet","handleChange","Checkbox_default","checked","ActiveSets","allSetsSelected","handleSelectAll","FormGroup_default","Settings_ConfiguredSet","renderConfiguredSets","Settings","_useContext","setSets","every","val","Settings_ActiveSets","newSets","objectSpread","defineProperty","setToDb","DiscardTableCell","&:first-child","paddingLeft","&:last-child","paddingRight","TableCell","TurnOrderTableRow","handlers","TableRow_default","cardRow","TurnOrderTableCell","align","IconButton_default","addToTop","index_es","addToBottom","shuffleIntoDeck","turnOrderStyles","cardDeck","cardTable","borderCollapse","borderBottom","& *","player1","& td","borderColor","player2","player3","player4","wild","TurnOrderTable","Table_default","TableBody_default","TurnOrder_TurnOrderTableRow","renderTableRows","ActiveTurnOrder","deckIsEmpty","discard","Button_default","startNewRound","drawTurnOrderCard","TurnOrder_TurnOrderTable","handleResetGame","TurnOrderSetup","turnOrderSetup","startGame","chooseSetup","gutterBottom","renderTurnOrderSetups","shuffleDeck","deck","TurnOrder","_useTurnOrderSetup","setTurnOrderSetup","useEffect","getFromDb","then","handleTurnOrderSetupChange","useTurnOrderSetup","_useGameState","turnOrderState","setTurnOrderState","_useState5","started","_useState6","gameState","setGameState","state","cardId","newState","find","cardToAdd","cardDrawn","stated","deckAndDiscardState","handleStartGame","cardToShuffle","newDeck","useGameState","TurnOrder_ActiveTurnOrder","TurnOrder_TurnOrderSetup","Content","_ROUTES$nemeses$ROUTE","route","drawerHeader","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","ListItemText_default","primary","Routes","locationhandler","components_RouteItem","Build_default","style","width","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","appInfo","process","Link_default","href","githubLink","src","alt","githubLogo","paddingBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","alignItems","mixins","toolbar","justifyContent","flexGrow","unit","contentShift","lineHeight","verticalAlign","withTheme","setDrawerIsOpen","setCurrentLocation","defaultSets","CssBaseline_default","App_TopBar","App_DrawerMenu","Provider","components_Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0be57cb.chunk.js","sourcesContent":["export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { DATA } from './aeonsData'\nimport MARKETSETUPS from './marketSetups'\nimport TURNORDERSETUPS from './turnOrderSetups'\n\nexport default {\n  DATA,\n  MARKETSETUPS,\n  TURNORDERSETUPS\n}\n","export const DATA = {\n  sets: [\"WE\", \"AE\", \"BS\", \"Legacy\", \"Nameless\", \"Depths\", \"TV\", \"OD\"],\n  \"WE\": {\n    \"id\": \"WE\",\n    \"name\": \"War Eternal\",\n    \"nemeses\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"id\": \"TV\",\n    \"name\": \"Void\",\n    \"nemeses\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"id\": \"OD\",\n    \"name\": \"Outer Dark\",\n    \"nemeses\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"id\": \"Nameless\",\n    \"name\": \"Nameless\",\n    \"nemeses\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"id\": \"Legacy\",\n    \"name\": \"Legacy\",\n    \"nemeses\": [\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"id\": \"Depths\",\n    \"name\": \"Depths\",\n    \"nemeses\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"id\": \"BS\",\n    \"name\": \"Buried Secrets\",\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"id\": \"AE\",\n    \"name\": \"Aeons End\",\n    \"nemeses\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Rage Borne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","export default {\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n}\n\n","export default {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player (3 toc)',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1', cssClass: 'player1' },\n      { id: 2, name: 'Player 1', cssClass: 'player1' },\n      { id: 3, name: 'Player 1', cssClass: 'player1' },\n      { id: 4, name: 'Nemesis', cssClass: 'nemesis' },\n      { id: 5, name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player (4 toc)',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1', cssClass: 'player1' },\n      { id: 2, name: 'Player 1', cssClass: 'player1' },\n      { id: 3, name: 'Player 1', cssClass: 'player1' },\n      { id: 4, name: 'Player 1', cssClass: 'player1' },\n      { id: 5, name: 'Nemesis', cssClass: 'nemesis' },\n      { id: 6, name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1', cssClass: 'player1' },\n      { id: 2, name: 'Player 1', cssClass: 'player1' },\n      { id: 3, name: 'Player 2', cssClass: 'player2' },\n      { id: 4, name: 'Player 2', cssClass: 'player2' },\n      { id: 5, name: 'Nemesis', cssClass: 'nemesis' },\n      { id: 6, name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1', cssClass: 'player1' },\n      { id: 2, name: 'Player 2', cssClass: 'player2' },\n      { id: 3, name: 'Player 3', cssClass: 'player3' },\n      { id: 4, name: 'Wild', cssClass: 'wild' },\n      { id: 5, name: 'Nemesis', cssClass: 'nemesis' },\n      { id: 6, name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1', cssClass: 'player1' },\n      { id: 2, name: 'Player 2', cssClass: 'player2' },\n      { id: 3, name: 'Player 3', cssClass: 'player3' },\n      { id: 4, name: 'Player 4', cssClass: 'player4' },\n      { id: 5, name: 'Nemesis', cssClass: 'nemesis' },\n      { id: 6, name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  }\n}\n","import React from 'react'\n\nexport const SetConfigurationContext = React.createContext(null)\n\n","import React, { useContext } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from 'globalContexts'\n\n/**\n * Custom hook to make the users configured sets available to a component.\n * If no sets have been selected a simple noSelectedSetsComponent will\n * be created, which can be rendered to warn the user. (this component will otherwise be null)\n *\n * returns { selectedSets, noSelectedSetsComponent } \n  */\nconst useSelectedSets = () => {\n  const { configurationOfSets } = useContext(SetConfigurationContext)\n  const selectedSets = Object\n    .keys(configurationOfSets)\n    .filter( key => configurationOfSets[key])\n  const noSetsSelected = selectedSets.length < 1\n\n  const noSelectedSetsComponent = noSetsSelected\n    ? (<Typography paragraph>\n        There is currently no set selected. Please activate at least one set in the settings.\n      </Typography>)\n    : null\n\n  return {\n    selectedSets,\n    noSelectedSetsComponent\n  }\n}\n\nexport default useSelectedSets\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '24px',\n    right: '24px',\n    zIndex: 10,\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import config from 'config'\n\n/**\n * Creates a list containing \"EMPTY\" strings. The length of the list\n * is determined by the amount of empty slots (\"amount\" parameter)\n  */\nexport const createSlotList = (amount) => {\n    return Array.from({ length: amount }, () => \"EMPTY\");\n}\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = {\n *    AE: { mages: [ \"a\", \"b\" ] },\n *    WE: { mages: [ \"c\", \"d\" ] }\n *  }\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ \"a\", \"b\", \"c\", \"d\" ]\n  */\nexport const getListOfAvailableEntity = (selectedSets, entity) => selectedSets.reduce(\n  (acc, set) => {\n    return [ ...acc, ...config.DATA[set][entity] ]\n  },[]\n)\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = (availableEntities) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (card, setupBlueprint) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"=\": {\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\n/**\n * Given a list of available entities (e.g. \"mages\" or \"cards\") and a list\n * of slots to fill, this returns a new list where each \"slot\" has been replaced\n * by a random entity from the list of available entities.\n * If the entities have an operation specified, the available entities will\n * be filtered by cost and operation before a random entity is determined. (currently only relevant for cards)\n * Also do note, that each entity is unique and therefore will be removed from the\n * list of available entities for the rest of the function run, as soon as it has been\n * picked for a slot once.\n  */\nexport const createEntityList = (availableEntities, blueprintList) => {\n  const entities = blueprintList.reduce(\n    (acc, blueprint, i) => {\n      const last = i === blueprintList.length - 1\n\n      // Check for cards\n      const hasCostOperation = blueprint.operation !== undefined\n      const newEntity = hasCostOperation\n        ? getRandomEntity(acc.availableEntities.filter(entity => filterByCost(entity, blueprint)))\n        : getRandomEntity(acc.availableEntities)\n\n      if (last) {\n        return [ ...acc.result, newEntity ]\n      }\n\n      // Make sure each entity will only be added to the result list once\n      const remainingEntitites = acc.availableEntities.filter(\n        entity => entity.id !== newEntity.id\n      )\n\n      return {\n        availableEntities: remainingEntitites,\n        result: [ ...acc.result, newEntity]\n      }\n  }, { availableEntities, result: [] })\n\n  return entities\n}\n","const nemesesStyles = (theme) => ({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default nemesesStyles\n","import React, { useState } from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\nimport config from 'config'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from '../helpers.js'\n\nimport nemesesStyles from './nemesesStyles'\n\nconst Nemeses = React.memo(({classes}) => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [nemesis, setNemesis] = useState(null)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableNemeses = getListOfAvailableEntity(selectedSets, \"nemeses\")\n  const handleShuffle = () => {\n    setNemesis(getRandomEntity(availableNemeses))\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? (\n            <React.Fragment>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography color=\"textSecondary\">{config.DATA[nemesis['set']].name}</Typography>\n                  <Typography variant=\"h6\" component=\"h2\">{nemesis['name']}</Typography>\n                </CardContent>\n                <i className={`ra ra-lg ra-broken-skull ${classes.cardIcon}`} />\n              </Card>\n\n            </React.Fragment>\n          )\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(nemesesStyles)(Nemeses)\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst MageCountPicker = React.memo(({ selectedValue, handleAmountChange }) => (\n  <Card>\n    <CardContent>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Amount of Mages</FormLabel>\n        <RadioGroup\n          aria-label=\"Amount of Mages\"\n          name=\"mageAmount\"\n          value={selectedValue}\n          onChange={handleAmountChange}\n          row={true}\n        >\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n))\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default MageGridWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from 'config'\n\nconst MageCard = React.memo(({mage, classes}) => (\n  <Grid item xs={6} md={3}>\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography color=\"textSecondary\">{config.DATA[mage.set].name}</Typography>\n        <Typography variant=\"h6\" component=\"h2\">{mage.name}</Typography>\n      </CardContent>\n      <i className={`ra ra-lg ra-fluffy-swirl ${classes.cardIcon}`} />\n    </Card>\n  </Grid>\n))\n\nexport default MageCard\n","const mageStyles = (theme) => ({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default mageStyles\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport MageGridWrapper from './MageGridWrapper'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MageCard from './MageCard'\nimport mageStyles from './mageStyles'\n\nconst MageList = React.memo(({ mages, classes }) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {\n        mages.map(mage => (\n          <MageCard\n            classes={classes}\n            mage={mage}\n            key={mage.name}\n          />\n        ))\n      }\n    </Grid>\n  </MageGridWrapper>\n))\n\nexport default withStyles(mageStyles)(MageList)\n","import { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = withStyles({\n  root: {\n    marginTop: 24\n  }\n})(Typography)\n\nexport default EmptyMageListHint\n","import React, { useState } from 'react'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from 'components/pages/helpers.js'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\n\n\nconst Mages = React.memo(() => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [mages, setMages] = useState([])\n  const [amount, setAmount] = useState(1)\n  const handleAmountChange = (e) => {\n    setAmount(parseInt(e.target.value))\n  }\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableMages = getListOfAvailableEntity(selectedSets, \"mages\")\n  const handleShuffle = () => {\n    const slotList = createSlotList(amount)\n    const mages = createEntityList(availableMages, slotList)\n    setMages(mages)\n  }\n\n  const hasEmptySlots = mages.indexOf(\"EMPTY\") > -1 || mages.length === 0\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={amount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        hasEmptySlots\n          ? <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default Mages\n","import { useState } from 'react'\n\nconst useExpansionHandling = () => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState(null)\n\n  const handleExpansion = (panel) => (event, expanded) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, handleExpansion, setExpanded }\n}\n\nexport default useExpansionHandling\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n\nconst StyledExpansionPanel = withStyles({\n  root: {\n    borderRadius: 4,\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {\n    margin: 'auto',\n  },\n})(ExpansionPanel);\n\nexport default StyledExpansionPanel\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nconst StyledExpansionPanelSummary = withStyles({\n  root: {\n    minHeight: 48,\n    '&$expanded': {\n      minHeight: 48,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(ExpansionPanelSummary);\n\nexport default StyledExpansionPanelSummary\n","const supplyStyles = (theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  card: {\n    minWidth: 30,\n    minHeight: 148,\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardName: {\n    fontWeight: 'bold',\n  },\n  cardInfoListItem: {\n    padding: 0,\n  },\n  label: {\n    marginRight: 8,\n    display: 'inline-block',\n  },\n  infoText: {\n    display: 'inline-block',\n  },\n  gem: {\n    background: '#EDE7F6',\n  },\n  relic: {\n    background: '#E3F2FD',\n  },\n  spell: {\n    background: '#FFF3E0',\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2\n  },\n  gemIcon: {\n    color: '#B39DDB',\n  },\n  relicIcon: {\n    color: '#90CAF9',\n  },\n  spellIcon: {\n    color: '#FFCC80',\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nconst CardTypeIcon = React.memo(({type, classes}) => {\n  const typeClass = classes[`${type}Icon`]\n\n  switch (type) {\n    case 'gem': {\n      return <i className={`ra ra-lg ra-crystals ${classes.cardIcon} ${typeClass}`} />\n    }\n    case 'relic': {\n      return <i className={`ra ra-lg ra-crystal-wand ${classes.cardIcon} ${typeClass}`} /> \n    }\n    case 'spell': {\n      return <i className={`ra ra-lg ra-scroll-unfurled ${classes.cardIcon} ${typeClass}`} /> \n    }\n    default: {\n      return null\n    }\n  }\n})\n\nexport default CardTypeIcon\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from 'config'\n\nimport CardTypeIcon from './CardTypeIcon'\n\nconst getOperationString = (operation, values, threshold) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}\n\nconst MarketTile = React.memo(({ tileSetup, index, cards, classes, ...rest }) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card className={`${classes.card} ${classes[type.toLowerCase()]}`}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography className={classes.cardName} component=\"p\">\n            { cards[index].name !== undefined\n                ? cards[index].name\n                : \"-\"\n            }\n          </Typography>\n          <List>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Set:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { cards[index].set !== undefined\n                    ? config.DATA[cards[index].set].name\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Cost:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { cards[index].cost !== undefined\n                    ? cards[index].cost\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} classes={classes} />\n      </Card>\n    </Grid>\n  )\n})\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (marketSetup, cards, classes) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        index={i}\n        cards={cards}\n        classes={classes}\n      />\n    )\n  )\n}\n\nconst SupplyList = React.memo(({marketSetup, cards, classes}) => (\n  <ListWrapper>\n    <Grid\n      container\n      spacing={16}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </Grid>\n  </ListWrapper>\n))\n\nexport default SupplyList\n","import React from 'react'\n\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nimport config from 'config'\n\n\nconst renderMarketOptions = () => Object\n  .values(config.MARKETSETUPS)\n  .map(setup => ( \n    <FormControlLabel\n      key={setup.id}\n      value={setup.id}\n      control={<Radio />}\n      label={setup.name}\n    />\n  ))\n\nconst MarketOptions = React.memo(({ marketSetupId, changeHandler }) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={changeHandler}\n  >\n    { renderMarketOptions() }\n  </RadioGroup>\n))\n\nexport default MarketOptions\n","import React, { useState } from 'react'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\nimport useExpansionHandling from 'hooks/useExpansionHandling'\nimport config from 'config'\n\nimport StyledExpansionPanel from 'components/StyledExpansionPanel'\nimport StyledExpansionPanelSummary from 'components/StyledExpansionPanelSummary'\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from '../helpers.js'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (availableCards, tileSetups, cardType) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createEntityList(availableCardsOfType, cardSlots)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nconst createSupply = (selectedSets, tileSetups) => {\n  const availableCards = getListOfAvailableEntity(selectedSets, \"cards\")\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\n// Component\nconst Supply = React.memo(({ classes }) => {\n  const { expanded, handleExpansion, setExpanded } = useExpansionHandling()\n\n  // Market setup handling\n  const [ marketSetup, setMarketSetup ] = useState(config.MARKETSETUPS['market1'])\n  const handleMarketSetup = (event) => {\n    setMarketSetup(config.MARKETSETUPS[event.target.value])\n    setExpanded(false)\n  }\n\n  // Set handling\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const emptySlotList = () => createSlotList(9)\n  const [cards, setCards] = useState(emptySlotList)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const handleShuffle = () => {\n    const { gems, relics, spells } = createSupply(selectedSets, marketSetup.tiles)\n    setCards([...gems, ...relics, ...spells])\n  }\n\n  return (\n    <React.Fragment>\n      <StyledExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            changeHandler={handleMarketSetup}\n          />\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(supplyStyles)(Supply)\n","const settingStyles = (theme) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport config from 'config'\n\nconst ConfiguredSet = React.memo(({\n  set,\n  configurationOfSets,\n  handleChange\n}) => (\n  <FormControlLabel\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={config.DATA[set].name}\n  />\n))\n\nexport default ConfiguredSet\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport ConfiguredSet from './ConfiguredSet'\n\n\nconst renderConfiguredSets = (configurationOfSets, sets, handleChange) => sets.map(set => (\n  <ConfiguredSet\n    key={set}\n    set={set}\n    configurationOfSets={configurationOfSets} \n    handleChange={handleChange}\n  />\n))\n\nconst ActiveSets = React.memo(({\n  allSetsSelected,\n  handleSelectAll,\n  sets,\n  configurationOfSets,\n  handleChange\n}) => (\n  <FormControl component=\"fieldset\">\n    <FormLabel component=\"legend\">Select active sets</FormLabel>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={allSetsSelected}\n          onChange={handleSelectAll}\n          value={ allSetsSelected\n            ? \"Deselect All\"\n            : \"Select All\"\n          }\n        />\n      }\n      label={ allSetsSelected\n        ? \"Deselect All\"\n        : \"Select All\"\n      }\n    />\n    <FormGroup>\n      {\n        renderConfiguredSets(configurationOfSets, sets, handleChange)\n      }\n    </FormGroup>\n  </FormControl>\n))\n\nexport default ActiveSets\n","import React, { useContext } from 'react'\n\nimport { set as setToDb } from 'idb-keyval'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport StyledExpansionPanel from 'components/StyledExpansionPanel'\nimport StyledExpansionPanelSummary from 'components/StyledExpansionPanelSummary'\n\nimport useExpansionHandling from 'hooks/useExpansionHandling'\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = React.memo(({ classes }) => {\n  const { expanded, handleExpansion } = useExpansionHandling()\n\n  // Sets\n  const { configurationOfSets, sets, setSets } = useContext(SetConfigurationContext)\n  const handleChange = (set) => {\n    const newSets = { ...configurationOfSets, [set]: !configurationOfSets[set] }\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  const allSetsSelected = Object.values(configurationOfSets).every(val => val === true)\n  const handleSelectAll = () => {\n    const newSets = sets.reduce((acc, set) => {\n      return { ...acc, [set]: !allSetsSelected }\n    }, {})\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  return (\n    <StyledExpansionPanel expanded={expanded === 'sets'} onChange={handleExpansion('sets')}>\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Configured Sets</Typography>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets\n          allSetsSelected={allSetsSelected}\n          handleSelectAll={handleSelectAll}\n          sets={sets}\n          configurationOfSets={configurationOfSets}\n          handleChange={handleChange}\n        />\n      </ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n})\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst DiscardTableCell = withStyles({\n    root: {\n      padding: '4px 8px',\n      '&:first-child': {\n        paddingLeft: 16\n      },\n      '&:last-child': {\n        paddingRight: 8\n      },\n    }\n})(TableCell)\n\nexport default DiscardTableCell\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport TurnOrderTableCell from './TurnOrderTableCell'\n\nconst TurnOrderTableRow = React.memo(({\n  card,\n  handlers,\n  classes\n}) => (\n  <TableRow className={`${classes.cardRow} ${classes[card.cssClass]}`}>\n    <TurnOrderTableCell>\n      <Typography component='p'>{card.name}</Typography>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"right\">\n      <IconButton\n        aria-label=\"Add to top\" \n        title=\"Add to top\" \n        onClick={() => handlers.addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"right\">\n      <IconButton \n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => handlers.addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"right\">\n      <IconButton \n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => handlers.shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n  </TableRow>\n))\n\nexport default TurnOrderTableRow\n","const turnOrderStyles = (theme) => ({\n  cardDeck: {\n    marginTop: 24,\n  },\n  cardTable: {\n    marginTop: 24,\n    borderCollapse: 'collapse',\n  },\n  cardRow: {\n    borderBottom: '4px solid #fafafa',\n    '&:first-child': {\n      '& *': {\n        color: '#fff',\n      },\n    },\n  },\n  player1: {\n    background: '#F1F8E9',\n    '& td': {\n      borderColor: '#F1F8E9',\n    },\n    '&:first-child': {\n      background: '#8BC34A',\n      '& td': {\n        borderColor: '#8BC34A',\n      },\n    },\n  },\n  player2: {\n    background: '#FFF3E0',\n    '& td': {\n      borderColor: '#FFF3E0',\n    },\n    '&:first-child': {\n      background: '#FF9800',\n      '& td': {\n        borderColor: '#FF9800',\n      },\n    },\n  },\n  player3: {\n    background: '#E3F2FD',\n    '& td': {\n      borderColor: '#E3F2FD',\n    },\n    '&:first-child': {\n      background: '#2196F3',\n      '& td': {\n        borderColor: '#2196F3',\n      },\n    },\n  },\n  player4: {\n    background: '#F3E5F5',\n    '& td': {\n      borderColor: '#F3E5F5',\n    },\n    '&:first-child': {\n      background: '#9C27B0',\n      '& td': {\n        borderColor: '#9C27B0',\n      },\n    },\n  },\n  nemesis: {\n    background: '#ffebee',\n    '& td': {\n      borderColor: '#ffebee',\n    },\n    '&:first-child': {\n      background: '#f44336',\n      '& td': {\n        borderColor: '#f44336',\n      },\n    },\n  },\n  wild: {\n    background: '#FAFAFA',\n    '& td': {\n      borderColor: '#FAFAFA',\n    },\n    '&:first-child': {\n      background: '#9E9E9E',\n      '& td': {\n        borderColor: '#9E9E9E',\n      },\n    },\n  },\n})\n\nexport default turnOrderStyles\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport TurnOrderTableRow from './TurnOrderTableRow'\nimport turnOrderStyles from './turnOrderStyles'\n\n\nconst renderTableRows = (cards, handlers, classes) => cards.map((card, i) => (\n  <TurnOrderTableRow \n    key={i}\n    card={card}\n    handlers={handlers}\n    classes={classes}\n  />\n))\n\nconst TurnOrderTable = React.memo(({ cards, handlers, classes }) => (\n <Table className={classes.cardTable}>\n   <TableBody>\n     { renderTableRows(cards, handlers, classes) }\n   </TableBody>\n </Table>\n))\n\nexport default withStyles(turnOrderStyles)(TurnOrderTable)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport ShuffleButton from 'components/ShuffleButton.jsx'\n\nimport TurnOrderTable from './TurnOrderTable'\n\nconst ActiveTurnOrder = React.memo(({\n  deckIsEmpty,\n  discard,\n  handlers\n}) => (\n  <React.Fragment>\n    {\n      deckIsEmpty\n        ? (<Button color='secondary' onClick={handlers.startNewRound}>New Round</Button>)\n        : (\n          <Button\n            color='secondary' \n            onClick={handlers.drawTurnOrderCard}\n          >\n            Draw a card\n          </Button>\n        )\n    }\n\n    <TurnOrderTable\n      cards={discard}\n      handlers={handlers}\n    />\n\n  <ShuffleButton \n    color='primary'\n    variant='extended'\n    onClick={handlers.handleResetGame}\n  >\n        Reset Game\n    </ShuffleButton>\n  </React.Fragment>\n))\n\nexport default ActiveTurnOrder\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport ShuffleButton from 'components/ShuffleButton.jsx'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport StyledExpansionPanel from 'components/StyledExpansionPanel'\nimport StyledExpansionPanelSummary from 'components/StyledExpansionPanelSummary'\n\nimport useExpansionHandling from 'hooks/useExpansionHandling'\nimport config from 'config'\n\nimport turnOrderStyles from './turnOrderStyles'\n\nconst renderSetupOptions = () => Object.values(config.TURNORDERSETUPS).map(setup => (\n  <FormControlLabel\n    key={setup.id}\n    value={setup.id}\n    control={<Radio />}\n    label={setup.name} />\n))\n\nconst renderTurnOrderSetups = (turnOrderSetup) => turnOrderSetup\n  .turnOrderCards\n  .map(\n    (card, i) => (\n      <Typography component='p' key={i}>\n        {card.name}\n      </Typography>\n    )\n  )\n\nconst TurnOrderSetup = React.memo(({\n  turnOrderSetup,\n  startGame,\n  chooseSetup,\n  classes\n}) => {\n  const { expanded, handleExpansion, setExpanded } = useExpansionHandling()\n  const handleSetupChange = (event) => {\n    chooseSetup(event)\n    setExpanded(false)\n  }\n\n  return (\n    <React.Fragment>\n      <StyledExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{turnOrderSetup.name}</Typography>\n        </StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <RadioGroup\n            aria-label='Players'\n            name='turnOrderOptions'\n            value={turnOrderSetup.id}\n            onChange={handleSetupChange}>\n            {renderSetupOptions()}\n          </RadioGroup>\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n      <Card className={classes.cardDeck}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>Turn order cards</Typography>\n          { renderTurnOrderSetups(turnOrderSetup) }\n        </CardContent>\n      </Card>\n      <ShuffleButton color='primary' variant='extended' onClick={startGame}>\n        Start Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(turnOrderStyles)(TurnOrderSetup)\n","import { useState, useEffect } from 'react'\n\nimport {\n  get as getFromDb,\n  set as setToDb\n} from 'idb-keyval'\n\nimport config from 'config'\n\nimport {\n  createEntityList\n} from '../helpers'\n\n\nconst shuffleDeck = (deck) => {\n  return createEntityList(deck, deck)\n}\n\nexport const useTurnOrderSetup = () => {\n  const [turnOrderSetup, setTurnOrderSetup] = useState(\n    config.TURNORDERSETUPS['onePlayerThreeToc']\n  )\n  const handleTurnOrderSetupChange = (event) => {\n    const setup = config.TURNORDERSETUPS[event.target.value]\n    setTurnOrderSetup(setup)\n    setToDb('turnOrderSetup', setup)\n  }\n\n  useEffect(() => {\n    getFromDb('turnOrderSetup').then(setup => {\n      if (setup !== undefined) {\n        setTurnOrderSetup(setup)\n      }\n    })\n  }, [])\n\n  return {\n    turnOrderSetup,\n    handleTurnOrderSetupChange\n  }\n}\n\nexport const useGameState = (turnOrderSetup) => {\n  const TURNORDERSTATE = 'turnOrderState'\n\n  const [turnOrderState, setTurnOrderState] = useState({\n    deck: [],\n    discard: []\n  })\n\n  const [gameState, setGameState] = useState({\n    started: false\n  })\n\n  const drawTurnOrderCard = () => {\n    const { deck } = turnOrderState\n\n    if(deck.length === 0) return\n\n    const cardDrawn = deck[deck.length - 1];\n\n    const newState = {\n      deck: deck.filter(card => card.id !== cardDrawn.id),\n      discard: [cardDrawn, ...turnOrderState.discard ]\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const startNewRound = () => {\n    const newState = {\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards),\n      discard: []\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToTop = (cardId) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    const newState = {\n      deck: [...turnOrderState.deck, cardToAdd],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToBottom = (cardId) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    const newState = {\n      deck: [cardToAdd, ...turnOrderState.deck],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const shuffleIntoDeck = (cardId) => {\n    const cardToShuffle = turnOrderState.discard.find(card => card.id === cardId)\n    const newDeck = [...turnOrderState.deck, cardToShuffle]\n    const shuffledDeck = shuffleDeck(newDeck)\n\n    const newState = {\n      deck: shuffledDeck,\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  // Game state handling\n  const handleStartGame = () => {\n    const gameState = { started: true }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = {\n      ...turnOrderState,\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards)\n    }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  const handleResetGame = () => {\n    const gameState = { stated: false }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = { ...turnOrderState, discard: [] }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  useEffect(() => {\n    getFromDb(TURNORDERSTATE).then(state => {\n      const isValidState = (\n        state !== undefined &&\n        state.turnOrderState &&\n        state.turnOrderState.deck &&\n        state.turnOrderState.discard\n      )\n      if (isValidState) {\n        setGameState(state.gameState)\n        setTurnOrderState(state.turnOrderState)\n      }\n    })\n  }, [])\n\n  return {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  }\n}\n","import React from 'react'\n\nimport ActiveTurnOrder from './ActiveTurnOrder'\nimport TurnOrderSetup from './TurnOrderSetup'\nimport {\n  useTurnOrderSetup,\n  useGameState\n} from './hooks'\n\n\nconst TurnOrder = React.memo(() => {\n  const { turnOrderSetup, handleTurnOrderSetupChange } = useTurnOrderSetup()\n\n  const {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  } = useGameState(turnOrderSetup)\n\n  return (\n    <React.Fragment>\n      {gameState.started\n          ? (\n            <ActiveTurnOrder\n              deckIsEmpty={turnOrderState.deck.length === 0}\n              discard={turnOrderState.discard}\n              handlers={{\n                addToBottom,\n                addToTop,\n                drawTurnOrderCard,\n                handleResetGame,\n                shuffleIntoDeck,\n                startNewRound\n              }}\n            />\n          )\n          : (\n            <TurnOrderSetup\n              turnOrderSetup={turnOrderSetup}\n              startGame={handleStartGame}\n              chooseSetup={handleTurnOrderSetupChange}\n            />\n          )}\n    </React.Fragment>\n  )\n})\n\nexport default TurnOrder\n","import React from 'react'\n\nimport Nemeses from 'components/pages/Nemeses'\nimport Mages from 'components/pages/Mages'\nimport Supply from 'components/pages/Supply'\nimport Settings from 'components/pages/Settings'\nimport TurnOrder from 'components/pages/TurnOrder'\n\nimport { ROUTES } from 'routes'\n\n\nconst Content = React.memo(({ classes, route, ...rest }) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      {\n        [ROUTES.nemeses]: <Nemeses />,\n        [ROUTES.mages]: <Mages />,\n        [ROUTES.supply]: <Supply />,\n        [ROUTES.turnOrder]: <TurnOrder />,\n        [ROUTES.settings]: <Settings />\n      }[route]\n    }\n  </div>\n))\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = React.memo(({ classes, drawerIsOpen, currentLocation, toggleDrawer }) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n))\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = React.memo(({ route, clickhandler, children }) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n))\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes.js'\nimport RouteItem from './RouteItem.jsx'\n\nconst Routes = React.memo(({ locationhandler }) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n))\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport Routes from 'components/Routes.jsx'\n\n\nconst DrawerMenu = React.memo(({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography className={classes.appInfo}>\n      Version: {process.env.REACT_APP_VERSION}\n      <Link href=\"https://github.com/on3iro/aeons-end-randomizer\" color=\"inherit\" className={classes.githubLink} target=\"_blank\">\n        <img src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" className={classes.githubLogo} />Github\n      </Link>\n    </Typography>\n  </Drawer>\n))\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react';\n\nimport { get as getFromDb } from 'idb-keyval'\n\nimport classNames from 'classnames'\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles.js'\nimport { ROUTES } from 'routes.js'\nimport config from 'config'\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport Content from 'components/Content.jsx'\n\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\n\nconst App = ({ classes, theme }) => {\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const defaultSets = config.DATA.sets.reduce(\n    (acc, set) => ({ ...acc, [set]: false }) , {}\n  )\n  const [ configurationOfSets, setSets ] = useState(defaultSets)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    getFromDb('sets').then(sets => {\n      if (sets !== undefined) {\n        setSets(sets)\n      }\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <SetConfigurationContext.Provider value={{ configurationOfSets, setSets, sets: config.DATA.sets }}>\n        <Content\n          route={currentLocation}\n          classes={classes}\n          className={classNames(classes.content, {\n            [classes.contentShift]: drawerIsOpen,\n          })}\n        />\n      </SetConfigurationContext.Provider>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","const drawerWidth = 240;\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    paddingBottom: 72\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  appInfo: {\n    margin: theme.spacing.unit * 2\n  },\n  githubLink: {\n    display: 'block',\n    lineHeight: '24px',\n    marginTop: theme.spacing.unit * 2\n  },\n  githubLogo: {\n    width: '24px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing.unit\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}