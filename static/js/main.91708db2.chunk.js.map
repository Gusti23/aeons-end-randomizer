{"version":3,"sources":["mainTheme.ts","config/aeonsData.ts","config/turnOrderSetups.ts","config/index.ts","config/marketSetups.ts","Redux/Store/Settings/Expansions/SelectedExpansions.ts","Redux/Store/MainContentLoading/index.ts","Redux/Store/Settings/Expansions/index.ts","Redux/Store/Settings/SupplySetups/index.ts","Redux/Store/Nemesis/index.ts","Redux/Store/Settings/index.ts","Redux/helpers.ts","Redux/Store/Mages/Count/index.ts","Redux/Store/Mages/Recruited/index.ts","Redux/Store/Mages/index.ts","Redux/Store/Supply/Selection/index.ts","Redux/Store/Supply/RandomSetup/helpers.ts","Redux/Store/Supply/RandomSetup/index.ts","Redux/Store/Supply/index.ts","Redux/Store/TurnOrder/ActiveGame/index.ts","Redux/Store/TurnOrder/Configuration/index.ts","Redux/Store/index.ts","Redux/Store/TurnOrder/index.ts","components/pages/Nemeses/NemesisTile/Card.tsx","components/pages/Nemeses/NemesisTile/CardContent.tsx","components/pages/Nemeses/NemesisTile/CardTypeIcon.tsx","components/pages/Nemeses/NemesisTile/ExpansionName.tsx","components/pages/Nemeses/NemesisTile/Name.tsx","components/pages/Nemeses/NemesisTile/index.tsx","components/pages/Nemeses/EmptyNemesisHint.tsx","components/ShuffleButton.tsx","components/A.tsx","components/NoSelectedExpansions.tsx","components/pages/Nemeses/index.tsx","components/pages/Mages/MageCountPicker.tsx","components/pages/Mages/MageList/MageGridWrapper.tsx","components/pages/Mages/MageTile/Wrapper.tsx","components/pages/Mages/MageTile/Card.tsx","components/pages/Mages/MageTile/CardContent.tsx","components/pages/Mages/MageTile/CardTypeIcon.tsx","components/pages/Mages/MageTile/ExpansionName.tsx","components/pages/Mages/MageTile/Name.tsx","components/pages/Mages/MageTile/index.tsx","components/pages/Mages/MageList/index.tsx","components/pages/Mages/EmptyMageListHint.tsx","components/pages/Mages/index.tsx","hooks/useExpansionHandling.tsx","components/ExpansionPanel/StyledExpansionPanel.tsx","components/ExpansionPanel/StyledExpansionPanelSummary.tsx","components/Heading.tsx","components/ExpansionPanel/index.tsx","components/pages/Supply/ListWrapper.tsx","types.ts","components/pages/Supply/MarketTile/Card.tsx","components/pages/Supply/MarketTile/CardContent.tsx","components/pages/Supply/MarketTile/CardName.tsx","components/pages/Supply/MarketTile/CardTypeIcon.tsx","components/pages/Supply/MarketTile/CardInfoItem.tsx","components/pages/Supply/MarketTile/Info.tsx","components/pages/Supply/MarketTile/InfoLabel.tsx","components/pages/Supply/MarketTile/CostInfo.tsx","components/pages/Supply/MarketTile/CostOperation.tsx","components/pages/Supply/MarketTile/ExpansionInfo.tsx","components/pages/Supply/MarketTile/index.tsx","components/pages/Supply/SupplyList.tsx","components/pages/Supply/MarketOptionsWrapper.tsx","components/SupplyPreview/Wrapper.tsx","components/SupplyPreview/TileList.tsx","components/SupplyPreview/TileListItem.tsx","components/SupplyPreview/SupplyName.tsx","components/SupplyPreview/index.tsx","components/pages/Supply/MarketOptions.tsx","components/pages/Supply/index.tsx","components/CheckboxList/Item.tsx","components/CheckboxList/index.tsx","components/pages/Settings/Expansions/ActiveSets.tsx","components/pages/Settings/Expansions/index.tsx","components/pages/Settings/Supply/SettingsSupplyPreview.tsx","components/pages/Settings/Supply/CheckboxWithPreviewWrapper.tsx","components/pages/Settings/Supply/CheckboxWithPreview.tsx","components/pages/Settings/Supply/CustomSetupEdit/InputField.tsx","components/pages/Settings/Supply/CustomSetupEdit/SelectField.tsx","components/pages/Settings/Supply/CustomSetupEdit/SelectFieldsWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrintWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/CancelButton.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrint.tsx","components/pages/Settings/Supply/CustomSetupEdit/ListWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/BluePrintList.tsx","components/pages/Settings/Supply/CustomSetupEdit/MainControlsWrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/MainControls.tsx","components/pages/Settings/Supply/CustomSetupEdit/Wrapper.tsx","components/pages/Settings/Supply/CustomSetupEdit/index.tsx","components/pages/Settings/Supply/CheckboxWithPreviewControls.tsx","components/pages/Settings/Supply/CustomSetups.tsx","components/pages/Settings/Supply/PredefinedSetups.tsx","components/pages/Settings/Supply/SetupSelectionWrapper.tsx","components/pages/Settings/Supply/SetupSelection.tsx","components/pages/Settings/Supply/index.tsx","components/pages/Settings/index.tsx","components/pages/TurnOrder/DiscardTable/Cell.tsx","components/pages/TurnOrder/DiscardTable/RowWrapper.tsx","components/pages/TurnOrder/DiscardTable/Row.tsx","components/pages/TurnOrder/DiscardTable/Table.tsx","components/pages/TurnOrder/DiscardTable/index.tsx","components/pages/TurnOrder/ActiveGame.tsx","components/pages/TurnOrder/Card.tsx","components/pages/TurnOrder/ConfigurationCardDisplay.tsx","components/pages/TurnOrder/CardNameDisplay.tsx","components/pages/TurnOrder/ModeSelection.tsx","components/pages/TurnOrder/PlayerCountSelection.tsx","components/pages/TurnOrder/SetupSelection.tsx","components/pages/TurnOrder/TurnOrderConfiguration.tsx","components/pages/TurnOrder/index.tsx","routes.tsx","components/Content/HeaderPlaceholder.tsx","components/Content/Wrapper.tsx","components/Content/index.tsx","components/TopBar/Title.tsx","components/TopBar/AppBar.tsx","components/TopBar/MenuButton/index.tsx","components/TopBar/index.tsx","components/Link.tsx","components/Navigation.tsx","components/DrawerMenu/Header.tsx","components/DrawerMenu/AppInfo.tsx","components/DrawerMenu/GitHubLink.tsx","components/DrawerMenu/GitHubLogo.tsx","components/DrawerMenu/Drawer.tsx","components/DrawerMenu/index.tsx","components/App/MainApp.tsx","components/App/Wrapper.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","Redux/configureStore.ts"],"names":["muiTheme","createMuiTheme","palette","primary","blue","secondary","pink","typography","useNextVariants","playerColors","player1","normal","light","player2","player3","player4","mainTheme","heading","fontSize","pxToRem","spacing","drawerWidth","muiTransitions","appBarShift","transitions","create","easing","easeOut","duration","enteringScreen","content","sharp","leavingScreen","contentShift","colors","text","turnOrderCards","_objectSpread","player12","concat","player34","wild","wild-token","nemesis","maelstrom","blitz","cards","gem","color","background","relic","spell","mage","DATA","NA","id","name","type","nemeses","expansion","mages","cost","IW","SD","TA","WE","TV","OD","Nameless","Legacy","Depths","BS","AE","p-1","p-2","p-3","p-4","p-5","p-6","p-7","p-8","p-9","p-10","TURNORDERCARDS","player1-1","player1-2","player1-3","player1-4","player2-1","player2-2","player3-1","player4-1","player12-1","player12-2","player34-1","player34-2","wildToken","nemesis-1","nemesis-2","TURNORDERSETUPS","onePlayer","variations","default","4toc","twoPlayers","threePlayers","fourPlayers","splitPlayers","EXPANSIONS","Object","keys","normalize","array","reduce","acc","entity","entities","config_objectSpread","defineProperty","ids","toConsumableArray","NORMALIZEDDATA","expansions","expansionIds","nemesisIds","mageIds","cardIds","config","DEFAULTSUPPLYCOUNT","MARKETSETUPS","market1Inc","active","tiles","operation","threshold","market1","market2","market3","values","market4","market5","market6","random","ActionTypes","initialState","SelectedExpansions_objectSpread","selected","actions","toggleAll","createAction","TOGGLE_ALL","toggleExpansion","TOGGLE_EXPANSION","setToDB","state","SET_TO_DB","setToDBSuccessful","SET_TO_DB_SUCCESS","setToDBFailed","error","SET_TO_DB_FAILURE","fetchFromDB","FETCH_FROM_DB","fetchFromDBSuccessful","FETCH_FROM_DB_SUCCESS","fetchFromDBFailed","FETCH_FROM_DB_FAILURE","allExpansionsAreSelected","every","exp","getSelectedExpansionsState","Settings","Expansions","SelectedExpansions","getSelectedExpansionsArray","createSelector","filter","getAllExpansionsSelected","getHasStandaloneExpansion","selectedExpansions","some","getStandaloneExpansionIds","getMiniExpansionIds","getPromoIds","sort","a","b","promoA","promoB","selectors","getStandaloneExpansions","map","getMiniExpansions","getPromos","getIsLoading","MainContentLoading","Reducer","combineReducers","arguments","length","undefined","action","allExpansionsSelected","newExpansionsState","newState","loop","Cmd","run","setToDb","args","successActionCreator","failActionCreator","console","log","payload","getFromDb","Predefined","Custom","noOp","toggleSetup","setup","setupType","TOGGLE_SETUP","createCustomSetup","CREATE_CUSTOM_SETUP","shortid","generate","saveCustomSetup","SAVE_CUSTOM_SETUP","cancelEdit","CANCEL_EDIT_SETUP","editCustomSetup","EDIT_CUSTOM_SETUP","deleteCustomSetup","DELETE_CUSTOM_SETUP","allSetsAreSelected","SupplySetups_objectSpread","val","getPredefined","SupplySetups","getCustom","getPredefinedAsArray","predefined","getCustomAsArray","custom","getCustomAndPredefined","getAllAsArray","customAndPredefined","getAllExceptDefaultSets","allSets","set","getActiveSetups","getAllSetsSelected","makeGetCustomAndPredefined","allSetsSelected","_action$payload","isDirty","isNew","_state$Custom","rest","objectWithoutProperties","_toPropertyKey","_state$Custom2","createSlotList","amount","Array","from","getListOfAvailableEntity","selectedSets","shuffleDeck","deck","availableCards","slots","getEntity","getRandomEntity","slot","i","card","result","availableEntities","Math","floor","getOperationString","join","thresholdValue","setRandomNemesis","SET_RANDOM","getNemesis","Nemesis","setCount","count","SET","getCount","Mages","Count","Recruited","getMages","setRandomMages","availableMages","createMageList","Selected","selectSetup","SELECT_SETUP","getSelectedSetup","Supply","Selection","getRandomCardsByType","tileSetups","cardType","cardSlots","_ref","blueprints","blueprint","filteredByCost","setupBlueprint","indexOf","filterByCost","createCardList","_ref2","Cards","RandomSetup","resetMarket","RESET","createMarket","CREATE","getCards","Selection_objectSpread","SupplySelection","_createSupply","gems","relics","spells","createSupply","RandomSetup_objectSpread","newStateWithDBWrite","setTurnOrderToDbSuccess","setTurnOrderToDbFailure","discard","started","init","INIT","draw","DRAW","newRound","NEW_ROUND","addToTop","cardId","ADD_TO_TOP","addToBottom","ADD_TO_BOTTOM","shuffleIntoDeck","SHUFFLE_INTO_DECK","SET_TURNORDER_TO_DB_SUCCESS","SET_TURNORDER_TO_DB_FAILURE","startGame","START_GAME","resetGame","RESET_GAME","getDeck","TurnOrder","ActiveGame","getDiscard","getHasStarted","INITIAL_PLAYER_SETUP","Mode","SelectedPlayerCount","SelectedSetup","setMode","mode","SET_MODE","selectPlayerCount","playerCountId","SELECT_PLAYER_COUNT","setupId","getMode","Configuration","getConfiguration","selectedSetup","adjustSetup","getAvailableCards","getSelectedPlayerCount","Configuration_objectSpread","activeGameActions","cardDrawn","ActiveGame_objectSpread","cardToAdd","find","cardToShuffle","newDeck","Main","getUserConfiguration","USER_CONFIGURATION_GET","ContentLoading","RootReducer","reduceReducers","list","availableNemeses","Card","styled","MuiCard","withConfig","displayName","componentId","props","theme","CardContent","MuiCardContent","Icon","CardTypeIcon","React","memo","react_default","createElement","className","ExpansionName","Typography","Name","NemesisTile","NemesisTile_Card","NemesisTile_CardContent","NemesisTile_ExpansionName","NemesisTile_Name","variant","component","NemesisTile_CardTypeIcon","EmptyNemesisHint","ShuffleButton","Fab","A","routerA","_templateObject","NoSelectedExpansions","Typography_default","paragraph","components_A","href","mapDispatchToProps","Nemeses","hasStandaloneExpansionSelected","Fragment","Nemeses_NemesisTile","Nemeses_EmptyNemesisHint","components_ShuffleButton","onClick","components_NoSelectedExpansions","connect","MageCountPicker","selectedValue","handleAmountChange","Card_default","CardContent_default","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","Wrapper","Grid","playerNumber","CardTypeIcon_Icon","MageTile","MageTile_Wrapper","item","xs","md","MageTile_Card","MageTile_CardContent","MageTile_ExpansionName","MageTile_Name","MageTile_CardTypeIcon","MageList","MageList_MageGridWrapper","Grid_default","container","index","Mages_MageTile","key","EmptyMageListHint","setMageCount","setMages","mageCount","noMagesGeneratedYet","Mages_MageCountPicker","toString","e","parseInt","currentTarget","Mages_EmptyMageListHint","Mages_MageList","useExpandedHandling","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","createExpansionHandler","panel","event","StyledExpansionPanel","ExpansionPanel","StyledExpansionPanelSummary","ExpansionPanelSummary","Heading","children","expansionHandler","expansionKey","summary","ExpansionPanel_StyledExpansionPanel","ExpansionPanel_StyledExpansionPanelSummary","expandIcon","ExpandMore_default","components_Heading","ExpansionPanelDetails_default","ListWrapper","CARD_TYPES","THRESHOLD_OPERATIONS","SUPPLY_OPERATIONS","isCard","MODES","CardName","MarketTile_CardTypeIcon_Icon","CardInfoItem","ListItem","Info","InfoLabel","CostInfo","MarketTile_CardInfoItem","MarketTile_InfoLabel","MarketTile_Info","CostOperation","ExpansionInfo","MarketTile","tileSetup","assign","MarketTile_Card","toLowerCase","MarketTile_CardContent","MarketTile_CostOperation","MarketTile_CardName","List_default","MarketTile_ExpansionInfo","MarketTile_CostInfo","MarketTile_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","MarketOptionsWrapper","main","TileList","TileListItem","SupplyName","SupplyPreview","clickHandler","_ref$selected","_ref$showName","showName","SupplyPreview_Wrapper","data-value","SupplyPreview_TileList","tile","SupplyPreview_TileListItem","SupplyPreview_SupplyName","MarketOptions","activeMarketSetups","allMarketSetups","Supply_MarketOptionsWrapper","components_SupplyPreview","dataset","_useExpandedHandling","components_ExpansionPanel","Supply_MarketOptions","Supply_SupplyList","DefaultCheckbox","checked","changeHandler","Checkbox_default","Item","_ref2$Component","Component","CheckboxList","items","style","marginTop","FormGroup_default","handleChange","CheckboxList_Item","renderCheckboxes","handleSelectAll","ActiveSets","standalones","miniExpansions","promos","expansionsToItems","marginBottom","components_CheckboxList","_useExpansionHandling","useExpansionHandling","Expansions_ActiveSets","SettingsSupplyPreview","SettingsSupplyPreview_templateObject","CheckboxWithPreviewWrapper","CheckboxWithPreviewWrapper_templateObject","CheckboxWithPreview","Supply_CheckboxWithPreviewWrapper","Supply_SettingsSupplyPreview","InputField","TextField","InputField_templateObject","MuiFormControl","SelectField_templateObject","Select","MuiSelect","_templateObject2","SelectField","SelectField_Wrapper","SelectField_Select","SelectFieldsWrapper","SelectFieldsWrapper_templateObject","BluePrintWrapper","BluePrintWrapper_templateObject","CancelButton","IconButton_default","Cancel_default","StyledCancelButton","CancelButton_templateObject","renderInputFieldsByOperation","bluePrint","dispatch","types","includes","CustomSetupEdit_InputField","BluePrint_objectSpread","target","margin","valueA","valueB","BluePrint","CustomSetupEdit_BluePrintWrapper","CustomSetupEdit_CancelButton","CustomSetupEdit_SelectFieldsWrapper","CustomSetupEdit_SelectField","inputProps","TYPE","MenuItem_default","OPERATION","ListWrapper_templateObject","BluePrintList","bluePrintList","CustomSetupEdit_ListWrapper","Button_default","CustomSetupEdit_BluePrint","MainControlsWrapper","MainControlsWrapper_templateObject","MainControls","setupName","setSetupName","CustomSetupEdit_MainControlsWrapper","placeholder","MainControls_objectSpread","Save_default","div","Wrapper_templateObject","initialStateFromTiles","CustomSetupEdit_objectSpread","bluePrintReducer","CustomSetupEdit_toPropertyKey","CustomSetupEdit","_useReducer","useReducer","_useReducer2","bluePrints","reverse","CustomSetupEdit_Wrapper","CustomSetupEdit_MainControls","CustomSetupEdit_BluePrintList","CheckboxWithPreviewControls","CheckboxWithPreviewControls_templateObject","createSetup","editSetup","deleteSetup","CustomSetups","customSetups","customItems","Supply_CustomSetupEdit","Supply_CheckboxWithPreview","Supply_CheckboxWithPreviewControls","Edit_default","Delete_default","PredefinedSetups","predefinedSetups","predefinedItems","SetupSelectionWrapper","FormControl","SetupSelectionWrapper_templateObject","SetupSelection","Supply_SetupSelectionWrapper","Supply_CustomSetups","Supply_PredefinedSetups","Supply_SetupSelection","Settings_Expansions","Settings_Supply","Cell","MuiTableCell","RowWrapper","MuiTableRow","turnOrderCardColors","Row","DiscardTable_RowWrapper","DiscardTable_Cell","align","title","icons_index_es","Table","MuiTable","DiscardTable","DiscardTable_Table","TableBody_default","DiscardTable_Row","renderRows","drawCard","ActiveTurnOrder","size","TurnOrder_DiscardTable","ConfigurationCardDisplay","ConfigurationCardDisplay_templateObject","CardNameDisplay","turnOrderSetup","TurnOrder_Card","gutterBottom","TurnOrder_ConfigurationCardDisplay","renderCardNames","ModeSelection","PlayerCountSelection","selectedPlayerCount","playerCount","renderSetupOptions","TurnOrderConfiguration","currentConfiguration","hasMoreThanOneVariant","TurnOrder_PlayerCountSelection","TurnOrder_SetupSelection","TurnOrder_ModeSelection","TurnOrder_CardNameDisplay","gameHasStarted","TurnOrder_TurnOrderConfiguration","createRoutingTarget","renderComponent","urlParameters","contentComponent","routes","/nemesis","pages_Nemeses","/mages","pages_Mages","/supply","pages_Supply","/turnorder","pages_TurnOrder","/settings","pages_Settings","HeaderPlaceholder","openDrawerMixin","css","Content_Wrapper_templateObject","unit","drawerIsOpen","isLoading","Content","Content_Wrapper","Content_HeaderPlaceholder","CircularProgress_default","Title","AppBar_templateObject","AppBar","AppBar_default","IconButton","MuiIconButton","MenuButton","MenuButton_Wrapper","MenuButton_IconButton","Menu_default","TopBar","toggleDrawer","TopBar_AppBar","Toolbar_default","disableGutters","TopBar_MenuButton","TopBar_Title","Link","to","ListItem_default","button","ListItemIcon_default","ListItemText_default","Navigation","components_Link","Build_default","width","Header","AppInfo","GithHubLink","GitHubLogo","Drawer","MuiDrawer","withStyles","paper","DrawerMenu","DrawerMenu_Drawer","open","onClose","anchor","DrawerMenu_Header","ChevronLeft_default","Divider_default","components_Navigation","DrawerMenu_AppInfo","process","GitHubLink","DrawerMenu_GitHubLogo","src","alt","MainApp","match","useRedirect","useRoutes","setDrawerIsOpen","useEffect","components_TopBar","components_DrawerMenu","components_Content","App","styled_components_browser_esm","styles","App_Wrapper","CssBaseline_default","App_MainApp","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","store","enhancers","applyMiddleware","apply","install","composeEnhancers","compose","enhancedCreateStore","createStore","configureStore","generateClassName","createGenerateClassName","jss","src_objectSpread","jssPreset","insertionPoint","document","getElementById","ReactDOM","render","es","JssProvider_default","components_App","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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,CACEI,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,SAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,uBACND,GAAI,sBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,aACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,sBACND,GAAI,qBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,KAIZC,GAAI,CACFP,GAAI,KACJC,KAAM,gBACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,aACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,UAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,KAIZE,GAAI,CACFR,GAAI,KACJC,KAAM,mBACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,cACND,GAAI,gBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,OACND,GAAI,SAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,KAIZG,GAAI,CACFT,GAAI,KACJC,KAAM,eACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,eACND,GAAI,iBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,KACND,GAAI,OAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,KAIZI,GAAI,CACFV,GAAI,KACJC,KAAM,cACNC,KAAM,aACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,aACND,GAAI,aAEN,CACEI,UAAW,KACXH,KAAM,eACND,GAAI,eAEN,CACEI,UAAW,KACXH,KAAM,kBACND,GAAI,iBAEN,CACEI,UAAW,KACXH,KAAM,cACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,WACND,GAAI,YAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,MACND,GAAI,OAEN,CACEI,UAAW,KACXH,KAAM,cACND,GAAI,eAEN,CACEI,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,YACND,GAAI,aAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,uBACND,GAAI,sBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,KAIZK,GAAI,CACFX,GAAI,KACJC,KAAM,OACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,qBACND,GAAI,oBAEN,CACEI,UAAW,KACXH,KAAM,mBACND,GAAI,mBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,YAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,KAIZM,GAAI,CACFZ,GAAI,KACJC,KAAM,aACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,sBACND,GAAI,qBAEN,CACEI,UAAW,KACXH,KAAM,eACND,GAAI,iBAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,SACND,GAAI,UAEN,CACEI,UAAW,KACXH,KAAM,UACND,GAAI,YAGRT,MAAO,CACL,CACEW,KAAM,QACNE,UAAW,KACXH,KAAM,OACND,GAAI,OACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,KAIZO,SAAU,CACRb,GAAI,WACJC,KAAM,WACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,WACXH,KAAM,cACND,GAAI,cAEN,CACEI,UAAW,WACXH,KAAM,cACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,WACXH,KAAM,WACND,GAAI,aAGRT,MAAO,CACL,CACEW,KAAM,QACNE,UAAW,WACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,QACND,GAAI,QACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,WACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,WACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,KAIZQ,OAAQ,CACNd,GAAI,SACJC,KAAM,SACNC,KAAM,aACNC,QAAS,CACP,CACEC,UAAW,SACXH,KAAM,UACND,GAAI,WAEN,CACEI,UAAW,SACXH,KAAM,YACND,GAAI,aAEN,CACEI,UAAW,SACXH,KAAM,cACND,GAAI,cAEN,CACEI,UAAW,SACXH,KAAM,kBACND,GAAI,kBAEN,CACEI,UAAW,SACXH,KAAM,kBACND,GAAI,kBAEN,CACEI,UAAW,SACXH,KAAM,iBACND,GAAI,kBAGRK,MAAO,CACL,CACED,UAAW,SACXH,KAAM,eACND,GAAI,eAEN,CACEI,UAAW,SACXH,KAAM,gBACND,GAAI,gBAEN,CACEI,UAAW,SACXH,KAAM,gBACND,GAAI,gBAEN,CACEI,UAAW,SACXH,KAAM,cACND,GAAI,eAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,cACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,WACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,KAIZS,OAAQ,CACNf,GAAI,SACJC,KAAM,SACNC,KAAM,OACNC,QAAS,CACP,CACEC,UAAW,SACXH,KAAM,cACND,GAAI,eAGRK,MAAO,CACL,CACED,UAAW,SACXH,KAAM,MACND,GAAI,OAEN,CACEI,UAAW,SACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,SACXH,KAAM,QACND,GAAI,UAGRT,MAAO,CACL,CACEW,KAAM,QACNE,UAAW,SACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,aACND,GAAI,aACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,wBACND,GAAI,uBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,oBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,SACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,SACXH,KAAM,iBACND,GAAI,iBACJM,KAAM,KAIZU,GAAI,CACFhB,GAAI,KACJC,KAAM,iBACNC,KAAM,OACNC,QAAS,GACTE,MAAO,GACPd,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,YACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,oBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,aACND,GAAI,YACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,qBACND,GAAI,mBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,KAIZW,GAAI,CACFjB,GAAI,KACJC,KAAM,YACNC,KAAM,aACNC,QAAS,CACP,CACEC,UAAW,KACXH,KAAM,iBACND,GAAI,iBAEN,CACEI,UAAW,KACXH,KAAM,eACND,GAAI,eAEN,CACEI,UAAW,KACXH,KAAM,qBACND,GAAI,oBAEN,CACEI,UAAW,KACXH,KAAM,YACND,GAAI,cAGRK,MAAO,CACL,CACED,UAAW,KACXH,KAAM,WACND,GAAI,YAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,SAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,OACND,GAAI,QAEN,CACEI,UAAW,KACXH,KAAM,YACND,GAAI,aAEN,CACEI,UAAW,KACXH,KAAM,QACND,GAAI,UAGRT,MAAO,CACL,CACEW,KAAM,MACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,SACND,GAAI,SACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,kBACND,GAAI,iBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,mBACND,GAAI,kBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,iBACND,GAAI,gBACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,eACND,GAAI,cACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,YACND,GAAI,WACJM,KAAM,GAER,CACEJ,KAAM,QACNE,UAAW,KACXH,KAAM,gBACND,GAAI,eACJM,KAAM,GAER,CACEJ,KAAM,MACNE,UAAW,KACXH,KAAM,OACND,GAAI,OACJM,KAAM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","file":"static/js/main.91708db2.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\nimport pink from '@material-ui/core/colors/pink'\n\nexport const muiTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nconst playerColors = {\n  player1: {\n    normal: '#8BC34A',\n    light: '#F1F8E9',\n  },\n  player2: {\n    normal: '#FF9800',\n    light: '#FFF3E0',\n  },\n  player3: {\n    normal: '#2196F3',\n    light: '#E3F2FD',\n  },\n  player4: {\n    normal: '#9C27B0',\n    light: '#F3E5F5',\n  },\n}\n\nexport const mainTheme = {\n  heading: {\n    fontSize: muiTheme.typography.pxToRem(15),\n  },\n  spacing: muiTheme.spacing,\n  drawerWidth: 240,\n  muiTransitions: {\n    appBarShift: muiTheme.transitions.create(['margin', 'width'], {\n      easing: muiTheme.transitions.easing.easeOut,\n      duration: muiTheme.transitions.duration.enteringScreen,\n    }),\n    content: muiTheme.transitions.create('margin', {\n      easing: muiTheme.transitions.easing.sharp,\n      duration: muiTheme.transitions.duration.leavingScreen,\n    }),\n    contentShift: muiTheme.transitions.create('margin', {\n      easing: muiTheme.transitions.easing.easeOut,\n      duration: muiTheme.transitions.duration.enteringScreen,\n    }),\n  },\n  colors: {\n    primary: muiTheme.palette.primary,\n    secondary: muiTheme.palette.secondary,\n    text: muiTheme.palette.text,\n    playerColors,\n    turnOrderCards: {\n      ...playerColors,\n      player12: {\n        normal: `linear-gradient(135deg, ${playerColors.player1.normal} 0%, ${\n          playerColors.player1.normal\n        } 50%, ${playerColors.player2.normal} 50%, ${\n          playerColors.player2.normal\n        } 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player1.light} 0%, ${\n          playerColors.player1.light\n        } 50%, ${playerColors.player2.light} 50%, ${\n          playerColors.player2.light\n        } 100%)`,\n      },\n      player34: {\n        normal: `linear-gradient(135deg, ${playerColors.player3.normal} 0%, ${\n          playerColors.player3.normal\n        } 50%, ${playerColors.player4.normal} 50%, ${\n          playerColors.player4.normal\n        } 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player3.light} 0%, ${\n          playerColors.player3.light\n        } 50%, ${playerColors.player4.light} 50%, ${\n          playerColors.player4.light\n        } 100%)`,\n      },\n      wild: {\n        normal: '#9E9E9E',\n        light: '#FAFAFA',\n      },\n      'wild-token': {\n        normal: `linear-gradient(135deg, ${playerColors.player1.normal} 0%, ${\n          playerColors.player1.normal\n        } 33%, ${playerColors.player2.normal} 33%, ${\n          playerColors.player2.normal\n        } 66%, ${playerColors.player3.normal} 66%, ${\n          playerColors.player3.normal\n        } 100%)`,\n        light: `linear-gradient(135deg, ${playerColors.player1.light} 0%, ${\n          playerColors.player1.light\n        } 33%, ${playerColors.player2.light} 33%, ${\n          playerColors.player2.light\n        } 66%, ${playerColors.player3.light} 66%, ${\n          playerColors.player3.light\n        } 100%)`,\n      },\n      nemesis: {\n        normal: '#f44336',\n        light: '#ffebee',\n      },\n      maelstrom: {\n        normal: '#795548',\n        light: '#EFEBE9',\n      },\n      blitz: {\n        normal: '#607D8B',\n        light: '#ECEFF1',\n      },\n    },\n    cards: {\n      gem: {\n        color: '#B39DDB',\n        background: '#EDE7F6',\n      },\n      relic: {\n        color: '#90CAF9',\n        background: '#E3F2FD',\n      },\n      spell: {\n        color: '#FFCC80',\n        background: '#FFF3E0',\n      },\n      nemesis: {\n        color: '#E0E0E0',\n      },\n      mage: {\n        color: '#E0E0E0',\n      },\n    },\n  },\n}\n\nexport type TurnOrderColors = typeof mainTheme.colors.turnOrderCards\n","import { IExpansionData } from '../types'\n\nexport const DATA: IExpansionData = {\n  NA: {\n    id: 'NA',\n    name: 'The New Age',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'NA',\n        name: 'Maggoth',\n        id: 'Maggoth',\n      },\n      {\n        expansion: 'NA',\n        name: 'Arachnos',\n        id: 'Arachnos',\n      },\n      {\n        expansion: 'NA',\n        name: 'Ageless Walker',\n        id: 'Ageless Walker',\n      },\n      {\n        expansion: 'NA',\n        name: 'Fenrix',\n        id: 'Fenrix',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'NA',\n        name: 'Sahala',\n        id: 'Sahala',\n      },\n      {\n        expansion: 'NA',\n        name: 'Gygar',\n        id: 'Gygar',\n      },\n      {\n        expansion: 'NA',\n        name: 'Soskel',\n        id: 'Soskel',\n      },\n      {\n        expansion: 'NA',\n        name: 'Taqren',\n        id: 'Taqren',\n      },\n      {\n        expansion: 'NA',\n        name: 'Talix',\n        id: 'Talix',\n      },\n      {\n        expansion: 'NA',\n        name: 'Rhia',\n        id: 'Rhia',\n      },\n      {\n        expansion: 'NA',\n        name: 'Claudia',\n        id: 'Claudia',\n      },\n      {\n        expansion: 'NA',\n        name: 'Lost',\n        id: 'Lost',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Lurking Sionite',\n        id: 'LurkingSionite',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Unrefined Blaststone',\n        id: 'UnrefinedBlaststone',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Exogranite',\n        id: 'Exogranite',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Recurring Jasper',\n        id: 'RecurringJasper',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Energized Rubidium',\n        id: 'EnergizedRubidium',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'NA',\n        name: 'Resonant Pearl',\n        id: 'ResonantPearl',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Caged Fire',\n        id: 'CagedFire',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Galvanized Bauble',\n        id: 'GalvanizedBauble',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Aether Conduit',\n        id: 'AetherConduit',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Well of Energy',\n        id: 'WellOfEnergy',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Pain Conduit',\n        id: 'PainConduit',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Link Conduit',\n        id: 'LinkConduit',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'NA',\n        name: 'Marble Galaxy',\n        id: 'MarbleGalaxy',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Deluge of Power',\n        id: 'DelugeOfPower',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Reverberating Shock',\n        id: 'ReverberatingShock',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Fatal Harmony',\n        id: 'FatalHarmony',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Bouncing Boom',\n        id: 'BouncingBoom',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Spirit Lift',\n        id: 'SpiritLift',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Tethered Darts',\n        id: 'Tethered Darts',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Force Amplifier',\n        id: 'ForceAmplifier',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Imbued Smash',\n        id: 'ImbuedSmash',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'NA',\n        name: 'Pattern Strike',\n        id: 'PatternStrike',\n        cost: 7,\n      },\n    ],\n  },\n  IW: {\n    id: 'IW',\n    name: 'Into The Wild',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'IW',\n        name: 'Necroswarm',\n        id: 'Necroswarm',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'IW',\n        name: 'Inco',\n        id: 'Inco',\n      },\n      {\n        expansion: 'IW',\n        name: 'Razra',\n        id: 'Razra',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'IW',\n        name: 'Jeweled Brain',\n        id: 'JeweledBrain',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'IW',\n        name: 'Blast Sphere',\n        id: 'BlastSphere',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'IW',\n        name: 'Wound Mender',\n        id: 'WoundMender',\n        cost: 8,\n      },\n    ],\n  },\n  SD: {\n    id: 'SE',\n    name: 'Shattered Dreams',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'SD',\n        name: 'The Wailing',\n        id: 'The Wailing',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'SD',\n        name: 'Nook',\n        id: 'Nook',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'SD',\n        name: 'Olivinite',\n        id: 'Olivinite',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'SD',\n        name: 'Cache Glass',\n        id: 'CacheGlass',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'SD',\n        name: 'Reflective Conduit',\n        id: 'ReflectiveConduit',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'SD',\n        name: 'Will Weaver',\n        id: 'WillWeaver',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Breach Seeker',\n        id: 'BreachSeeker',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Crescendo Ray',\n        id: 'CrescendoRay',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Storm Vapors',\n        id: 'StormVapors',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Mantra of Strength',\n        id: 'MantraOfStrength',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Embody Flame',\n        id: 'EmbodyFlame',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'SD',\n        name: 'Snap Ritual',\n        id: 'SnapRitual',\n        cost: 6,\n      },\n    ],\n  },\n  TA: {\n    id: 'TA',\n    name: 'The Ancients',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'TA',\n        name: 'The Wanderer',\n        id: 'The Wanderer',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'TA',\n        name: 'Mazra',\n        id: 'Mazra',\n      },\n      {\n        expansion: 'TA',\n        name: 'Qu',\n        id: 'Qu',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'TA',\n        name: 'Shining Fluorite',\n        id: 'ShiningFluorite',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TA',\n        name: 'Polyphase Turbine',\n        id: 'PolyphaseTurbine',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TA',\n        name: 'Breach Extractor',\n        id: 'BreachExtractor',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TA',\n        name: 'Focusing Conduit',\n        id: 'FocusingConduit',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TA',\n        name: 'Dual Flash',\n        id: 'DualFlash',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TA',\n        name: 'Dust Caller',\n        id: 'DustCaller',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TA',\n        name: 'Symbiotic Synapse',\n        id: 'SymbioticSynapse',\n        cost: 7,\n      },\n    ],\n  },\n  WE: {\n    id: 'WE',\n    name: 'War Eternal',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'WE',\n        name: 'Gate Witch',\n        id: 'GateWitch',\n      },\n      {\n        expansion: 'WE',\n        name: 'Hollow Crown',\n        id: 'HollowCrown',\n      },\n      {\n        expansion: 'WE',\n        name: 'Magus Of Cloaks',\n        id: 'MagusOfCloaks',\n      },\n      {\n        expansion: 'WE',\n        name: 'Umbra Titan',\n        id: 'UmbraTitan',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'WE',\n        name: 'Dezmodia',\n        id: 'Dezmodia',\n      },\n      {\n        expansion: 'WE',\n        name: 'Garu',\n        id: 'Garu',\n      },\n      {\n        expansion: 'WE',\n        name: 'Gex',\n        id: 'Gex',\n      },\n      {\n        expansion: 'WE',\n        name: 'Mazahaedron',\n        id: 'Mazahaedron',\n      },\n      {\n        expansion: 'WE',\n        name: 'MistWE',\n        id: 'MistWE',\n      },\n      {\n        expansion: 'WE',\n        name: 'Quilius',\n        id: 'Quilius',\n      },\n      {\n        expansion: 'WE',\n        name: 'Ulgimor',\n        id: 'Ulgimor',\n      },\n      {\n        expansion: 'WE',\n        name: 'Yan Magda',\n        id: 'YanMagda',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Erratic Ingot',\n        id: 'ErraticIngot',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Reduce To Ash',\n        id: 'ReduceToAsh',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Vortex Gauntlet',\n        id: 'VortexGauntlet',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Carbonize',\n        id: 'Carbonize',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Equilibrium',\n        id: 'Equilibrium',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Volcanic Glass',\n        id: 'VolcanicGlass',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Convection Field',\n        id: 'ConvectionField',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Jagged Lightning',\n        id: 'JaggedLightning',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Bloodstone Jewel',\n        id: 'BloodstoneJewel',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Kindle',\n        id: 'Kindle',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Thoughtform Familiar',\n        id: 'ThoughtformFamiliar',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Crystallize',\n        id: 'Crystallize',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Fiery Torrent',\n        id: 'FieryTorrent',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Celestial Spire',\n        id: 'CelestialSpire',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Conjure The Lost',\n        id: 'ConjureTheLost',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Nova Forge',\n        id: 'NovaForge',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Dread Diamond',\n        id: 'DreadDiamond',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Cairn Compass',\n        id: 'CairnCompass',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Scoria Slag',\n        id: 'ScoriaSlag',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Breach Ore',\n        id: 'BreachOre',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Fiend Catcher',\n        id: 'FiendCatcher',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Pyrotechnic Surge',\n        id: 'PyrotechnicSurge',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'WE',\n        name: 'Aurora',\n        id: 'Aurora',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Conclave Scroll',\n        id: 'ConclaveScroll',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Primordial Fetish',\n        id: 'PrimordialFetish',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'WE',\n        name: 'Frozen Magmite',\n        id: 'FrozenMagmite',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'WE',\n        name: 'Mages Totem',\n        id: 'MagesTotem',\n        cost: 2,\n      },\n    ],\n  },\n  TV: {\n    id: 'TV',\n    name: 'Void',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'TV',\n        name: 'Knight Of Shackles',\n        id: 'KnightOfShackles',\n      },\n      {\n        expansion: 'TV',\n        name: 'Maiden Of Thorns',\n        id: 'MaidenOfThorns',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'TV',\n        name: 'Sparrow',\n        id: 'Sparrow',\n      },\n      {\n        expansion: 'TV',\n        name: 'XaxosTV',\n        id: 'XaxosTV',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'TV',\n        name: 'Fossilized Scarab',\n        id: 'FossilizedScarab',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Thermal Dart',\n        id: 'ThermalDart',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Resonate',\n        id: 'Resonate',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Conflagration',\n        id: 'Conflagration',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TV',\n        name: 'Dimensional Key',\n        id: 'DimensionalKey',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Inner Fire',\n        id: 'InnerFire',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'TV',\n        name: 'Fulminate',\n        id: 'Fulminate',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'TV',\n        name: 'Eternity Charm',\n        id: 'EternityCharm',\n        cost: 3,\n      },\n    ],\n  },\n  OD: {\n    id: 'OD',\n    name: 'Outer Dark',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'OD',\n        name: 'Thrice Dead Prophet',\n        id: 'ThriceDeadProphet',\n      },\n      {\n        expansion: 'OD',\n        name: 'Wraithmonger',\n        id: 'Wraithmonger',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'OD',\n        name: 'Indira',\n        id: 'Indira',\n      },\n      {\n        expansion: 'OD',\n        name: 'Remnant',\n        id: 'Remnant',\n      },\n    ],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Char',\n        id: 'Char',\n        cost: 8,\n      },\n      {\n        type: 'Gem',\n        expansion: 'OD',\n        name: 'Alien Element',\n        id: 'AlienElement',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Scorch',\n        id: 'Scorch',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Pyromancy',\n        id: 'Pyromancy',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Feedback Aura',\n        id: 'FeedbackAura',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Catalyst',\n        id: 'Catalyst',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'OD',\n        name: 'Pain Stone',\n        id: 'PainStone',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'OD',\n        name: 'Astral Cube',\n        id: 'AstralCube',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'OD',\n        name: 'Riddle Sphere',\n        id: 'RiddleSphere',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'OD',\n        name: 'Nether Conduit',\n        id: 'NetherConduit',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'OD',\n        name: 'Haunted Berylite',\n        id: 'HauntedBerylite',\n        cost: 3,\n      },\n    ],\n  },\n  Nameless: {\n    id: 'Nameless',\n    name: 'Nameless',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'Nameless',\n        name: 'Blight Lord',\n        id: 'BlightLord',\n      },\n      {\n        expansion: 'Nameless',\n        name: 'Wayward One',\n        id: 'WaywardOne',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'Nameless',\n        name: 'Malastar',\n        id: 'Malastar',\n      },\n    ],\n    cards: [\n      {\n        type: 'Relic',\n        expansion: 'Nameless',\n        name: 'Molten Hammer',\n        id: 'MoltenHammer',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Radiance',\n        id: 'Radiance',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Blaze',\n        id: 'Blaze',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Scrying Bolt',\n        id: 'ScryingBolt',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Nameless',\n        name: 'Sages Brand',\n        id: 'SagesBrand',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Nameless',\n        name: 'Leeching Agate',\n        id: 'LeechingAgate',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Nameless',\n        name: 'Temporal Helix',\n        id: 'TemporalHelix',\n        cost: 7,\n      },\n    ],\n  },\n  Legacy: {\n    id: 'Legacy',\n    name: 'Legacy',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'Legacy',\n        name: 'Bladius',\n        id: 'Bladius',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Deathmind',\n        id: 'Deathmind',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Fungal Mesh',\n        id: 'FungalMesh',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Maelstrom Risen',\n        id: 'MaelstromRisen',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Spawning Horror',\n        id: 'SpawningHorror',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Xaxos Ascended',\n        id: 'XaxosAscended',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Green',\n        id: 'LegacyGreen',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Yellow',\n        id: 'LegacyYellow',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Orange',\n        id: 'LegacyOrange',\n      },\n      {\n        expansion: 'Legacy',\n        name: 'Legacy Blue',\n        id: 'LegacyBlue',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Branching Radite',\n        id: 'BranchingRadite',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Fire Chakram',\n        id: 'FireChakram',\n        cost: 2,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Brane Knife',\n        id: 'BraneKnife',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Fulmite Slab',\n        id: 'FulmiteSlab',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Gilded Marble',\n        id: 'GildedMarble',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Voltaic Relay',\n        id: 'VoltaicRelay',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Sparking Siphon',\n        id: 'SparkingSiphon',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Breach Communion',\n        id: 'BreachCommunion',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Infernal Mirror',\n        id: 'InfernalMirror',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Geophage',\n        id: 'Geophage',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Force Transfusion',\n        id: 'ForceTransfusion',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Conductive Grit',\n        id: 'ConductiveGrit',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Ancient Cyanolith',\n        id: 'AncientCyanolith',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Ethereal Hand',\n        id: 'EtherealHand',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Bending Beam',\n        id: 'BendingBeam',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Entangled Shard',\n        id: 'EntangledShard',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Arcane Salvo',\n        id: 'ArcaneSalvo',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Phased Portalite',\n        id: 'PhasedPortalite',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Pyro Geist',\n        id: 'PyroGeist',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Breach Flare',\n        id: 'BreachFlare',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Thunderous Oath',\n        id: 'ThunderousOath',\n        cost: 8,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Soothing Torporene',\n        id: 'SoothingTorporene',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Arcing Silicate',\n        id: 'ArcingSilicate',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Warping Haze',\n        id: 'WarpingHaze',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Incinerating Fist',\n        id: 'IncineratingFist',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Reality Stabilizer',\n        id: 'RealityStabilizer',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Breach Collision',\n        id: 'BreachCollision',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Fiery Conclusion',\n        id: 'FieryConclusion',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Starfire Frenzy',\n        id: 'StarfireFrenzy',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Crumbling Compound',\n        id: 'CrumblingCompound',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Prophetic Lens',\n        id: 'PropheticLens',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Adrenal Batteries',\n        id: 'AdrenalBatteries',\n        cost: 7,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Legacy',\n        name: 'Refined Lumenium',\n        id: 'RefinedLumenium',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Void Mill',\n        id: 'VoidMill',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Gravity Node',\n        id: 'GravityNode',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Legacy',\n        name: 'Neural Wreath',\n        id: 'NeuralWreath',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Legacy',\n        name: 'Sphere OfInversion',\n        id: 'SphereOfInversion',\n        cost: 9,\n      },\n    ],\n  },\n  Depths: {\n    id: 'Depths',\n    name: 'Depths',\n    type: 'mini',\n    nemeses: [\n      {\n        expansion: 'Depths',\n        name: 'Horde Crone',\n        id: 'HordeCrone',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'Depths',\n        name: 'Nym',\n        id: 'Nym',\n      },\n      {\n        expansion: 'Depths',\n        name: 'Reeve',\n        id: 'Reeve',\n      },\n      {\n        expansion: 'Depths',\n        name: 'Zhana',\n        id: 'Zhana',\n      },\n    ],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Void Bond',\n        id: 'VoidBond',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Combustion',\n        id: 'Combustion',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Depths',\n        name: 'Vim Dynamo',\n        id: 'VimDynamo',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Disintegrating Scythe',\n        id: 'DisintegratingScythe',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Monstrous Inferno',\n        id: 'MonstrousInferno',\n        cost: 8,\n      },\n      {\n        type: 'Spell',\n        expansion: 'Depths',\n        name: 'Devouring Shadow',\n        id: 'DevouringShadow',\n        cost: 6,\n      },\n      {\n        type: 'Gem',\n        expansion: 'Depths',\n        name: 'Banishing Topaz',\n        id: 'BanishingTopaz',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'Depths',\n        name: 'Transmogrifier',\n        id: 'Transmogrifier',\n        cost: 4,\n      },\n    ],\n  },\n  BS: {\n    id: 'BS',\n    name: 'Buried Secrets',\n    type: 'mini',\n    nemeses: [],\n    mages: [],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Triplite Core',\n        id: 'TripliteCore',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Nerve Jab',\n        id: 'NerveJab',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Double Tap',\n        id: 'DoubleTap',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Oblivium Resin',\n        id: 'ObliviumResin',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Summonite',\n        id: 'Summonite',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Manifold Container',\n        id: 'ManifoldContainer',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Draining Touch',\n        id: 'DrainingTouch',\n        cost: 2,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Jolting Crust',\n        id: 'JoltingCrust',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Mentite Chunk',\n        id: 'MentiteChunk',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Soul Cords',\n        id: 'SoulCords',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Voidium Spike',\n        id: 'VoidiumSpike',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Precision Shot',\n        id: 'PrecisionShot',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Muted Lacosite',\n        id: 'MutedLacosite',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Blade Of Wisdom',\n        id: 'BladeOfWisdom',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Stunning Force',\n        id: 'StunningForce',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Flash Of Intellect',\n        id: 'FlashOfIntellect',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Scholars Opus',\n        id: 'ScholarsOpus',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Bottled Star',\n        id: 'BottledStar',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Burning Current',\n        id: 'BurningCurrent',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'BS',\n        name: 'Psychic Eruption',\n        id: 'PsychicEruption',\n        cost: 8,\n      },\n      {\n        type: 'Relic',\n        expansion: 'BS',\n        name: 'Living Gauntlet',\n        id: 'LivingGauntlet',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'BS',\n        name: 'Shining Tetrite',\n        id: 'ShiningTetrite',\n        cost: 6,\n      },\n    ],\n  },\n  AE: {\n    id: 'AE',\n    name: 'Aeons End',\n    type: 'standalone',\n    nemeses: [\n      {\n        expansion: 'AE',\n        name: 'Carapace Queen',\n        id: 'CarapaceQueen',\n      },\n      {\n        expansion: 'AE',\n        name: 'Crooked Mask',\n        id: 'CrookedMask',\n      },\n      {\n        expansion: 'AE',\n        name: 'Prince Of Gluttons',\n        id: 'PrinceOfGluttons',\n      },\n      {\n        expansion: 'AE',\n        name: 'Rageborne',\n        id: 'RageBorne',\n      },\n    ],\n    mages: [\n      {\n        expansion: 'AE',\n        name: 'Adelheim',\n        id: 'Adelheim',\n      },\n      {\n        expansion: 'AE',\n        name: 'Brama',\n        id: 'Brama',\n      },\n      {\n        expansion: 'AE',\n        name: 'Jian',\n        id: 'Jian',\n      },\n      {\n        expansion: 'AE',\n        name: 'Kadir',\n        id: 'Kadir',\n      },\n      {\n        expansion: 'AE',\n        name: 'Lash',\n        id: 'Lash',\n      },\n      {\n        expansion: 'AE',\n        name: 'Mist',\n        id: 'Mist',\n      },\n      {\n        expansion: 'AE',\n        name: 'Phaedraxa',\n        id: 'Phaedraxa',\n      },\n      {\n        expansion: 'AE',\n        name: 'Xaxos',\n        id: 'Xaxos',\n      },\n    ],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Diamond Cluster',\n        id: 'DiamondCluster',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Chaos Arc',\n        id: 'ChaosArc',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Ignite',\n        id: 'Ignite',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Essence Theft',\n        id: 'EssenceTheft',\n        cost: 5,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Searing Ruby',\n        id: 'SearingRuby',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Feral Lightning',\n        id: 'FeralLightning',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Planar Insight',\n        id: 'PlanarInsight',\n        cost: 6,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Spectral Echo',\n        id: 'SpectralEcho',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Burning Opal',\n        id: 'BurningOpal',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Consuming Void',\n        id: 'ConsumingVoid',\n        cost: 7,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Unstable Prism',\n        id: 'UnstablePrism',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Clouded Sapphire',\n        id: 'CloudedSapphire',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Mages Talisman',\n        id: 'MagesTalisman',\n        cost: 5,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Flexing Dagger',\n        id: 'FlexingDagger',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Lava Tendril',\n        id: 'LavaTendril',\n        cost: 4,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Bottled Vortex',\n        id: 'BottledVortex',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Arcane Nexus',\n        id: 'ArcaneNexus',\n        cost: 7,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Dark Fire',\n        id: 'DarkFire',\n        cost: 5,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Phoenix Flame',\n        id: 'PhoenixFlame',\n        cost: 3,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Jade',\n        id: 'Jade',\n        cost: 2,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Amplify Vision',\n        id: 'AmplifyVision',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Vriswood Amber',\n        id: 'VriswoodAmber',\n        cost: 3,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Blasting Staff',\n        id: 'BlastingStaff',\n        cost: 4,\n      },\n      {\n        type: 'Gem',\n        expansion: 'AE',\n        name: 'Sifters Pearl',\n        id: 'SiftersPearl',\n        cost: 3,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Wildfire Whip',\n        id: 'WildfireWhip',\n        cost: 6,\n      },\n      {\n        type: 'Relic',\n        expansion: 'AE',\n        name: 'Focusing Orb',\n        id: 'FocusingOrb',\n        cost: 4,\n      },\n      {\n        type: 'Spell',\n        expansion: 'AE',\n        name: 'Oblivion Swell',\n        id: 'OblivionSwell',\n        cost: 5,\n      },\n    ],\n  },\n  'p-1': {\n    id: 'p-1',\n    name: 'Drown in Flames',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-1',\n        name: 'Drown in Flames',\n        id: 'DrownInFlames',\n        cost: 6,\n      },\n    ],\n  },\n  'p-2': {\n    id: 'p-2',\n    name: 'Fleeting Vision',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-2',\n        name: 'Fleeting Vision',\n        id: 'FleetingVision',\n        cost: 3,\n      },\n    ],\n  },\n  'p-3': {\n    id: 'p-3',\n    name: 'Splinter Missile',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-3',\n        name: 'Splinter Missile',\n        id: 'SplinterMissile',\n        cost: 5,\n      },\n    ],\n  },\n  'p-4': {\n    id: 'p-4',\n    name: 'Echo Stone',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'p-4',\n        name: 'Echo Stone',\n        id: 'EchoStone',\n        cost: 4,\n      },\n    ],\n  },\n  'p-5': {\n    id: 'p-5',\n    name: 'Thieving Spirit',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-5',\n        name: 'Thieving Spirit',\n        id: 'ThievingSpirit',\n        cost: 5,\n      },\n    ],\n  },\n  'p-6': {\n    id: 'p-6',\n    name: 'Fractured Quartz',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Gem',\n        expansion: 'p-6',\n        name: 'Fractured Quartz',\n        id: 'FracturedQuartz',\n        cost: 4,\n      },\n    ],\n  },\n  'p-7': {\n    id: 'p-7',\n    name: 'Rock Launcher',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Relic',\n        expansion: 'p-7',\n        name: 'Rock Launcher',\n        id: 'RockLauncher',\n        cost: 3,\n      },\n    ],\n  },\n  'p-8': {\n    id: 'p-8',\n    name: 'Abacus of Ignition',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Relic',\n        expansion: 'p-8',\n        name: 'Abacus of Ignition',\n        id: 'AbacusOfIgnition',\n        cost: 4,\n      },\n    ],\n  },\n  'p-9': {\n    id: 'p-9',\n    name: 'Illuminating Flame',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-9',\n        name: 'Illuminating Flame',\n        id: 'IlluminatingFlame',\n        cost: 6,\n      },\n    ],\n  },\n  'p-10': {\n    id: 'p-10',\n    name: 'Chronal Arc',\n    type: 'promo',\n    mages: [],\n    nemeses: [],\n    cards: [\n      {\n        type: 'Spell',\n        expansion: 'p-10',\n        name: 'Chronal Arc',\n        id: 'ChronalArc',\n        cost: 7,\n      },\n    ],\n  },\n}\n","import { ITurnOrderSetups, ITurnOrderCard } from '../types'\n\nexport const TURNORDERCARDS: { [key: string]: ITurnOrderCard } = {\n  'player1-1': { id: 'player1-1', name: 'Player 1', type: 'player1' },\n  'player1-2': { id: 'player1-2', name: 'Player 1', type: 'player1' },\n  'player1-3': { id: 'player1-3', name: 'Player 1', type: 'player1' },\n  'player1-4': { id: 'player1-4', name: 'Player 1', type: 'player1' },\n\n  'player2-1': { id: 'player2-1', name: 'Player 2', type: 'player2' },\n  'player2-2': { id: 'player2-2', name: 'Player 2', type: 'player2' },\n\n  'player3-1': { id: 'player3-1', name: 'Player 3', type: 'player3' },\n  'player4-1': { id: 'player4-1', name: 'Player 4', type: 'player4' },\n\n  'player12-1': { id: 'player12-1', name: 'Player 1/2', type: 'player12' },\n  'player12-2': { id: 'player12-2', name: 'Player 1/2', type: 'player12' },\n  'player34-1': { id: 'player34-1', name: 'Player 3/4', type: 'player34' },\n  'player34-2': { id: 'player34-2', name: 'Player 3/4', type: 'player34' },\n\n  wild: { id: 'wild', name: 'Wild', type: 'wild' },\n  wildToken: { id: 'wildToken', name: 'Wild Token', type: 'wild-token' },\n\n  'nemesis-1': { id: 'nemesis-1', name: 'Nemesis', type: 'nemesis' },\n  'nemesis-2': { id: 'nemesis-2', name: 'Nemesis', type: 'nemesis' },\n\n  maelstrom: {\n    id: 'maelstrom',\n    name: 'Maelstrom Assault',\n    type: 'maelstrom',\n  },\n\n  blitz: {\n    id: 'blitz',\n    name: 'Blitz',\n    type: 'blitz',\n  },\n}\n\nexport const TURNORDERSETUPS: ITurnOrderSetups = {\n  onePlayer: {\n    id: 'onePlayer',\n    name: '1',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default (3 ToC)',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      '4toc': {\n        id: '4toc',\n        name: '4 ToC',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player1-3'],\n          TURNORDERCARDS['player1-4'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  twoPlayers: {\n    id: 'twoPlayers',\n    name: '2',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player1-2'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player2-2'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  threePlayers: {\n    id: 'threePlayers',\n    name: '3',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['wild'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      wildToken: {\n        id: 'wildToken',\n        name: 'Wild Token',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['wildToken'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n  fourPlayers: {\n    id: 'fourPlayers',\n    name: '4',\n    variations: {\n      default: {\n        id: 'default',\n        name: 'Default',\n        turnOrderCards: [\n          TURNORDERCARDS['player1-1'],\n          TURNORDERCARDS['player2-1'],\n          TURNORDERCARDS['player3-1'],\n          TURNORDERCARDS['player4-1'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n      splitPlayers: {\n        id: 'splitPlayers',\n        name: 'Split Player Cards (1/2, 3/4)',\n        turnOrderCards: [\n          TURNORDERCARDS['player12-1'],\n          TURNORDERCARDS['player12-2'],\n          TURNORDERCARDS['player34-1'],\n          TURNORDERCARDS['player34-2'],\n          TURNORDERCARDS['nemesis-1'],\n          TURNORDERCARDS['nemesis-2'],\n        ],\n      },\n    },\n  },\n}\n","import { DATA } from './aeonsData'\nimport { MARKETSETUPS } from './marketSetups'\nimport { TURNORDERSETUPS, TURNORDERCARDS } from './turnOrderSetups'\nimport * as types from '../types'\n\nconst EXPANSIONS = Object.keys(DATA)\nconst DEFAULTSUPPLYCOUNT = 9\n\nconst normalize = (array: Array<any>) =>\n  array.reduce(\n    (acc, entity) => ({\n      entities: {\n        ...acc.entities,\n        [entity.id]: entity,\n      },\n      ids: [...acc.ids, entity.id],\n    }),\n    {\n      entities: {},\n      ids: [],\n    } as {\n      entities: { [key: string]: Object }\n      ids: string[]\n    }\n  )\n\nconst NORMALIZEDDATA = EXPANSIONS.reduce(\n  (acc: types.NormalizedData, id: string) => {\n    const expansion = DATA[id]\n    const nemeses = normalize(expansion.nemeses)\n    const mages = normalize(expansion.mages)\n    const cards = normalize(expansion.cards)\n\n    return {\n      expansions: {\n        ...acc.expansions,\n        [id]: {\n          id,\n          name: expansion.name,\n          type: expansion.type,\n        },\n      },\n      nemeses: {\n        ...acc.nemeses,\n        ...nemeses.entities,\n      },\n      mages: {\n        ...acc.mages,\n        ...mages.entities,\n      },\n      cards: {\n        ...acc.cards,\n        ...cards.entities,\n      },\n      expansionIds: [...acc.expansionIds, id],\n      nemesisIds: [...acc.nemesisIds, ...nemeses.ids],\n      mageIds: [...acc.mageIds, ...mages.ids],\n      cardIds: [...acc.cardIds, ...cards.ids],\n    }\n  },\n  {\n    expansions: {},\n    nemeses: {},\n    mages: {},\n    cards: {},\n    expansionIds: [],\n    nemesisIds: [],\n    mageIds: [],\n    cardIds: [],\n  } as types.NormalizedData\n)\n\nexport default {\n  DATA,\n  NORMALIZEDDATA,\n  DEFAULTSUPPLYCOUNT,\n  MARKETSETUPS,\n  TURNORDERSETUPS,\n  TURNORDERCARDS,\n}\n","import { IMarketSetups } from '../types'\n\nexport const MARKETSETUPS: IMarketSetups = {\n  market1Inc: {\n    id: 'market1Inc',\n    name: 'Market Setup 1 (inclusive)',\n    type: 'custom',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 4 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<=', threshold: 5 },\n      { type: 'Spell', operation: '<=', threshold: 5 },\n      { type: 'Spell', operation: '>=', threshold: 5 },\n      { type: 'Spell', operation: '>=', threshold: 5 },\n    ],\n  },\n  market1: {\n    id: 'market1',\n    name: 'Market Setup 1',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 4 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<', threshold: 5 },\n      { type: 'Spell', operation: '<', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n    ],\n  },\n  market2: {\n    id: 'market2',\n    name: 'Market Setup 2',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 3 },\n      { type: 'Gem', operation: '>', threshold: 3 },\n      { type: 'Gem', operation: '>', threshold: 3 },\n      { type: 'Relic', operation: '>', threshold: 4 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<', threshold: 6 },\n      { type: 'Spell', operation: '<', threshold: 6 },\n      { type: 'Spell', operation: '<', threshold: 6 },\n      { type: 'Spell', operation: '>', threshold: 6 },\n    ],\n  },\n  market3: {\n    id: 'market3',\n    name: 'Market Setup 3',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '<', threshold: 4 },\n      { type: 'Gem', operation: 'OR', values: [4, 5] },\n      { type: 'Gem', operation: 'OR', values: [4, 5] },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '=', threshold: 3 },\n      { type: 'Spell', operation: '=', threshold: 4 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n    ],\n  },\n  market4: {\n    id: 'market4',\n    name: 'Market Setup 4',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '>', threshold: 4 },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: '<', threshold: 4 },\n      { type: 'Relic', operation: '>', threshold: 4 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '<', threshold: 5 },\n      { type: 'Spell', operation: '>', threshold: 5 },\n      { type: 'Spell', operation: 'ANY' },\n    ],\n  },\n  market5: {\n    id: 'market5',\n    name: 'Market Setup 5',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '=', threshold: 2 },\n      { type: 'Gem', operation: '=', threshold: 3 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Gem', operation: '=', threshold: 5 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: '=', threshold: 4 },\n      { type: 'Spell', operation: '=', threshold: 5 },\n      { type: 'Spell', operation: '=', threshold: 6 },\n      { type: 'Spell', operation: '>', threshold: 6 },\n    ],\n  },\n  market6: {\n    id: 'market6',\n    name: 'Market Setup 6',\n    type: 'official',\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: '=', threshold: 3 },\n      { type: 'Gem', operation: '=', threshold: 4 },\n      { type: 'Relic', operation: '<', threshold: 4 },\n      { type: 'Relic', operation: '>', threshold: 4 },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: 'OR', values: [3, 4] },\n      { type: 'Spell', operation: 'OR', values: [5, 6] },\n      { type: 'Spell', operation: 'OR', values: [5, 6] },\n      { type: 'Spell', operation: '>', threshold: 6 },\n    ],\n  },\n  random: {\n    id: 'random',\n    name: 'Random Setup (Default)',\n    type: 'official',\n    default: true, // this flag removes the setup from the settings, so it will always be active\n    active: true,\n    tiles: [\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Gem', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Relic', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n      { type: 'Spell', operation: 'ANY' },\n    ],\n  },\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport * as types from '../../../../types'\nimport config from '../../../../config'\nimport { RootState } from '../..'\n\nconst EXPANSIONS_DB_KEY = 'expansions-1.7'\n\n///////////\n// STATE //\n///////////\n\ntype Expansions = {\n  [key: string]: types.Expansion & { selected: boolean }\n}\n\nexport type State = Readonly<{\n  expansions: Expansions\n  expansionIds: string[]\n}>\n\nexport const initialState: State = {\n  expansions: config.NORMALIZEDDATA.expansionIds.reduce(\n    (acc, id) => ({\n      ...acc,\n      [id]: {\n        ...config.NORMALIZEDDATA.expansions[id],\n        selected: false,\n      },\n    }),\n    {}\n  ),\n  expansionIds: config.NORMALIZEDDATA.expansionIds,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Expansiontings/Expansions/SelectedExpansions/TOGGLE_ALL',\n  TOGGLE_EXPANSION = 'Expansiontings/Expansions/SelectedExpansions/TOGGLE_EXPANSION',\n  SET_TO_DB = 'Expansiontings/Expansions/SelectedExpansions/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Expansiontings/Expansions/SelectedExpansions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Expansiontings/Expansions/SelectedExpansions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Expansiontings/Expansions/SelectedExpansions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Expansiontings/Expansions/SelectedExpansions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Expansiontings/Expansions/SelectedExpansions/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleExpansion: (id: string) =>\n    createAction(ActionTypes.TOGGLE_EXPANSION, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nconst allExpansionsAreSelected = (expansions: Expansions) =>\n  Object.values(expansions).every(exp => exp.selected)\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      const allExpansionsSelected = allExpansionsAreSelected(state.expansions)\n      const newExpansionsState = Object.values(state.expansions).reduce(\n        (acc, exp) => ({\n          ...acc,\n          [exp.id]: {\n            ...exp,\n            selected: !allExpansionsSelected,\n          },\n        }),\n        {}\n      )\n\n      const newState = {\n        ...state,\n        expansions: newExpansionsState,\n      }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [EXPANSIONS_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.TOGGLE_EXPANSION: {\n      console.log(action.payload)\n      const newState = {\n        ...state,\n        expansions: {\n          ...state.expansions,\n          [action.payload]: {\n            ...state.expansions[action.payload],\n            selected: !state.expansions[action.payload].selected,\n          },\n        },\n      }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [EXPANSIONS_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [EXPANSIONS_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return action.payload || initialState\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedExpansionsState = (state: RootState) =>\n  state.Settings.Expansions.SelectedExpansions\n\nconst getSelectedExpansionsArray = createSelector(\n  [getSelectedExpansionsState],\n  state => state.expansionIds.filter(id => state.expansions[id].selected)\n)\n\nconst getAllExpansionsSelected = createSelector(\n  [getSelectedExpansionsState],\n  state => allExpansionsAreSelected(state.expansions)\n)\n\nconst getHasStandaloneExpansion = createSelector(\n  [getSelectedExpansionsArray],\n  selectedExpansions =>\n    selectedExpansions.some(\n      expansion => config.DATA[expansion].type === 'standalone'\n    )\n)\n\nconst getStandaloneExpansionIds = createSelector(\n  [getSelectedExpansionsState],\n  state =>\n    state.expansionIds.filter(id => state.expansions[id].type === 'standalone')\n)\nconst getMiniExpansionIds = createSelector(\n  [getSelectedExpansionsState],\n  state => state.expansionIds.filter(id => state.expansions[id].type === 'mini')\n)\nconst getPromoIds = createSelector(\n  [getSelectedExpansionsState],\n  state =>\n    state.expansionIds\n      .filter(id => state.expansions[id].type === 'promo')\n      .sort((a, b) => {\n        const promoA = state.expansions[a].name\n        const promoB = state.expansions[b].name\n\n        if (promoA < promoB) {\n          return -1\n        }\n\n        if (promoA > promoB) {\n          return 1\n        }\n\n        return 0\n      })\n)\n\nconst getStandaloneExpansions = createSelector(\n  [getSelectedExpansionsState, getStandaloneExpansionIds],\n  (state, ids) => ids.map(id => state.expansions[id])\n)\nconst getMiniExpansions = createSelector(\n  [getSelectedExpansionsState, getMiniExpansionIds],\n  (state, ids) => ids.map(id => state.expansions[id])\n)\nconst getPromos = createSelector(\n  [getSelectedExpansionsState, getPromoIds],\n  (state, ids) => ids.map(id => state.expansions[id])\n)\n\nexport const selectors = {\n  getSelectedExpansionsState,\n  getSelectedExpansionsArray,\n  getAllExpansionsSelected,\n  getHasStandaloneExpansion,\n  getStandaloneExpansionIds,\n  getMiniExpansionIds,\n  getPromoIds,\n  getStandaloneExpansions,\n  getMiniExpansions,\n  getPromos,\n}\n","import { LoopReducer } from 'redux-loop'\n\nimport { RootState } from '../'\nimport * as SelectedExpansions from '../Settings/Expansions/SelectedExpansions'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<boolean>\nexport const initialState = false\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = SelectedExpansions.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB: {\n      return true\n    }\n\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_SUCCESS:\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return false\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getIsLoading = (state: RootState) => state.MainContentLoading\n\nexport const selectors = {\n  getIsLoading,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as SelectedExpansions from './SelectedExpansions'\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  SelectedExpansions: SelectedExpansions.State\n}\n\nexport const initialState = {\n  SelectedExpansions: SelectedExpansions.initialState,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = SelectedExpansions.Action\n\nexport const actions = {\n  SelectedExpansions: SelectedExpansions.actions,\n}\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = combineReducers<State, Action>({\n  SelectedExpansions: SelectedExpansions.Reducer,\n})\n\n///////////////\n// SELECTORS //\n///////////////\n\nexport const selectors = {\n  SelectedExpansions: SelectedExpansions.selectors,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\nimport shortid from 'shortid'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\nconst SUPPLY_DB_KEY = 'supplySetups-1.6' // FIXME this is a quickfix, see https://github.com/on3iro/aeons-end-randomizer/issues/138\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Predefined: types.IMarketSetups\n  Custom: types.IMarketSetups\n}\nexport const initialState: State = {\n  Predefined: config.MARKETSETUPS,\n  Custom: {},\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/SupplySetups/TOGGLE_ALL',\n  TOGGLE_SETUP = 'Settings/SupplySetups/TOGGLE_SETUP',\n  CREATE_CUSTOM_SETUP = 'Settings/SupplySetups/CREATE_CUSTOM_SETUP',\n  SAVE_CUSTOM_SETUP = 'Settings/SupplySetups/SAVE_CUSTOM_SETUP',\n  CANCEL_EDIT_SETUP = 'Settings/SupplySetups/CANCEL_EDIT_SETUP',\n  EDIT_CUSTOM_SETUP = 'Settings/SupplySetups/EDIT_CUSTOM_SETUP',\n  DELETE_CUSTOM_SETUP = 'Settings/SupplySetups/DELETE_CUSTOM_SETUP',\n  SET_TO_DB = 'Settings/SupplySetups/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'Settings/SupplySetups/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'Settings/SupplySetups/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/SupplySetups/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/SupplySetups/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/SupplySetups/FETCH_FROM_DB_FAILURE',\n}\n\ntype SetupType = 'Predefined' | 'Custom'\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleSetup: (setup: string, setupType: SetupType) =>\n    createAction(ActionTypes.TOGGLE_SETUP, { setup, setupType }),\n  createCustomSetup: () =>\n    createAction(ActionTypes.CREATE_CUSTOM_SETUP, shortid.generate()),\n  saveCustomSetup: (setup: types.IMarketSetup) =>\n    createAction(ActionTypes.SAVE_CUSTOM_SETUP, setup),\n  cancelEdit: (id: string) => createAction(ActionTypes.CANCEL_EDIT_SETUP, id),\n  editCustomSetup: (id: string) =>\n    createAction(ActionTypes.EDIT_CUSTOM_SETUP, id),\n  deleteCustomSetup: (id: string) =>\n    createAction(ActionTypes.DELETE_CUSTOM_SETUP, id),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) =>\n    createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) =>\n    createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nconst allSetsAreSelected = (state: State) =>\n  Object.values({ ...state.Predefined, ...state.Custom }).every(\n    val => val.active\n  )\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      const allSetsSelected = allSetsAreSelected(state)\n      const newPredefined = Object.values(state.Predefined).reduce(\n        (acc, setup) => ({\n          ...acc,\n          [setup.id]: {\n            ...setup,\n            active: setup.default ? true : !allSetsSelected,\n          },\n        }),\n        {}\n      )\n      const newCustom = Object.values(state.Custom).reduce(\n        (acc, setup) => ({\n          ...acc,\n          [setup.id]: { ...setup, active: !allSetsSelected },\n        }),\n        {}\n      )\n      const newState = { Predefined: newPredefined, Custom: newCustom }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.TOGGLE_SETUP: {\n      const { setup, setupType } = action.payload\n      const newState = {\n        ...state,\n        [setupType]: {\n          ...state[setupType],\n          [setup]: {\n            ...state[setupType][setup],\n            active: !state[setupType][setup].active,\n          },\n        },\n      }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [SUPPLY_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return action.payload || initialState\n    }\n\n    case ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return state\n    }\n\n    case ActionTypes.CREATE_CUSTOM_SETUP: {\n      const id = action.payload\n      return {\n        ...state,\n        Custom: {\n          [id]: {\n            id,\n            name: '',\n            type: 'custom',\n            active: false,\n            tiles: [],\n            isDirty: true,\n            isNew: true,\n          },\n          ...state.Custom,\n        },\n      }\n    }\n\n    case ActionTypes.SAVE_CUSTOM_SETUP: {\n      const setup = action.payload\n      // Because we currently do not have a specific mapping from Blueprints\n      // to actual cards in the supply it is important,\n      // that we keep the order of Gem -> Relic -> Spell for supply sets.\n      const tiles = [...setup.tiles].sort((a, b) => {\n        if (a.type === 'Gem') {\n          return -1\n        }\n\n        if (a.type === 'Relic' && b.type === 'Spell') {\n          return -1\n        }\n\n        return 1\n      })\n\n      const newState = {\n        ...state,\n        Custom: {\n          ...state.Custom,\n          [setup.id]: {\n            ...setup,\n            tiles,\n            isNew: false,\n            isDirty: false,\n          },\n        },\n      }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.EDIT_CUSTOM_SETUP: {\n      const id = action.payload\n\n      return {\n        ...state,\n        Custom: {\n          ...state.Custom,\n          [id]: {\n            ...state.Custom[id],\n            isDirty: true,\n          },\n        },\n      }\n    }\n\n    case ActionTypes.CANCEL_EDIT_SETUP: {\n      const id = action.payload\n\n      const { [id]: setup, ...rest } = state.Custom\n\n      if (setup.isNew) {\n        return { ...state, Custom: { ...rest } }\n      }\n\n      return {\n        ...state,\n        Custom: {\n          ...rest,\n          [id]: {\n            ...setup,\n            isDirty: false,\n          },\n        },\n      }\n    }\n\n    // FIXME should prompt the user if he really wants to delete the setup\n    case ActionTypes.DELETE_CUSTOM_SETUP: {\n      const id = action.payload\n\n      const { [id]: setup, ...rest } = state.Custom\n      const newState = { ...state, Custom: { ...rest } }\n\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [SUPPLY_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getState = (state: RootState) => state.Settings.SupplySetups\nconst getPredefined = (state: RootState) =>\n  state.Settings.SupplySetups.Predefined\nconst getCustom = (state: RootState) => state.Settings.SupplySetups.Custom\n\nconst getPredefinedAsArray = createSelector(\n  [getPredefined],\n  predefined => Object.values(predefined).filter(setup => !setup.default)\n)\n\nconst getCustomAsArray = createSelector(\n  [getCustom],\n  custom => Object.values(custom).filter(setup => !setup.default)\n)\n\nconst getCustomAndPredefined = createSelector(\n  [getPredefined, getCustom],\n  (predefined, custom) => ({ ...predefined, ...custom })\n)\n\nconst getAllAsArray = createSelector(\n  [getCustomAndPredefined],\n  customAndPredefined => Object.values(customAndPredefined)\n)\n\nconst makeGetCustomAndPredefined = () => getCustomAndPredefined\n\nconst getAllExceptDefaultSets = createSelector(\n  [getAllAsArray],\n  allSets => allSets.filter(set => !set.default)\n)\n\nconst getActiveSetups = createSelector(\n  [getAllAsArray],\n  allSets => allSets.filter(setup => setup.active)\n)\n\nconst getAllSetsSelected = createSelector(\n  [getState],\n  state => allSetsAreSelected(state)\n)\n\nexport const selectors = {\n  getActiveSetups,\n  getAllAsArray,\n  getAllExceptDefaultSets,\n  getAllSetsSelected,\n  getCustom,\n  getCustomAndPredefined,\n  getCustomAsArray,\n  getPredefined,\n  getPredefinedAsArray,\n  makeGetCustomAndPredefined,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { ICreature } from '../../../types'\nimport { RootState } from '../'\nimport { getListOfAvailableEntity, getRandomEntity } from '../../helpers'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<ICreature> | undefined\nexport const initialState: State = undefined\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Nemesis/SET_RANDOM',\n}\n\nexport const actions = {\n  setRandomNemesis: (expansions: ReadonlyArray<string>) =>\n    createAction(ActionTypes.SET_RANDOM, expansions),\n  noOp: () => createAction('NOOP'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const expansions = action.payload\n      const availableNemeses = getListOfAvailableEntity(expansions, 'nemeses')\n      return getRandomEntity(availableNemeses)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getNemesis = (state: RootState) => state.Nemesis\n\nexport const selectors = {\n  getNemesis,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Expansions from './Expansions'\nimport * as SupplySetups from './SupplySetups'\n\nexport type State = {\n  Expansions: Expansions.State\n  SupplySetups: SupplySetups.State\n}\n\nexport type Action = Expansions.Action | SupplySetups.Action\n\nexport const actions = {\n  Expansions: Expansions.actions,\n  SupplySetups: SupplySetups.actions,\n}\n\nexport const selectors = {\n  Expansions: Expansions.selectors,\n  SupplySetups: SupplySetups.selectors,\n}\n\nexport const initialState = {\n  Expansions: Expansions.initialState,\n  SupplySetups: SupplySetups.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Expansions: Expansions.Reducer,\n  SupplySetups: SupplySetups.Reducer,\n})\n","import config from '../config'\nimport * as types from '../types'\n\nexport const createSlotList = (\n  amount: number\n): Array<types.IEmptyBluePrint> => {\n  return Array.from(\n    { length: amount },\n    (): types.IEmptyBluePrint => ({ type: 'EMPTY', operation: 'NoOp' })\n  )\n}\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = [ \"AE\", \"WE\" ]\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ {...}, ...]\n */\nexport const getListOfAvailableEntity = (\n  selectedSets: ReadonlyArray<string>,\n  entity: types.EntityType\n) =>\n  selectedSets.reduce(\n    (\n      acc: Array<types.ICard | types.ICreature>,\n      expansion: string\n    ): Array<types.ICard | types.ICreature> => {\n      return [...acc, ...config.DATA[expansion][entity]]\n    },\n    []\n  )\n\nexport const isCardArray = (\n  entityList: Array<types.ICard | types.ICreature>\n): entityList is Array<types.ICard> => {\n  return (entityList[0] as types.ICard).name !== undefined\n}\n\n// TODO Refactor turnorder cards and mages (code duplication)\ntype TurnOrderListReductionResult = {\n  availableCards: types.ITurnOrderCard[]\n  result: types.ITurnOrderCard[]\n}\n\nexport const createTurnOrderCardList = (\n  availableCards: types.ITurnOrderCard[],\n  slots: types.ITurnOrderCard[],\n  getEntity: <T>(list: Array<T>) => T\n): TurnOrderListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: TurnOrderListReductionResult,\n      slot: types.ITurnOrderCard,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(acc.availableCards) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [...acc.result, card],\n      }\n    },\n    { availableCards, result: [] }\n  )\n\n  return result\n}\n\ntype MageListReductionResult = {\n  availableMages: types.ICreature[]\n  result: types.ICreature[]\n}\n\nexport const createMageList = (\n  availableMages: types.ICreature[],\n  slots: Array<types.Slot>,\n  getEntity: <T>(list: Array<T>) => T\n): MageListReductionResult => {\n  const result = slots.reduce(\n    (acc: MageListReductionResult, slot: types.Slot, i: number) => {\n      // If no entity is left, simply return the actual empty slot\n      const mage = getEntity(acc.availableMages) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingMages = acc.availableMages.filter(\n        entity => entity.id !== mage.id\n      )\n\n      return {\n        availableMages: remainingMages,\n        result: [...acc.result, mage],\n      }\n    },\n    { availableMages, result: [] }\n  )\n\n  return result\n}\n\nexport const shuffleDeck = (\n  deck: types.ITurnOrderCard[]\n): types.ITurnOrderCard[] => {\n  return createTurnOrderCardList(deck, deck, getRandomEntity).result\n}\n\n/**\n * Gets a random value from a list. (The wording of entities is just used for semantic context)\n */\nexport const getRandomEntity = <E>(availableEntities: Array<E>) =>\n  availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\nexport const getOperationString = (\n  operation: types.Operation,\n  values?: number[],\n  threshold?: number\n) => {\n  if (operation === 'OR' && values) {\n    return values.join('/')\n  }\n\n  const thresholdValue = threshold ? threshold : ''\n\n  return `${operation} ${thresholdValue}`\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type MageCount = 1 | 2 | 3 | 4\nexport type State = MageCount\nexport const initialState: State = 1\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET = 'Mages/Count/SET',\n}\n\nexport const actions = {\n  setCount: (count: MageCount) => createAction(ActionTypes.SET, count),\n  noOp: () => createAction('NOOP'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCount = (state: RootState) => state.Mages.Count\n\nexport const selectors = {\n  getCount,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { ICreature } from '../../../../types'\nimport { RootState } from '../../'\nimport {\n  createSlotList,\n  createMageList,\n  getListOfAvailableEntity,\n  getRandomEntity,\n} from '../../../helpers'\n\nimport { MageCount } from '../Count'\n\n///////////\n// STATE //\n///////////\n\nexport type State = ReadonlyArray<ICreature>\nexport const initialState: State = []\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Mages/Recruited/SET_RANDOM',\n}\n\nexport const actions = {\n  setRandomMages: (expansions: ReadonlyArray<string>, count: MageCount) =>\n    createAction(ActionTypes.SET_RANDOM, { expansions, count }),\n  noOp: () => createAction('NOOP'),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const { expansions, count } = action.payload\n      const availableMages = getListOfAvailableEntity(expansions, 'mages')\n      const slotList = createSlotList(count)\n      const { result } = createMageList(\n        availableMages,\n        slotList,\n        getRandomEntity\n      )\n      return result\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMages = (state: RootState) => state.Mages.Recruited\n\nexport const selectors = {\n  getMages,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Count from './Count'\nimport * as Recruited from './Recruited'\n\nexport type State = {\n  Count: Count.State\n  Recruited: Recruited.State\n}\n\nexport type Action = Count.Action | Recruited.Action\n\nexport const selectors = {\n  Count: Count.selectors,\n  Recruited: Recruited.selectors,\n}\n\nexport const actions = {\n  Count: Count.actions,\n  Recruited: Recruited.actions,\n}\n\nexport const initialState = {\n  Count: Count.initialState,\n  Recruited: Recruited.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Count: Count.Reducer,\n  Recruited: Recruited.Reducer,\n})\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Selected: types.IMarketSetup\n}>\nexport const initialState: State = {\n  // FIXME we should ensure with typescript, that the 'default: true' property is not\n  // optional for default state here\n  Selected: config.MARKETSETUPS['random'],\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SELECT_SETUP = 'Supply/Selection/SELECT_SETUP',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  selectSetup: (setup: Readonly<types.IMarketSetup>) =>\n    createAction(ActionTypes.SELECT_SETUP, setup),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SELECT_SETUP: {\n      return {\n        ...state,\n        Selected: action.payload,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedSetup = (state: RootState) => state.Supply.Selection.Selected\n\nexport const selectors = {\n  getSelectedSetup,\n}\n","import { ICard, IBluePrint, CardType } from '../../../../types'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity,\n  isCardArray,\n} from '../../../helpers'\n\ntype CardListReduceResult = {\n  availableCards: ICard[]\n  result: ICard[]\n}\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n */\nconst filterByCost = (card: ICard, setupBlueprint: IBluePrint) => {\n  switch (setupBlueprint.operation) {\n    case '<': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost < setupBlueprint.threshold\n    }\n    case '>': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost > setupBlueprint.threshold\n    }\n    case '<=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost <= setupBlueprint.threshold\n    }\n    case '>=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost >= setupBlueprint.threshold\n    }\n    case '=': {\n      if (!setupBlueprint.threshold) return true\n      return card.cost === setupBlueprint.threshold\n    }\n    case 'OR': {\n      if (!setupBlueprint.values) return true\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nconst createCardList = (\n  availableCards: ICard[],\n  blueprints: Array<IBluePrint>,\n  getEntity: <T>(list: Array<T>) => T\n): CardListReduceResult =>\n  blueprints.reduce(\n    (acc: CardListReduceResult, blueprint: IBluePrint, i: number) => {\n      const filteredByCost = acc.availableCards.filter(card =>\n        filterByCost(card, blueprint)\n      )\n\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(filteredByCost) || blueprint\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [...acc.result, card],\n      }\n    },\n    { availableCards, result: [] }\n  )\n\n/**\n * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n * The amount of cards generated is determined by the amount of tileSetups matching\n * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n * specified type is \"Gem\" as well, a list of two cards will be created.\n *\n * return List<Card>\n */\nconst getRandomCardsByType = (\n  availableCards: ReadonlyArray<ICard>,\n  tileSetups: ReadonlyArray<IBluePrint>,\n  cardType: CardType\n) => {\n  const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n  const availableCardsOfType = availableCards.filter(\n    ({ type }) => type === cardType\n  )\n  return createCardList(availableCardsOfType, cardSlots, getRandomEntity)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n */\nexport const createSupply = (\n  selectedExpansions: ReadonlyArray<string>,\n  tileSetups: ReadonlyArray<IBluePrint>\n) => {\n  const availableCards = getListOfAvailableEntity(selectedExpansions, 'cards')\n\n  if (!isCardArray(availableCards)) {\n    return {\n      gems: { result: [] },\n      relics: { result: [] },\n      spells: { result: [] },\n    }\n  }\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, 'Gem')\n  const relics = getRandomCardsByType(availableCards, tileSetups, 'Relic')\n  const spells = getRandomCardsByType(availableCards, tileSetups, 'Spell')\n\n  return { gems, relics, spells }\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\n\nimport { Slot, ICard } from '../../../../types'\nimport { createSlotList } from '../../../helpers'\nimport config from '../../../../config'\nimport { RootState } from '../../'\nimport { createSupply } from './helpers'\nimport * as SupplySelection from '../Selection'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Cards: ReadonlyArray<Slot | ICard>\n}>\nexport const initialState: State = {\n  Cards: createSlotList(config.DEFAULTSUPPLYCOUNT),\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  RESET = 'Supply/RandomSetup/RESET',\n  CREATE = 'Supply/RandomSetup/CREATE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  resetMarket: () => createAction(ActionTypes.RESET),\n  createMarket: (\n    expansions: ReadonlyArray<string>,\n    tiles: ReadonlyArray<Slot>\n  ) => createAction(ActionTypes.CREATE, { expansions, tiles }),\n}\n\nexport type Action = ActionsUnion<typeof actions> | SupplySelection.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SupplySelection.ActionTypes.SELECT_SETUP:\n    case ActionTypes.RESET: {\n      return initialState\n    }\n\n    case ActionTypes.CREATE: {\n      const { expansions, tiles } = action.payload\n      const { gems, relics, spells } = createSupply(expansions, tiles)\n      return {\n        ...state,\n        Cards: [...gems.result, ...relics.result, ...spells.result],\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCards = (state: RootState) => state.Supply.RandomSetup.Cards\n\nexport const selectors = {\n  getCards,\n}\n","import { combineReducers } from 'redux-loop'\n\nimport * as Selection from './Selection'\nimport * as RandomSetup from './RandomSetup'\n\nexport type State = {\n  Selection: Selection.State\n  RandomSetup: RandomSetup.State\n}\n\nexport type Action = Selection.Action | RandomSetup.Action\n\nexport const actions = {\n  Selection: Selection.actions,\n  RandomSetup: RandomSetup.actions,\n}\n\nexport const selectors = {\n  Selection: Selection.selectors,\n  RandomSetup: RandomSetup.selectors,\n}\n\nexport const initialState = {\n  Selection: Selection.initialState,\n  RandomSetup: RandomSetup.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Selection: Selection.Reducer,\n  RandomSetup: RandomSetup.Reducer,\n})\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport { RootState } from '../../'\nimport { ITurnOrderCard } from '../../../../types'\nimport { shuffleDeck } from '../../../helpers'\n\nexport const TURNORDER_GAME_DB_KEY = 'turnOrderGameState'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run<Action>(setToDb, {\n      args: [TURNORDER_GAME_DB_KEY, newState],\n      successActionCreator: actions.setTurnOrderToDbSuccess,\n      failActionCreator: actions.setTurnOrderToDbFailure,\n    })\n  )\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  deck: Array<ITurnOrderCard>\n  discard: Array<ITurnOrderCard>\n  started: boolean\n}\nexport const initialState: State = {\n  deck: [],\n  discard: [],\n  started: false,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  INIT = 'TurnOrder/ActiveGame/INIT',\n  DRAW = 'TurnOrder/ActiveGame/DRAW',\n  NEW_ROUND = 'TurnOrder/ActiveGame/NEW_ROUND',\n  ADD_TO_TOP = 'TurnOrder/ActiveGame/ADD_TO_TOP',\n  ADD_TO_BOTTOM = 'TurnOrder/ActiveGame/ADD_TO_BOTTOM',\n  SHUFFLE_INTO_DECK = 'TurnOrder/ActiveGame/SHUFFLE_INTO_DECK',\n  SET_TURNORDER_TO_DB_SUCCESS = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_SUCCESS',\n  SET_TURNORDER_TO_DB_FAILURE = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_FAILURE',\n  START_GAME = 'TurnOrder/ActiveGame/START_GAME',\n  RESET_GAME = 'TurnOrder/ActiveGame/RESET_GAME',\n  FETCH_FROM_DB = 'TurnOrder/ActiveGame/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/ActiveGame/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/ActiveGame/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  init: (state: State) => createAction(ActionTypes.INIT, state),\n  draw: () => createAction(ActionTypes.DRAW),\n  newRound: (turnOrderCards: ITurnOrderCard[]) =>\n    createAction(ActionTypes.NEW_ROUND, turnOrderCards),\n  addToTop: (cardId: string) => createAction(ActionTypes.ADD_TO_TOP, cardId),\n  addToBottom: (cardId: string) =>\n    createAction(ActionTypes.ADD_TO_BOTTOM, cardId),\n  shuffleIntoDeck: (cardId: string) =>\n    createAction(ActionTypes.SHUFFLE_INTO_DECK, cardId),\n  setTurnOrderToDbSuccess: () =>\n    createAction(ActionTypes.SET_TURNORDER_TO_DB_SUCCESS),\n  setTurnOrderToDbFailure: () =>\n    createAction(ActionTypes.SET_TURNORDER_TO_DB_FAILURE),\n  startGame: (turnOrderCards: ITurnOrderCard[]) =>\n    createAction(ActionTypes.START_GAME, turnOrderCards),\n  resetGame: () => createAction(ActionTypes.RESET_GAME),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.INIT: {\n      return action.payload\n    }\n\n    case ActionTypes.DRAW: {\n      const { deck } = state\n\n      if (deck.length === 0) return state\n\n      const cardDrawn = deck[deck.length - 1]\n\n      const newState = {\n        ...state,\n        deck: deck.filter(card => card.id !== cardDrawn.id),\n        discard: [cardDrawn, ...state.discard],\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.NEW_ROUND: {\n      const newState = {\n        ...state,\n        deck: shuffleDeck(action.payload),\n        discard: [],\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_TOP: {\n      const cardId = action.payload\n      const cardToAdd = state.discard.find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [...state.deck, cardToAdd],\n        discard: state.discard.filter(card => card.id !== cardId),\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_BOTTOM: {\n      const cardId = action.payload\n      const cardToAdd = state.discard.find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [cardToAdd, ...state.deck],\n        discard: state.discard.filter(card => card.id !== cardId),\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.SHUFFLE_INTO_DECK: {\n      const cardId = action.payload\n      const cardToShuffle = state.discard.find(card => card.id === cardId)\n\n      if (!cardToShuffle) return state\n\n      const newDeck = [...state.deck, cardToShuffle]\n      const shuffledDeck = shuffleDeck(newDeck)\n\n      const newState = {\n        ...state,\n        deck: shuffledDeck,\n        discard: state.discard.filter(card => card.id !== cardId),\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.START_GAME: {\n      return newStateWithDBWrite({\n        started: true,\n        deck: shuffleDeck(action.payload),\n        discard: [],\n      })\n    }\n\n    case ActionTypes.RESET_GAME: {\n      return newStateWithDBWrite({\n        started: false,\n        deck: [],\n        discard: [],\n      })\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [TURNORDER_GAME_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getDeck = (state: RootState) => state.TurnOrder.ActiveGame.deck\nconst getDiscard = (state: RootState) => state.TurnOrder.ActiveGame.discard\nconst getHasStarted = (state: RootState) => state.TurnOrder.ActiveGame.started\n\nexport const selectors = {\n  getDeck,\n  getDiscard,\n  getHasStarted,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { ITurnOrderPlayerCount, ITurnOrderSetup, Mode } from '../../../../types'\nimport { RootState } from '../../'\nimport {\n  actions as activeGameActions,\n  Action as ActiveGameAction,\n} from '../ActiveGame'\n\nconst TURNORDER_CONFIG_DB_KEY = 'turnOrderConfiguration'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst adjustSetup = (mode: Mode, setup: ITurnOrderSetup): ITurnOrderSetup => {\n  switch (mode) {\n    case 'Maelstrom': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1' || card.id === 'blitz'\n            ? config.TURNORDERCARDS['maelstrom']\n            : card\n        }),\n      }\n    }\n\n    case 'Blitz': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return card.id === 'nemesis-1' || card.id === 'maelstrom'\n            ? config.TURNORDERCARDS['blitz']\n            : card\n        }),\n      }\n    }\n\n    case 'Default':\n    default: {\n      return setup\n    }\n  }\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Mode: Mode\n  SelectedPlayerCount: ITurnOrderPlayerCount\n  SelectedSetup: ITurnOrderSetup\n}>\n\nconst INITIAL_MODE = 'Default'\nconst INITIAL_PLAYER_SETUP = config.TURNORDERSETUPS['onePlayer']\nconst INITIAL_VARIATION = INITIAL_PLAYER_SETUP.variations['default']\n\nexport const initialState: State = {\n  Mode: INITIAL_MODE,\n  SelectedPlayerCount: INITIAL_PLAYER_SETUP,\n  SelectedSetup: INITIAL_VARIATION,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_MODE = 'TurnOrder/Configuration/SET_MODE',\n  SELECT_PLAYER_COUNT = 'TurnOrder/Configuration/SELECT_PLAYER_COUNT',\n  SELECT_SETUP = 'TurnOrder/Configuration/SELECT_SETUP',\n  SET_TO_DB = 'TurnOrder/Configuration/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'TurnOrder/Configuration/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'TurnOrder/Configuration/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'TurnOrder/Configuration/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/Configuration/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/Configuration/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  setMode: (mode: Mode) => createAction(ActionTypes.SET_MODE, mode),\n  selectPlayerCount: (playerCountId: string) =>\n    createAction(ActionTypes.SELECT_PLAYER_COUNT, playerCountId),\n  selectSetup: (setupId: string) =>\n    createAction(ActionTypes.SELECT_SETUP, setupId),\n  setToDB: () => createAction(ActionTypes.SET_TO_DB),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: () => createAction(ActionTypes.SET_TO_DB_FAILURE),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) =>\n    createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action | ActiveGameAction> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_MODE: {\n      const newState = { ...state, Mode: action.payload }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.SELECT_PLAYER_COUNT: {\n      const newState = {\n        ...state,\n        SelectedPlayerCount: config.TURNORDERSETUPS[action.payload],\n        SelectedSetup:\n          config.TURNORDERSETUPS[action.payload].variations['default'],\n      }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.SELECT_SETUP: {\n      const newState = {\n        ...state,\n        SelectedSetup: state.SelectedPlayerCount.variations[action.payload],\n      }\n      return loop(\n        newState,\n        Cmd.run<Action>(setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>(getFromDb, {\n          args: [TURNORDER_CONFIG_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return loop(\n        newState,\n        // If we could load the configuration also load the actual\n        // turnorder game state\n        Cmd.action<ActiveGameAction>(activeGameActions.fetchFromDB())\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMode = (state: RootState) => state.TurnOrder.Configuration.Mode\nconst getSelectedPlayerCount = (state: RootState) =>\n  state.TurnOrder.Configuration.SelectedPlayerCount\nconst getSelectedSetup = (state: RootState) =>\n  state.TurnOrder.Configuration.SelectedSetup\nconst getConfiguration = createSelector(\n  [getMode, getSelectedSetup],\n  (mode, selectedSetup) => adjustSetup(mode, selectedSetup)\n)\nconst getAvailableCards = createSelector(\n  [getConfiguration],\n  config => config.turnOrderCards\n)\n\nexport const selectors = {\n  getMode,\n  getSelectedPlayerCount,\n  getSelectedSetup,\n  getConfiguration,\n  getAvailableCards,\n}\n","import { combineReducers, reduceReducers } from 'redux-loop'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\n\nimport * as MainContentLoading from './MainContentLoading'\nimport * as Settings from './Settings'\nimport * as Nemesis from './Nemesis'\nimport * as Mages from './Mages'\nimport * as Supply from './Supply'\nimport * as TurnOrder from './TurnOrder'\n\nexport type RootState = {\n  Settings: Settings.State\n  MainContentLoading: MainContentLoading.State\n  Nemesis: Nemesis.State\n  Mages: Mages.State\n  Supply: Supply.State\n  TurnOrder: TurnOrder.State\n}\n\nexport enum ActionTypes {\n  USER_CONFIGURATION_GET = 'ROOT/USER_CONFIGURATION_GET',\n}\n\nexport const mainActions = {\n  getUserConfiguration: () => createAction(ActionTypes.USER_CONFIGURATION_GET),\n}\n\nexport type MainAction = ActionsUnion<typeof mainActions>\n\nexport const actions = {\n  Settings: Settings.actions,\n  Main: mainActions,\n  TurnOrder: TurnOrder.actions,\n  Nemesis: Nemesis.actions,\n  Mages: Mages.actions,\n  Supply: Supply.actions,\n}\n\nexport const selectors = {\n  Settings: Settings.selectors,\n  Main: {\n    ContentLoading: MainContentLoading.selectors,\n  },\n  TurnOrder: TurnOrder.selectors,\n  Nemesis: Nemesis.selectors,\n  Mages: Mages.selectors,\n  Supply: Supply.selectors,\n}\n\nexport type RootAction =\n  | MainAction\n  | Settings.Action\n  | MainContentLoading.Action\n  | Nemesis.Action\n  | Mages.Action\n  | Supply.Action\n  | TurnOrder.Action\n\nexport const initialState = {\n  Settings: Settings.initialState,\n  MainContentLoading: MainContentLoading.initialState,\n  Nemesis: Nemesis.initialState,\n  Mages: Mages.initialState,\n  Supply: Supply.initialState,\n  TurnOrder: TurnOrder.initialState,\n}\n\nexport const MainReducer: LoopReducer<RootState, RootAction> = (\n  state: RootState = initialState,\n  action: RootAction\n) => {\n  switch (action.type) {\n    case ActionTypes.USER_CONFIGURATION_GET: {\n      return loop(\n        state,\n        Cmd.list<RootAction>([\n          Cmd.action(\n            actions.Settings.Expansions.SelectedExpansions.fetchFromDB()\n          ),\n          Cmd.action(actions.TurnOrder.Configuration.fetchFromDB()),\n          Cmd.action(actions.Settings.SupplySetups.fetchFromDB()),\n        ])\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const RootReducer = reduceReducers(\n  MainReducer,\n  combineReducers<RootState, RootAction>({\n    Settings: Settings.Reducer,\n    MainContentLoading: MainContentLoading.Reducer,\n    Nemesis: Nemesis.Reducer,\n    Mages: Mages.Reducer,\n    Supply: Supply.Reducer,\n    TurnOrder: TurnOrder.Reducer,\n  })\n)\n","import { combineReducers } from 'redux-loop'\n\nimport * as Configuration from './Configuration'\nimport * as ActiveGame from './ActiveGame'\n\nexport type State = {\n  Configuration: Configuration.State\n  ActiveGame: ActiveGame.State\n}\n\nexport type Action = Configuration.Action | ActiveGame.Action\n\nexport const initialState = {\n  Configuration: Configuration.initialState,\n  ActiveGame: ActiveGame.initialState,\n}\n\nexport const actions = {\n  Configuration: Configuration.actions,\n  ActiveGame: ActiveGame.actions,\n}\n\nexport const selectors = {\n  Configuration: Configuration.selectors,\n  ActiveGame: ActiveGame.selectors,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Configuration: Configuration.Reducer,\n  ActiveGame: ActiveGame.Reducer,\n})\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst Card = styled(MuiCard)`\n  position: relative;\n\n  background: ${props =>\n    props.theme.colors.turnOrderCards['nemesis']['normal']};\n`\n\nCard.displayName = 'Card'\n\nexport default Card\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst CardContent = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nCardContent.displayName = 'CardContent'\n\nexport default CardContent\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.theme.colors.cards[props.type].color};\n`\n\nconst CardTypeIcon = React.memo(({ type }: Props) => {\n  switch (type) {\n    case 'nemesis': {\n      return <Icon type={type} className=\"ra ra-lg ra-broken-skull\" />\n    }\n    default: {\n      return null\n    }\n  }\n})\n\nCardTypeIcon.displayName = 'CardTypeIcon'\n\nexport default CardTypeIcon\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst ExpansionName = styled(Typography)`\n  color: #fff;\n`\n\nExpansionName.displayName = 'ExpansionName'\n\nexport default ExpansionName\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  color: #fff;\n`\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\n\nimport config from '../../../../config'\nimport { ICreature } from '../../../../types'\n\nimport Card from './Card'\nimport CardContent from './CardContent'\nimport CardTypeIcon from './CardTypeIcon'\nimport ExpansionName from './ExpansionName'\nimport Name from './Name'\n\ntype Props = {\n  nemesis: ICreature\n}\n\nconst NemesisTile = React.memo(({ nemesis, ...rest }: Props) => {\n  return (\n    <Card>\n      <CardContent>\n        <ExpansionName color=\"textSecondary\">\n          {config.DATA[nemesis.expansion].name}\n        </ExpansionName>\n        <Name variant=\"h6\" component=\"h2\">\n          {nemesis['name']}\n        </Name>\n      </CardContent>\n      <CardTypeIcon type=\"nemesis\" />\n    </Card>\n  )\n})\n\nNemesisTile.displayName = 'NemesisTile'\n\nexport default NemesisTile\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyNemesisHint = styled(Typography)``\n\nEmptyNemesisHint.displayName = 'EmptyNemesisHint'\n\nexport default EmptyNemesisHint\n","import styled from 'styled-components/macro'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = styled(Fab)`\n  position: fixed;\n  bottom: 24px;\n  right: 24px;\n  z-index: 10;\n`\n\nShuffleButton.displayName = 'ShuffleButton'\n\nexport default ShuffleButton\n","import styled from 'styled-components'\nimport { A as routerA } from 'hookrouter'\n\nconst A = styled(routerA)`\n  text-decoration: none;\n`\n\nexport default A\n","import React from 'react'\nimport A from './A'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst NoSelectedExpansions = React.memo(() => (\n  <Typography paragraph>\n    There is currently no standalone set selected. Please activate at least one\n    standalone set in the settings.{' '}\n    <A href=\"/settings\">Click here to go to the settings</A>.\n  </Typography>\n))\n\nNoSelectedExpansions.displayName = 'NoSelectedExpansions'\n\nexport default NoSelectedExpansions\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport NemesisTile from './NemesisTile'\nimport EmptyNemesisHint from './EmptyNemesisHint'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.SelectedExpansions.getHasStandaloneExpansion(\n    state\n  ),\n  selectedExpansions: selectors.Settings.Expansions.SelectedExpansions.getSelectedExpansionsArray(\n    state\n  ),\n  nemesis: selectors.Nemesis.getNemesis(state),\n})\n\nconst mapDispatchToProps = {\n  setRandomNemesis: actions.Nemesis.setRandomNemesis,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Nemeses = React.memo(\n  ({\n    hasStandaloneExpansionSelected,\n    nemesis,\n    selectedExpansions,\n    setRandomNemesis,\n  }: Props) => {\n    if (!hasStandaloneExpansionSelected) {\n      return <NoSelectedExpansions />\n    }\n\n    return (\n      <React.Fragment>\n        {nemesis ? (\n          <NemesisTile nemesis={nemesis} />\n        ) : (\n          <EmptyNemesisHint>Tab button to spawn new nemesis!</EmptyNemesisHint>\n        )}\n        <ShuffleButton\n          onClick={() => setRandomNemesis(selectedExpansions)}\n          color=\"primary\"\n          variant=\"extended\"\n        >\n          Open Breach\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nNemeses.displayName = 'Nemeses'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Nemeses)\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\ntype Props = {\n  selectedValue: string\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}\n\nconst MageCountPicker = React.memo(\n  ({ selectedValue, handleAmountChange }: Props) => (\n    <Card>\n      <CardContent>\n        <FormControl component={'fieldset' as 'div'}>\n          <FormLabel>Amount of Mages</FormLabel>\n          <RadioGroup\n            aria-label=\"Amount of Mages\"\n            name=\"mageAmount\"\n            value={selectedValue}\n            onChange={handleAmountChange}\n            row={true}\n          >\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n            <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n            <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  )\n)\n\nMageCountPicker.displayName = 'MageCountPicker'\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nMageGridWrapper.displayName = 'MageGridWrapper'\n\nexport default MageGridWrapper\n","import styled from 'styled-components/macro'\nimport Grid from '@material-ui/core/Grid'\n\nconst Wrapper = styled(Grid)``\n\nWrapper.displayName = 'Wrapper'\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\ntype Props = {\n  playerNumber: number\n}\n\nconst Card = styled(MuiCard)<Props>`\n  position: relative;\n  height: 100%;\n\n  background: ${props =>\n    props.theme.colors.playerColors[`player${props.playerNumber}`].normal};\n`\n\nCard.displayName = 'Card'\n\nexport default Card\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst CardContent = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nCardContent.displayName = 'CardContent'\n\nexport default CardContent\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.theme.colors.cards[props.type].color};\n`\n\nconst CardTypeIcon = React.memo(({ type }: Props) => {\n  switch (type) {\n    case 'mage': {\n      return <Icon type={type} className=\"ra ra-lg ra-fluffy-swirl\" />\n    }\n    default: {\n      return null\n    }\n  }\n})\n\nCardTypeIcon.displayName = 'CardTypeIcon'\n\nexport default CardTypeIcon\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst ExpansionName = styled(Typography)`\n  color: #fff;\n`\n\nExpansionName.displayName = 'ExpansionName'\n\nexport default ExpansionName\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Name = styled(Typography)`\n  color: #fff;\n`\n\nName.displayName = 'Name'\n\nexport default Name\n","import React from 'react'\n\nimport config from '../../../../config'\nimport { ICreature } from '../../../../types'\n\nimport Wrapper from './Wrapper'\nimport Card from './Card'\nimport CardContent from './CardContent'\nimport CardTypeIcon from './CardTypeIcon'\nimport ExpansionName from './ExpansionName'\nimport Name from './Name'\n\ntype Props = {\n  mage: ICreature\n  playerNumber: number\n}\n\nconst MageTile = React.memo(({ mage, playerNumber }: Props) => (\n  <Wrapper item xs={6} md={3}>\n    <Card playerNumber={playerNumber}>\n      <CardContent>\n        <ExpansionName color=\"textSecondary\">\n          {config.DATA[mage.expansion].name}\n        </ExpansionName>\n        <Name variant=\"h6\" component=\"h2\">\n          {mage.name}\n        </Name>\n      </CardContent>\n      <CardTypeIcon type=\"mage\" />\n    </Card>\n  </Wrapper>\n))\n\nMageTile.displayName = 'MageTile'\n\nexport default MageTile\n","import React from 'react'\n\nimport { ICreature } from '../../../../types'\n\nimport MageGridWrapper from './MageGridWrapper'\nimport MageTile from '../MageTile'\n\nimport Grid from '@material-ui/core/Grid'\n\ntype Props = {\n  mages: ReadonlyArray<ICreature>\n}\n\nconst MageList = React.memo(({ mages }: Props) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {mages.map((mage, index) => (\n        <MageTile mage={mage} key={mage.name} playerNumber={index + 1} />\n      ))}\n    </Grid>\n  </MageGridWrapper>\n))\n\nMageList.displayName = 'MageList'\n\nexport default MageList\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = styled(Typography)`\n  margin-top: 24px;\n`\n\nEmptyMageListHint.displayName = 'EmptyMageListHint'\n\nexport default EmptyMageListHint\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\nimport { MageCount } from '../../../Redux/Store/Mages/Count'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.SelectedExpansions.getHasStandaloneExpansion(\n    state\n  ),\n  selectedExpansions: selectors.Settings.Expansions.SelectedExpansions.getSelectedExpansionsArray(\n    state\n  ),\n  mageCount: selectors.Mages.Count.getCount(state),\n  mages: selectors.Mages.Recruited.getMages(state),\n})\n\nconst mapDispatchToProps = {\n  setMageCount: actions.Mages.Count.setCount,\n  setMages: actions.Mages.Recruited.setRandomMages,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Mages = React.memo(\n  ({\n    hasStandaloneExpansionSelected,\n    selectedExpansions,\n    mageCount,\n    setMageCount,\n    setMages,\n    mages,\n  }: Props) => {\n    if (!hasStandaloneExpansionSelected) {\n      return <NoSelectedExpansions />\n    }\n\n    const handleShuffle = () => {\n      setMages(selectedExpansions, mageCount)\n    }\n\n    const noMagesGeneratedYet = mages.length === 0\n\n    const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setMageCount(parseInt(e.currentTarget.value) as MageCount)\n    }\n\n    return (\n      <React.Fragment>\n        <MageCountPicker\n          selectedValue={mageCount.toString()}\n          handleAmountChange={handleAmountChange}\n        />\n        {noMagesGeneratedYet ? (\n          <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n        ) : (\n          <MageList mages={mages} />\n        )}\n        <ShuffleButton\n          onClick={handleShuffle}\n          color=\"primary\"\n          variant=\"extended\"\n        >\n          Recruit Mages\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nMages.displayName = 'Mages'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Mages)\n","import React, { useState } from 'react'\n\nconst useExpandedHandling = () => {\n  // Expansion handling\n  const [expanded, setExpanded] = useState<boolean | string>(false)\n\n  const createExpansionHandler = (panel: string) => (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => {\n    const panelExpanded = expanded ? panel : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, createExpansionHandler, setExpanded }\n}\n\nexport default useExpandedHandling\n","import styled from 'styled-components/macro'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\n\nconst StyledExpansionPanel = styled(ExpansionPanel)`\n  border-radius: 4px;\n  margin-bottom: 15px;\n\n  &:before {\n    display: none;\n  }\n`\n\nStyledExpansionPanel.displayName = 'StyledExpansionPanel'\n\nexport default StyledExpansionPanel\n","import styled from 'styled-components/macro'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\n\nconst StyledExpansionPanelSummary = styled(ExpansionPanelSummary)`\n  min-height: 48px;\n`\n\nStyledExpansionPanelSummary.displayName = 'StyledExpansionPanelSummary'\n\nexport default StyledExpansionPanelSummary\n","import Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components/macro'\n\nconst Heading = styled(Typography)`\n  font-size: ${props => props.theme.heading.fontSize};\n`\n\nexport default Heading\n","import React from 'react'\n\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport StyledExpansionPanel from './StyledExpansionPanel'\nimport StyledExpansionPanelSummary from './StyledExpansionPanelSummary'\n\nimport Heading from '../Heading'\n\ntype Props = {\n  expanded: string | boolean\n  expansionKey: string\n  summary: string\n  children: React.ReactNode\n  expansionHandler: (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => void\n}\n\nconst ExpansionPanel = React.memo(\n  ({ children, expanded, expansionHandler, expansionKey, summary }: Props) => (\n    <StyledExpansionPanel\n      expanded={expanded === expansionKey}\n      onChange={expansionHandler}\n    >\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Heading>{summary}</Heading>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n)\n\nExpansionPanel.displayName = 'ExpansionPanel'\n\nexport default ExpansionPanel\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nListWrapper.displayName = 'ListWrapper'\n\nexport default ListWrapper\n","//////////\n// DATA //\n//////////\n\nexport interface ICreature {\n  expansion: string\n  name: string\n  id: string\n}\n\nexport const CARD_TYPES = ['Gem', 'Relic', 'Spell', 'EMPTY'] as const\nexport type CardType = typeof CARD_TYPES[number]\n\nexport interface ICard {\n  type: CardType\n  expansion: string\n  name: string\n  id: string\n  cost: number\n}\n\nexport type ExpansionType = 'standalone' | 'mini' | 'promo'\n\nexport type EntityType = 'nemeses' | 'mages' | 'cards'\nexport type Entity = ICard | ICreature\n\nexport interface IExpansion {\n  id: string\n  name: string\n  type: ExpansionType\n  nemeses: Array<ICreature>\n  mages: Array<ICreature>\n  cards: Array<ICard>\n}\n\nexport interface IExpansionData {\n  [key: string]: IExpansion\n}\n\nexport type Expansion = {\n  id: string\n  name: string\n  type: ExpansionType\n}\n\nexport type Expansions = {\n  [id: string]: Expansion\n}\n\nexport type Nemeses = {\n  [id: string]: ICreature\n}\n\nexport type Mages = {\n  [id: string]: ICreature\n}\n\nexport type Cards = {\n  [id: string]: ICreature\n}\n\nexport type NormalizedData = {\n  expansions: Expansions\n  nemeses: Nemeses\n  mages: Mages\n  cards: Cards\n  expansionIds: string[]\n  nemesisIds: string[]\n  mageIds: string[]\n  cardIds: string[]\n}\n\n////////////\n// Market //\n////////////\n\nexport type MarketType = 'official' | 'custom'\nexport const THRESHOLD_OPERATIONS = ['<', '>', '=', '<=', '>='] // Note: should not be a const, because we want to treat it as regular list\nexport const SUPPLY_OPERATIONS = [\n  ...THRESHOLD_OPERATIONS,\n  'ANY',\n  'OR',\n  'NoOp',\n] as const\nexport type Operation = typeof SUPPLY_OPERATIONS[number]\n\nexport interface IBluePrint {\n  id?: string // the optional id is only used for blueprints used inside custom setups\n  type: CardType\n  operation: Operation\n  threshold?: number\n  values?: Array<number>\n}\n\nexport interface IEmptyBluePrint extends IBluePrint {\n  type: 'EMPTY'\n  operation: 'NoOp'\n}\nexport type Slot = IBluePrint | IEmptyBluePrint\n\nexport type IMarketSetup = Readonly<{\n  id: string\n  name: string\n  type: MarketType\n  default?: boolean\n  active: boolean\n  tiles: Array<Slot>\n  isDirty?: boolean // Flag to mark new/edited items\n  isNew?: boolean // Flag to mark if an item has already been actively saved\n}>\n\nexport type IMarketSetups = Readonly<{ [key: string]: IMarketSetup }>\n\n///////////////\n// TurnOrder //\n///////////////\n\nexport type Player =\n  | 'Player 1'\n  | 'Player 2'\n  | 'Player 3'\n  | 'Player 4'\n  | 'Player 1/2'\n  | 'Player 3/4'\n  | 'Nemesis'\n  | 'Wild'\n  | 'Wild Token'\n  | 'Maelstrom Assault'\n  | 'Blitz'\n\nexport type TurnOrderCardType =\n  | 'player1'\n  | 'player2'\n  | 'player3'\n  | 'player4'\n  | 'player12'\n  | 'player34'\n  | 'wild'\n  | 'wild-token'\n  | 'nemesis'\n  | 'maelstrom'\n  | 'blitz'\n\nexport interface ITurnOrderCard {\n  id: string\n  name: Player\n  type: TurnOrderCardType\n}\n\nexport interface ITurnOrderSetups {\n  [key: string]: ITurnOrderPlayerCount\n}\n\nexport interface ITurnOrderPlayerCount {\n  id: string\n  name: string\n  variations: ITurnOrderVariations\n}\n\nexport interface ITurnOrderVariations {\n  [key: string]: ITurnOrderSetup\n}\n\nexport interface ITurnOrderSetup {\n  id: string\n  name: string\n  turnOrderCards: Array<ITurnOrderCard>\n}\n\nexport const isCard = (card: ICard | Slot): card is ICard => {\n  if (!card) return false\n  return (card as ICard).name !== undefined\n}\n\nexport const MODES = ['Default', 'Maelstrom', 'Blitz'] as const\nexport type Mode = typeof MODES[number] // automatically creates union from tuple\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\ntype Props = {\n  type: string\n}\n\nconst Card = styled(MuiCard)<Props>`\n  background: ${props => props.theme.colors.cards[props.type].background};\n  min-width: 30px;\n  min-height: 148px;\n  position: relative;\n  height: 100%;\n`\n\nCard.displayName = 'Card'\n\nexport default Card\n","import styled from 'styled-components/macro'\nimport MuiCardContent from '@material-ui/core/CardContent'\n\nconst CardContent = styled(MuiCardContent)`\n  position: relative;\n  z-index: 1;\n`\n\nCardContent.displayName = 'CardContent'\n\nexport default CardContent\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst CardName = styled(Typography)`\n  font-weight: bold;\n`\n\nCardName.displayName = 'CardName'\n\nexport default CardName\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst Icon = styled('i')<Props>`\n  position: absolute;\n  right: 8px;\n  bottom: -8px;\n  font-size: 120px;\n  z-index: 0;\n  opacity: 0.2;\n\n  color: ${props => props.theme.colors.cards[props.type].color};\n`\n\nconst CardTypeIcon = React.memo(({ type }: Props) => {\n  switch (type) {\n    case 'gem': {\n      return <Icon type={type} className=\"ra ra-lg ra-crystals\" />\n    }\n    case 'relic': {\n      return <Icon type={type} className=\"ra ra-lg ra-crystal-wand\" />\n    }\n    case 'spell': {\n      return <Icon type={type} className=\"ra ra-lg ra-scroll-unfurled\" />\n    }\n    default: {\n      return null\n    }\n  }\n})\n\nCardTypeIcon.displayName = 'CardTypeIcon'\n\nexport default CardTypeIcon\n","import styled from 'styled-components/macro'\nimport ListItem from '@material-ui/core/ListItem'\n\nconst CardInfoItem = styled(ListItem)`\n  padding: 0;\n`\n\nCardInfoItem.displayName = 'CardInfoItem'\n\nexport default CardInfoItem\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst Info = styled(Typography)`\n  display: inline-block;\n`\n\nInfo.displayName = 'Info'\n\nexport default Info\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst InfoLabel = styled(Typography)`\n  margin-right: 8px;\n  display: inline-block;\n`\n\nInfoLabel.displayName = 'InfoLabel'\n\nexport default InfoLabel\n","import React from 'react'\n\nimport { Slot, ICard, isCard } from '../../../../types'\n\nimport CardInfoItem from './CardInfoItem'\nimport Info from './Info'\nimport InfoLabel from './InfoLabel'\n\ntype Props = {\n  card: Slot | ICard\n}\n\nconst CostInfo = React.memo(({ card }: Props) => (\n  <CardInfoItem>\n    <InfoLabel color=\"textSecondary\">Cost:</InfoLabel>\n    <Info component=\"span\">{isCard(card) ? card.cost : '-'}</Info>\n  </CardInfoItem>\n))\n\nCostInfo.displayName = 'CostInfo'\n\nexport default CostInfo\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst CostOperation = styled(Typography)``\n\nCostOperation.displayName = 'CostOperation'\n\nexport default CostOperation\n","import React from 'react'\n\nimport config from '../../../../config'\nimport { Slot, ICard, isCard } from '../../../../types'\n\nimport CardInfoItem from './CardInfoItem'\nimport Info from './Info'\nimport InfoLabel from './InfoLabel'\n\ntype Props = {\n  card: Slot | ICard\n}\n\nconst ExpansionInfo = React.memo(({ card }: Props) => (\n  <CardInfoItem>\n    <InfoLabel color=\"textSecondary\">Set:</InfoLabel>\n    <Info component=\"span\">\n      {isCard(card) && config.DATA[card.expansion] !== undefined\n        ? config.DATA[card.expansion].name\n        : '-'}\n    </Info>\n  </CardInfoItem>\n))\n\nExpansionInfo.displayName = 'ExpansionInfo'\n\nexport default ExpansionInfo\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\n\nimport { Slot, ICard, isCard } from '../../../../types'\n\nimport { getOperationString } from '../../../../Redux/helpers'\n\nimport Card from './Card'\nimport CardContent from './CardContent'\nimport CardName from './CardName'\nimport CardTypeIcon from './CardTypeIcon'\nimport CostInfo from './CostInfo'\nimport CostOperation from './CostOperation'\nimport ExpansionInfo from './ExpansionInfo'\n\ntype Props = {\n  tileSetup: Slot\n  card: Slot | ICard\n}\n\nconst MarketTile = React.memo(({ tileSetup, card, ...rest }: Props) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card type={type.toLowerCase()}>\n        <CardContent>\n          <CostOperation color=\"textSecondary\">\n            {type} {getOperationString(operation, values, threshold)}\n          </CostOperation>\n          <CardName component=\"p\">{isCard(card) ? card.name : '-'}</CardName>\n          <List>\n            <ExpansionInfo card={card} />\n            <CostInfo card={card} />\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} />\n      </Card>\n    </Grid>\n  )\n})\n\nMarketTile.displayName = 'MarketTile'\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { IMarketSetup, ICard, Slot } from '../../../types'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (\n  marketSetup: IMarketSetup,\n  cards: ReadonlyArray<Slot | ICard>\n) => {\n  return marketSetup.tiles.map((tileSetup, i) => (\n    <MarketTile key={i} tileSetup={tileSetup} card={cards[i]} />\n  ))\n}\n\ntype Props = {\n  marketSetup: IMarketSetup\n  cards: ReadonlyArray<Slot | ICard>\n}\n\nconst SupplyList = React.memo(({ marketSetup, cards }: Props) => (\n  <ListWrapper>\n    <Grid container spacing={16}>\n      {renderTiles(marketSetup, cards)}\n    </Grid>\n  </ListWrapper>\n))\n\nSupplyList.displayName = 'SupplyList'\n\nexport default SupplyList\n","import styled from 'styled-components/macro'\n\nconst MarketOptionsWrapper = styled('div')`\n  margin: 0 -8px;\n  display: flex;\n  flex-wrap: wrap;\n`\n\nMarketOptionsWrapper.displayName = 'MarketOptionsWrapper'\n\nexport default MarketOptionsWrapper\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  selected: boolean\n}\n\nconst Wrapper = styled('div')<Props>`\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? props.theme.colors.secondary.main\n        : 'rgba(0, 0, 0, 0.12)'};\n  padding: 4px 8px;\n  display: inline-block;\n  width: calc(100% - 16px);\n  margin: 24px 8px 0;\n  cursor: pointer;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nWrapper.displayName = 'Wrapper'\n\nexport default Wrapper\n","import styled from 'styled-components/macro'\n\nconst TileList = styled('ul')`\n  margin: 0 -4px;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: calc(100% + 8px);\n`\n\nTileList.displayName = 'TileList'\n\nexport default TileList\n","import styled from 'styled-components/macro'\n\ntype Props = {\n  type: string\n}\n\nconst TileListItem = styled('li')<Props>`\n  margin: 4px;\n  min-width: 36px;\n  width: calc(33.33333% - 8px);\n  height: 36px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${props => props.theme.colors.text.secondary};\n  background: ${props => props.theme.colors.cards[props.type].background};\n  font-family: 'Roboto', sans-serif;\n\n  @media all and (min-width: 502px) {\n    width: calc(11.11111% - 8px);\n  }\n`\n\nTileListItem.displayName = 'TileListItem'\n\nexport default TileListItem\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype Props = {\n  selected: boolean\n}\n\nconst SupplyName = styled(Typography)<Props>`\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.secondary.main\n      : props.theme.colors.text.secondary};\n`\n\nSupplyName.displayName = 'SupplyName'\n\nexport default SupplyName\n","import React from 'react'\n\nimport { getOperationString } from '../../Redux/helpers'\nimport { IMarketSetup } from '../../types'\n\nimport Wrapper from './Wrapper'\nimport TileList from './TileList'\nimport TileListItem from './TileListItem'\nimport SupplyName from './SupplyName'\n\n// FIXME tiles are untyped!!!\nconst renderMarketSetupItems = (tiles: any) =>\n  tiles.map((tile: any, index: number) => (\n    <TileListItem key={index} type={tile.type.toLowerCase()}>\n      {getOperationString(tile.operation, tile.values, tile.threshold)}\n    </TileListItem>\n  ))\n\ntype Props = {\n  clickHandler: (event: any) => void\n  setup: IMarketSetup\n  selected?: boolean\n  showName?: boolean\n  className?: string\n}\n\nconst SupplyPreview = React.memo(\n  ({\n    clickHandler,\n    setup,\n    selected = false,\n    showName = true,\n    className,\n  }: Props) => {\n    if (!setup.tiles || setup.tiles.length < 1) {\n      return null\n    }\n\n    return (\n      <Wrapper\n        className={className}\n        key={setup.id}\n        onClick={clickHandler}\n        data-value={setup.id}\n        selected={selected}\n      >\n        <TileList>{renderMarketSetupItems(setup.tiles)}</TileList>\n        {showName ? (\n          <SupplyName variant=\"caption\" selected={selected}>\n            {setup.name}\n          </SupplyName>\n        ) : null}\n      </Wrapper>\n    )\n  }\n)\n\nSupplyPreview.displayName = 'SupplyPreview'\n\nexport default SupplyPreview\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors, actions } from '../../../Redux/Store'\n\nimport MarketOptionsWrapper from './MarketOptionsWrapper'\nimport SupplyPreview from '../../SupplyPreview'\n\nconst getCustomAndPredefined = selectors.Settings.SupplySetups.makeGetCustomAndPredefined()\nconst mapStateToProps = (state: RootState) => ({\n  activeMarketSetups: selectors.Settings.SupplySetups.getActiveSetups(state),\n  allMarketSetups: getCustomAndPredefined(state),\n  selectedSetup: selectors.Supply.Selection.getSelectedSetup(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: actions.Supply.Selection.selectSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    expansionHandler: (\n      event: React.ChangeEvent<any> | undefined,\n      expanded: boolean | string\n    ) => void\n  }\n\nconst MarketOptions = React.memo(\n  ({\n    activeMarketSetups,\n    allMarketSetups,\n    expansionHandler,\n    selectSetup,\n    selectedSetup,\n  }: Props) => (\n    <MarketOptionsWrapper>\n      {activeMarketSetups.map(setup => (\n        <SupplyPreview\n          key={setup.id}\n          setup={setup}\n          clickHandler={(event: any) => {\n            expansionHandler(undefined, false)\n            selectSetup(allMarketSetups[event.currentTarget.dataset.value])\n          }}\n          selected={selectedSetup.id === setup.id}\n        />\n      ))}\n    </MarketOptionsWrapper>\n  )\n)\n\nMarketOptions.displayName = 'MarketOptions'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MarketOptions)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport useExpandedHandling from '../../../hooks/useExpansionHandling'\n\nimport ExpansionPanel from '../../ExpansionPanel'\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: selectors.Settings.Expansions.SelectedExpansions.getHasStandaloneExpansion(\n    state\n  ),\n  selectedExpansions: selectors.Settings.Expansions.SelectedExpansions.getSelectedExpansionsArray(\n    state\n  ),\n  marketSetup: selectors.Supply.Selection.getSelectedSetup(state),\n  cards: selectors.Supply.RandomSetup.getCards(state),\n})\n\nconst mapDispatchToProps = {\n  createMarket: actions.Supply.RandomSetup.createMarket,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst Supply = React.memo(\n  ({\n    cards,\n    createMarket,\n    hasStandaloneExpansionSelected,\n    marketSetup,\n    selectedExpansions,\n  }: Props) => {\n    const { expanded, createExpansionHandler } = useExpandedHandling()\n    const expansionKey = 'setup'\n    const expansionHandler = createExpansionHandler(expansionKey)\n\n    if (!hasStandaloneExpansionSelected) {\n      return <NoSelectedExpansions />\n    }\n\n    const handleShuffle = () => {\n      createMarket(selectedExpansions, marketSetup.tiles)\n    }\n\n    return (\n      <React.Fragment>\n        <ExpansionPanel\n          expanded={expanded}\n          expansionKey={expansionKey}\n          summary={marketSetup.name}\n          expansionHandler={expansionHandler}\n        >\n          <MarketOptions expansionHandler={expansionHandler} />\n        </ExpansionPanel>\n        <SupplyList marketSetup={marketSetup} cards={cards} />\n        <ShuffleButton\n          onClick={handleShuffle}\n          color=\"primary\"\n          variant=\"extended\"\n        >\n          Create Market\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nSupply.displayName = 'Supply'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Supply)\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\ntype BaseProps = {\n  checked: boolean\n  item: string\n  label: string\n  changeHandler: (selection: string) => void\n}\n\nexport type RenderComponent = React.ComponentType<BaseProps>\n\ntype Props = BaseProps & {\n  Component?: RenderComponent\n}\n\nconst DefaultCheckbox = React.memo(\n  ({ checked, item, label, changeHandler }: BaseProps) => (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={checked}\n          onChange={() => changeHandler(item)}\n          value={item}\n        />\n      }\n      label={label}\n    />\n  )\n)\n\nconst Item = React.memo(({ Component = DefaultCheckbox, ...rest }: Props) => {\n  return <Component {...rest} />\n})\n\nItem.displayName = 'Item'\n\nexport default Item\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport Item, { RenderComponent } from './Item'\n\ntype Item = {\n  id: string\n  name: string\n  label: string\n  checked: boolean\n}\n\nconst renderCheckboxes = (\n  items: ReadonlyArray<Item>,\n  handleChange: (set: string) => void,\n  Component?: RenderComponent\n) =>\n  items.map(item => (\n    <Item\n      Component={Component}\n      key={item.id}\n      item={item.id}\n      label={item.label}\n      checked={item.checked}\n      changeHandler={handleChange}\n    />\n  ))\n\ntype Props = {\n  label: string\n  items: ReadonlyArray<Item>\n  changeHandler: (selection: string) => void\n  Component?: RenderComponent\n  children?: React.ReactNode\n}\n\nconst CheckboxList = React.memo(\n  ({ children, label, items, changeHandler, Component, ...rest }: Props) => (\n    <React.Fragment>\n      <FormLabel {...rest} style={{ marginTop: '24px' }}>\n        {label}\n      </FormLabel>\n      <FormGroup {...rest}>\n        {children}\n        {renderCheckboxes(items, changeHandler, Component)}\n      </FormGroup>\n    </React.Fragment>\n  )\n)\n\nCheckboxList.displayName = 'CheckboxList'\n\nexport default CheckboxList\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport { RootState, selectors, actions } from '../../../../Redux/Store'\nimport * as types from '../../../../types'\n\nimport CheckboxList from '../../../CheckboxList'\n\nconst mapStateToProps = (state: RootState) => ({\n  standalones: selectors.Settings.Expansions.SelectedExpansions.getStandaloneExpansions(\n    state\n  ),\n  miniExpansions: selectors.Settings.Expansions.SelectedExpansions.getMiniExpansions(\n    state\n  ),\n  promos: selectors.Settings.Expansions.SelectedExpansions.getPromos(state),\n  allSetsSelected: selectors.Settings.Expansions.SelectedExpansions.getAllExpansionsSelected(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  handleSelectAll: actions.Settings.Expansions.SelectedExpansions.toggleAll,\n  handleChange: actions.Settings.Expansions.SelectedExpansions.toggleExpansion,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ActiveSets = React.memo(\n  ({\n    allSetsSelected,\n    handleSelectAll,\n    standalones,\n    miniExpansions,\n    promos,\n    handleChange,\n  }: Props) => {\n    const expansionsToItems = (\n      expansions: ReadonlyArray<types.Expansion & { selected: boolean }>\n    ) =>\n      expansions.map(expansion => ({\n        name: expansion.name,\n        id: expansion.id,\n        label: expansion.name,\n        checked: expansion.selected,\n      }))\n\n    return (\n      <FormControl component={'fieldset' as 'div'}>\n        <FormLabel />\n        <FormGroup style={{ marginBottom: '20px' }}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={allSetsSelected}\n                onChange={handleSelectAll}\n                value={allSetsSelected ? 'Deselect All' : 'Select All'}\n              />\n            }\n            label={allSetsSelected ? 'Deselect All' : 'Select All'}\n          />\n        </FormGroup>\n        <CheckboxList\n          label=\"Standalone Sets\"\n          items={expansionsToItems(standalones)}\n          changeHandler={handleChange}\n        />\n        <CheckboxList\n          label=\"Mini Expansions\"\n          items={expansionsToItems(miniExpansions)}\n          changeHandler={handleChange}\n        />\n        <CheckboxList\n          label=\"Promos\"\n          items={expansionsToItems(promos)}\n          changeHandler={handleChange}\n        />\n      </FormControl>\n    )\n  }\n)\n\nActiveSets.displayName = 'ActiveSets'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActiveSets)\n","import React from 'react'\n\nimport useExpansionHandling from '../../../../hooks/useExpansionHandling'\nimport ExpansionPanel from '../../../ExpansionPanel'\nimport ActiveSets from './ActiveSets'\n\ntype Props = {}\n\nconst Expansions = React.memo(() => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n  const expansionKey = 'sets'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  return (\n    <ExpansionPanel\n      expanded={expanded}\n      expansionKey={expansionKey}\n      expansionHandler={expansionHandler}\n      summary=\"Expansions\"\n    >\n      <ActiveSets />\n    </ExpansionPanel>\n  )\n})\n\nExpansions.displayName = 'Expansions'\n\nexport default Expansions\n","import styled from 'styled-components'\n\nimport SupplyPreview from '../../../SupplyPreview'\n\nconst SettingsSupplyPreview = styled(SupplyPreview)`\n  width: 100%;\n  margin: 0;\n`\n\nexport default SettingsSupplyPreview\n","import styled from 'styled-components'\n\nconst CheckboxWithPreviewWrapper = styled('div')`\n  margin-top: 8px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nexport default CheckboxWithPreviewWrapper\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { IMarketSetup } from '../../../../types'\n\nimport SettingsSupplyPreview from './SettingsSupplyPreview'\nimport CheckboxWithPreviewWrapper from './CheckboxWithPreviewWrapper'\n\ntype Props = {\n  changeHandler: (selection: string) => void\n  checked: boolean\n  item: string\n  label: string\n  setup?: IMarketSetup\n  children?: React.ReactNode\n}\n\nconst CheckboxWithPreview = React.memo(\n  ({ changeHandler, checked, item, label, setup, children }: Props) => (\n    <CheckboxWithPreviewWrapper>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={() => changeHandler(item)}\n            value={item}\n          />\n        }\n        label={label}\n      />\n      {children}\n      {setup ? (\n        <SettingsSupplyPreview\n          clickHandler={() => changeHandler(item)}\n          setup={setup}\n          showName={false}\n        />\n      ) : null}\n    </CheckboxWithPreviewWrapper>\n  )\n)\n\nCheckboxWithPreview.displayName = 'CheckboxWithPreview'\n\nexport default CheckboxWithPreview\n","import styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\nconst InputField = styled(TextField)`\n  margin-top: 0;\n  margin-bottom: 24px;\n`\n\nexport default InputField\n","import React from 'react'\nimport styled from 'styled-components'\nimport MuiSelect from '@material-ui/core/Select'\nimport MuiFormControl from '@material-ui/core/FormControl'\n\nconst Wrapper = styled(MuiFormControl)`\n  width: 50%;\n`\n\nconst Select = styled(MuiSelect)`\n  margin: 0 8px 16px;\n`\n\nconst SelectField = React.memo((props: any) => (\n  <Wrapper>\n    <Select {...props} />\n  </Wrapper>\n))\n\nexport default SelectField\n","import styled from 'styled-components'\n\nconst SelectFieldsWrapper = styled('div')`\n  display: flex;\n  margin: 0 -8px;\n`\n\nexport default SelectFieldsWrapper\n","import styled from 'styled-components'\n\nconst BluePrintWrapper = styled('div')`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  background-color: #ecf0f1;\n  padding: 30px 20px 15px;\n  margin: 8px 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nexport default BluePrintWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nconst CancelButton = React.memo((props: any) => (\n  <IconButton\n    className={props.className}\n    color=\"secondary\"\n    aria-label=\"Cancel\"\n    onClick={props.onClick}\n  >\n    <CancelIcon />\n  </IconButton>\n))\n\nconst StyledCancelButton = styled(CancelButton)`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n`\n\nexport default StyledCancelButton\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport * as types from '../../../../../types'\n\nimport InputField from './InputField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport SelectField from './SelectField'\nimport SelectFieldsWrapper from './SelectFieldsWrapper'\nimport BluePrintWrapper from './BluePrintWrapper'\nimport CancelButton from './CancelButton'\n\ntype Props = {\n  bluePrint: types.IBluePrint\n  dispatch: Function\n}\n\n// TODO refactor this file!\n\nconst isThresholdOperation = (operation: types.Operation) =>\n  types.THRESHOLD_OPERATIONS.includes(operation)\n\nconst renderInputFieldsByOperation = (\n  bluePrint: types.IBluePrint,\n  dispatch: Function\n) => {\n  if (isThresholdOperation(bluePrint.operation)) {\n    return (\n      <FormControl>\n        <InputField\n          id={`threshold-${bluePrint.id}`}\n          label=\"Threshold\"\n          value={bluePrint.threshold || ''}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: string }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                threshold: parseInt(e.target.value || '0'),\n              },\n            })\n          }\n          type=\"number\"\n          margin=\"normal\"\n        />\n      </FormControl>\n    )\n  }\n\n  // TODO allow more the two fields to be combined with logical or\n  if (bluePrint.operation === 'OR') {\n    const valueA =\n      bluePrint && bluePrint.values && bluePrint.values[0]\n        ? bluePrint.values[0].toString()\n        : ''\n    const valueB =\n      bluePrint && bluePrint.values && bluePrint.values[1]\n        ? bluePrint.values[1].toString()\n        : ''\n\n    return (\n      <React.Fragment>\n        <FormControl>\n          <InputField\n            id={`value-1-${bluePrint.id}`}\n            label=\"Value 1\"\n            value={valueA}\n            onChange={(\n              e: React.ChangeEvent<{ name?: string; value: string }>\n            ) =>\n              dispatch({\n                type: 'UPDATE',\n                payload: {\n                  ...bluePrint,\n                  values: [parseInt(e.target.value || '0'), parseInt(valueB)],\n                },\n              })\n            }\n            type=\"number\"\n            margin=\"normal\"\n          />\n        </FormControl>\n        <FormControl>\n          <InputField\n            id={`value-2-${bluePrint.id}`}\n            label=\"Value 2\"\n            value={valueB}\n            onChange={(\n              e: React.ChangeEvent<{ name?: string; value: string }>\n            ) =>\n              dispatch({\n                type: 'UPDATE',\n                payload: {\n                  ...bluePrint,\n                  values: [parseInt(valueA), parseInt(e.target.value || '0')],\n                },\n              })\n            }\n            type=\"number\"\n            margin=\"normal\"\n          />\n        </FormControl>\n      </React.Fragment>\n    )\n  }\n\n  return null\n}\n\nconst BluePrint = React.memo(({ bluePrint, dispatch }: Props) => {\n  return (\n    <BluePrintWrapper>\n      <CancelButton\n        onClick={() =>\n          dispatch({\n            type: 'DELETE',\n            payload: {\n              id: bluePrint.id,\n            },\n          })\n        }\n      />\n      <SelectFieldsWrapper>\n        <SelectField\n          key=\"type\"\n          value={bluePrint.type}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                type: e.target.value,\n              },\n            })\n          }\n          inputProps={{\n            name: 'type',\n            id: `type-${bluePrint.id}`,\n          }}\n        >\n          {types.CARD_TYPES.filter(TYPE => TYPE !== 'EMPTY').map(TYPE => (\n            <MenuItem key={TYPE} value={TYPE}>\n              {TYPE}\n            </MenuItem>\n          ))}\n        </SelectField>\n        <SelectField\n          key=\"operation\"\n          value={bluePrint.operation}\n          onChange={(e: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n            dispatch({\n              type: 'UPDATE',\n              payload: {\n                ...bluePrint,\n                operation: e.target.value,\n              },\n            })\n          }\n          inputProps={{\n            name: 'operation',\n            id: `operation-${bluePrint.id}`,\n          }}\n        >\n          {types.SUPPLY_OPERATIONS.filter(\n            OPERATION => OPERATION !== 'NoOp'\n          ).map(OPERATION => (\n            <MenuItem key={OPERATION} value={OPERATION}>\n              {OPERATION}\n            </MenuItem>\n          ))}\n        </SelectField>\n      </SelectFieldsWrapper>\n      {renderInputFieldsByOperation(bluePrint, dispatch)}\n    </BluePrintWrapper>\n  )\n})\n\nexport default BluePrint\n","import styled from 'styled-components'\n\nconst ListWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n`\n\nexport default ListWrapper\n","import React from 'react'\nimport * as types from '../../../../../types'\nimport Button from '@material-ui/core/Button'\n\nimport BluePrint from './BluePrint'\nimport ListWrapper from './ListWrapper'\n\ntype Props = {\n  bluePrintList: types.Slot[]\n  dispatch: Function\n}\n\nconst BluePrintList = React.memo(({ bluePrintList, dispatch }: Props) => {\n  return (\n    <ListWrapper>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => dispatch({ type: 'ADD' })}\n      >\n        Add Supply tile\n      </Button>\n      {bluePrintList.map(bluePrint => (\n        <BluePrint\n          key={bluePrint.id}\n          bluePrint={bluePrint}\n          dispatch={dispatch}\n        />\n      ))}\n    </ListWrapper>\n  )\n})\n\nexport default BluePrintList\n","import styled from 'styled-components'\n\nconst MainControlsWrapper = styled('div')`\n  display: flex;\n  align-items: baseline;\n`\n\nexport default MainControlsWrapper\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nimport * as types from '../../../../../types'\n\nimport InputField from './InputField'\nimport MainControlsWrapper from './MainControlsWrapper'\n\ntype Props = {\n  bluePrintList: types.IBluePrint[]\n  cancelEdit: Function\n  setup: types.IMarketSetup\n  setupName: string\n  setSetupName: Function\n  saveCustomSetup: Function\n}\n\nconst MainControls = React.memo(\n  ({\n    bluePrintList,\n    cancelEdit,\n    setup,\n    setupName,\n    setSetupName,\n    saveCustomSetup,\n  }: Props) => {\n    return (\n      <MainControlsWrapper>\n        <InputField\n          id=\"setup-name\"\n          label=\"Setup Name\"\n          placeholder=\"Setup Name\"\n          value={setupName}\n          onChange={e => setSetupName(e.currentTarget.value)}\n          margin=\"normal\"\n        />\n        <IconButton\n          color=\"primary\"\n          aria-label=\"Save\"\n          onClick={() =>\n            saveCustomSetup({ ...setup, name: setupName, tiles: bluePrintList })\n          }\n        >\n          <SaveIcon />\n        </IconButton>\n        <IconButton\n          color=\"secondary\"\n          aria-label=\"Cancel\"\n          onClick={() => cancelEdit(setup.id)}\n        >\n          <CancelIcon />\n        </IconButton>\n      </MainControlsWrapper>\n    )\n  }\n)\n\nMainControls.displayName = 'MainControls'\n\nexport default MainControls\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n\n  padding: 16px;\n  margin: 8px 0;\n`\n\nexport default Wrapper\n","import React, { useState, useReducer } from 'react'\nimport shortid from 'shortid'\nimport { connect } from 'react-redux'\n\nimport * as types from '../../../../../types'\nimport { RootState, actions } from '../../../../../Redux/Store'\n\nimport BluePrintList from './BluePrintList'\nimport MainControls from './MainControls'\nimport Wrapper from './Wrapper'\n\ntype BluePrintState = { [id: string]: types.IBluePrint }\ntype Action = { type: string; payload?: any }\n\nconst initialStateFromTiles = (tiles: types.IBluePrint[]) =>\n  tiles.reduce<BluePrintState>((acc, tile) => {\n    const id = tile.id || shortid.generate()\n    return { ...acc, [id]: { ...tile, id } }\n  }, {})\n\nconst bluePrintReducer = (\n  state: BluePrintState,\n  action: Action\n): BluePrintState => {\n  switch (action.type) {\n    case 'ADD': {\n      const id = shortid.generate()\n      return {\n        ...state,\n        [id]: {\n          id,\n          type: 'Gem',\n          operation: 'ANY',\n        },\n      }\n    }\n\n    case 'UPDATE': {\n      const blueprint = action.payload\n\n      return { ...state, [blueprint.id]: { ...blueprint } }\n    }\n\n    case 'DELETE': {\n      const { id } = action.payload\n      const { [id]: blueprint, ...rest } = state\n\n      return { ...rest }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  cancelEdit: actions.Settings.SupplySetups.cancelEdit,\n  saveCustomSetup: actions.Settings.SupplySetups.saveCustomSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    setup: types.IMarketSetup\n  }\n\nconst CustomSetupEdit = React.memo(\n  ({ setup, cancelEdit, saveCustomSetup }: Props) => {\n    const [setupName, setSetupName] = useState(setup.name || '')\n    const [bluePrints, dispatch] = useReducer(\n      bluePrintReducer,\n      setup.tiles,\n      initialStateFromTiles\n    )\n    const bluePrintList = Object.values(bluePrints).reverse()\n\n    return (\n      <Wrapper>\n        <MainControls\n          bluePrintList={bluePrintList}\n          cancelEdit={cancelEdit}\n          setup={setup}\n          setupName={setupName}\n          setSetupName={setSetupName}\n          saveCustomSetup={saveCustomSetup}\n        />\n        <BluePrintList bluePrintList={bluePrintList} dispatch={dispatch} />\n      </Wrapper>\n    )\n  }\n)\n\nCustomSetupEdit.displayName = 'CustomSetupEdit'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomSetupEdit)\n","import styled from 'styled-components'\n\nconst CheckboxWithPreviewControls = styled('div')`\n  float: right;\n`\n\nexport default CheckboxWithPreviewControls\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport CheckboxList from '../../../CheckboxList'\nimport CheckboxWithPreview from './CheckboxWithPreview'\nimport CustomSetupEdit from './CustomSetupEdit'\n\nimport { RootState, actions, selectors } from '../../../../Redux/Store'\nimport CheckboxWithPreviewControls from './CheckboxWithPreviewControls'\n\nconst mapStateToProps = (state: RootState) => ({\n  customSetups: selectors.Settings.SupplySetups.getCustomAsArray(state),\n})\n\nconst mapDispatchToProps = {\n  toggleSetup: actions.Settings.SupplySetups.toggleSetup,\n  createSetup: actions.Settings.SupplySetups.createCustomSetup,\n  editSetup: actions.Settings.SupplySetups.editCustomSetup,\n  deleteSetup: actions.Settings.SupplySetups.deleteCustomSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst CustomSetups = React.memo(\n  ({\n    customSetups,\n    createSetup,\n    toggleSetup,\n    editSetup,\n    deleteSetup,\n  }: Props) => {\n    const customItems = customSetups.map(setup => ({\n      id: setup.id,\n      name: setup.id,\n      label: setup.name,\n      checked: setup.active,\n      setup: setup,\n    }))\n\n    return (\n      <CheckboxList\n        label=\"Custom Setups\"\n        changeHandler={item => toggleSetup(item, 'Custom')}\n        items={customItems}\n        Component={({ checked, item, label, changeHandler, ...rest }) => {\n          const setup = customSetups.find(setup => setup.id === item)\n\n          if (!setup) return null\n\n          if (setup.isDirty) {\n            return <CustomSetupEdit setup={setup} />\n          }\n\n          return (\n            <CheckboxWithPreview\n              changeHandler={changeHandler}\n              checked={checked}\n              item={item}\n              label={label}\n              setup={setup}\n            >\n              <CheckboxWithPreviewControls>\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"Edit\"\n                  onClick={() => editSetup(setup.id)}\n                >\n                  <EditIcon />\n                </IconButton>\n                <IconButton\n                  color=\"secondary\"\n                  aria-label=\"Delete\"\n                  onClick={() => deleteSetup(setup.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </CheckboxWithPreviewControls>\n            </CheckboxWithPreview>\n          )\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ marginTop: '16px' }}\n          onClick={() => createSetup()}\n        >\n          Add\n        </Button>\n      </CheckboxList>\n    )\n  }\n)\n\nCustomSetups.displayName = 'CustomSetups'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomSetups)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CheckboxList from '../../../CheckboxList'\nimport CheckboxWithPreview from './CheckboxWithPreview'\n\nimport { RootState, actions, selectors } from '../../../../Redux/Store'\n\nconst mapStateToProps = (state: RootState) => ({\n  predefinedSetups: selectors.Settings.SupplySetups.getPredefinedAsArray(state),\n})\n\nconst mapDispatchToProps = {\n  toggleSetup: actions.Settings.SupplySetups.toggleSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst PredefinedSetups = React.memo(\n  ({ predefinedSetups, toggleSetup }: Props) => {\n    const predefinedItems = predefinedSetups.map(setup => ({\n      id: setup.id,\n      name: setup.id,\n      label: setup.name,\n      checked: setup.active,\n      setup: setup,\n    }))\n\n    return (\n      <CheckboxList\n        label=\"Predefined Setups\"\n        changeHandler={item => toggleSetup(item, 'Predefined')}\n        items={predefinedItems}\n        Component={({ checked, item, label, changeHandler, ...rest }) => {\n          const setup = predefinedSetups.find(setup => setup.id === item)\n          return (\n            <CheckboxWithPreview\n              changeHandler={changeHandler}\n              checked={checked}\n              item={item}\n              label={label}\n              setup={setup}\n            />\n          )\n        }}\n      />\n    )\n  }\n)\n\nPredefinedSetups.displayName = 'PredefinedSetups'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PredefinedSetups)\n","import styled from 'styled-components'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst SetupSelectionWrapper = styled(FormControl)`\n  width: 100%;\n`\n\nexport default SetupSelectionWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport { RootState, actions, selectors } from '../../../../Redux/Store'\n\nimport CustomSetups from './CustomSetups'\nimport PredefinedSetups from './PredefinedSetups'\nimport SetupSelectionWrapper from './SetupSelectionWrapper'\n\nconst mapStateToProps = (state: RootState) => ({\n  allSetsSelected: selectors.Settings.SupplySetups.getAllSetsSelected(state),\n})\n\nconst mapDispatchToProps = {\n  toggleAll: actions.Settings.SupplySetups.toggleAll,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst SetupSelection = React.memo(({ allSetsSelected, toggleAll }: Props) => {\n  return (\n    <SetupSelectionWrapper component={'fieldset' as 'div'}>\n      <FormLabel />\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={allSetsSelected}\n              onChange={toggleAll}\n              value={allSetsSelected ? 'Deselect All' : 'Select All'}\n            />\n          }\n          label={allSetsSelected ? 'Deselect All' : 'Select All'}\n        />\n      </FormGroup>\n      <CustomSetups />\n      <PredefinedSetups />\n    </SetupSelectionWrapper>\n  )\n})\n\nSetupSelection.displayName = 'SetupSelection'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetupSelection)\n","import React from 'react'\n\nimport ExpansionPanel from '../../../ExpansionPanel'\nimport useExpansionHandling from '../../../../hooks/useExpansionHandling'\n\nimport SetupSelection from './SetupSelection'\n\ntype Props = {}\n\nconst Supply = React.memo(() => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n  const expansionKey = 'supplySets'\n  const expansionHandler = createExpansionHandler(expansionKey)\n\n  return (\n    <ExpansionPanel\n      expanded={expanded}\n      expansionHandler={expansionHandler}\n      expansionKey={expansionKey}\n      summary=\"Supply Setups\"\n    >\n      <SetupSelection />\n    </ExpansionPanel>\n  )\n})\n\nSupply.displayName = 'Supply'\n\nexport default Supply\n","import React from 'react'\n\nimport Expansions from './Expansions'\nimport Supply from './Supply'\n\ntype Props = {}\n\nconst Settings = React.memo(() => (\n  <React.Fragment>\n    <Expansions />\n    <Supply />\n  </React.Fragment>\n))\n\nSettings.displayName = 'Settings'\n\nexport default Settings\n","import styled from 'styled-components/macro'\nimport MuiTableCell from '@material-ui/core/TableCell'\n\nconst Cell = styled(MuiTableCell)`\n  padding: 4px 8px;\n\n  &:first-child {\n    padding-left: 16px;\n  }\n\n  &:last-child {\n    padding-right: 8px;\n  }\n`\n\nCell.displayName = 'Cell'\n\nexport default Cell\n","import styled from 'styled-components/macro'\nimport MuiTableRow from '@material-ui/core/TableRow'\n\nimport { TurnOrderCardType } from '../../../../types'\nimport { TurnOrderColors } from '../../../../mainTheme'\n\ntype Props = {\n  type: TurnOrderCardType\n}\n\nconst getTurnOrderCardStyles = (\n  turnOrderCardColors: TurnOrderColors,\n  type: TurnOrderCardType\n) => {\n  if (!turnOrderCardColors[type]) {\n    return `\n      background: #fff;\n      &:first-child {\n        background: #fff;\n      }\n    `\n  }\n\n  return `\n    background: ${turnOrderCardColors[type].light};\n    &:first-child {\n      background: ${turnOrderCardColors[type].normal};\n    }\n  `\n}\n\nconst RowWrapper = styled(MuiTableRow)<Props>`\n  ${props =>\n    getTurnOrderCardStyles(props.theme.colors.turnOrderCards, props.type)}\n\n  &:first-child {\n    & * {\n      color: #fff;\n    }\n  }\n\n  & td {\n    border-bottom: 4px solid #fafafa;\n  }\n`\n\nexport default RowWrapper\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport { ITurnOrderCard } from '../../../../types'\nimport { RootState, actions } from '../../../../Redux/Store'\n\nimport Cell from './Cell'\nimport RowWrapper from './RowWrapper'\n\nconst mapStateToProps = (state: RootState) => ({})\n\nconst mapDispatchToProps = {\n  addToTop: actions.TurnOrder.ActiveGame.addToTop,\n  addToBottom: actions.TurnOrder.ActiveGame.addToBottom,\n  shuffleIntoDeck: actions.TurnOrder.ActiveGame.shuffleIntoDeck,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    card: ITurnOrderCard\n  }\n\nconst Row = React.memo(\n  ({ card, addToTop, addToBottom, shuffleIntoDeck }: Props) => (\n    <RowWrapper type={card.type}>\n      <Cell>\n        <Typography component=\"p\">{card.name}</Typography>\n      </Cell>\n      <Cell align=\"right\">\n        <IconButton\n          aria-label=\"Add to top\"\n          title=\"Add to top\"\n          onClick={() => addToTop(card.id)}\n        >\n          <Publish fontSize=\"small\" />\n        </IconButton>\n      </Cell>\n      <Cell align=\"right\">\n        <IconButton\n          aria-label=\"Add to bottom\"\n          title=\"Add to bottom\"\n          onClick={() => addToBottom(card.id)}\n        >\n          <GetApp fontSize=\"small\" />\n        </IconButton>\n      </Cell>\n      <Cell align=\"right\">\n        <IconButton\n          aria-label=\"Shuffle into Turn Order Deck\"\n          title=\"Shuffle into Turn Order Deck\"\n          onClick={() => shuffleIntoDeck(card.id)}\n        >\n          <Loop fontSize=\"small\" />\n        </IconButton>\n      </Cell>\n    </RowWrapper>\n  )\n)\n\nRow.displayName = 'Row'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Row)\n","import styled from 'styled-components/macro'\nimport MuiTable from '@material-ui/core/Table'\n\nconst Table = styled(MuiTable)`\n  margin-top: 24px;\n  border-collapse: collapse;\n`\n\nexport default Table\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport TableBody from '@material-ui/core/TableBody'\n\nimport { ITurnOrderCard } from '../../../../types'\nimport { RootState, selectors } from '../../../../Redux/Store'\n\nimport Row from './Row'\nimport Table from './Table'\n\nconst renderRows = (discard: ITurnOrderCard[]) =>\n  discard.map((card, i) => <Row key={i} card={card} />)\n\nconst mapStateToProps = (state: RootState) => ({\n  discard: selectors.TurnOrder.ActiveGame.getDiscard(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst DiscardTable = React.memo(({ discard }: Props) => (\n  <Table>\n    <TableBody>{renderRows(discard)}</TableBody>\n  </Table>\n))\n\nDiscardTable.displayName = 'DiscardTable'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscardTable)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport { RootState, selectors, actions } from '../../../Redux/Store'\n\nimport ShuffleButton from '../../ShuffleButton'\n\nimport DiscardTable from './DiscardTable'\n\nconst mapStateToProps = (state: RootState) => ({\n  deck: selectors.TurnOrder.ActiveGame.getDeck(state),\n  availableCards: selectors.TurnOrder.Configuration.getAvailableCards(state),\n})\n\nconst mapDispatchToProps = {\n  resetGame: actions.TurnOrder.ActiveGame.resetGame,\n  drawCard: actions.TurnOrder.ActiveGame.draw,\n  newRound: actions.TurnOrder.ActiveGame.newRound,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ActiveTurnOrder = React.memo(\n  ({ availableCards, deck, resetGame, newRound, drawCard }: Props) => (\n    <React.Fragment>\n      {deck.length === 0 ? (\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => newRound(availableCards)}\n        >\n          New Round\n        </Button>\n      ) : (\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={drawCard}\n        >\n          Draw a card\n        </Button>\n      )}\n\n      <DiscardTable />\n\n      <ShuffleButton color=\"primary\" variant=\"extended\" onClick={resetGame}>\n        Reset Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n)\n\nActiveTurnOrder.displayName = 'ActiveTurnOrder'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActiveTurnOrder)\n","import styled from 'styled-components/macro'\nimport MuiCard from '@material-ui/core/Card'\n\nconst Card = styled(MuiCard)`\n  margin-top: 24px;\n`\n\nexport default Card\n","import styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nimport { TurnOrderCardType } from '../../../types'\n\ntype Props = {\n  type: TurnOrderCardType\n}\n\nconst ConfigurationCardDisplay = styled(Typography)<Props>`\n  display: block;\n  padding: 5px 10px;\n  margin-bottom: 2px;\n\n  color: #fff;\n  background: ${props => props.theme.colors.turnOrderCards[props.type].normal};\n`\n\nexport default ConfigurationCardDisplay\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport { ITurnOrderSetup } from '../../../types'\n\nimport Card from './Card'\nimport ConfigurationCardDisplay from './ConfigurationCardDisplay'\n\nconst renderCardNames = (turnOrderSetup: ITurnOrderSetup) =>\n  turnOrderSetup.turnOrderCards.map((card, i) => (\n    <ConfigurationCardDisplay component=\"p\" key={i} type={card.type}>\n      {card.name}\n    </ConfigurationCardDisplay>\n  ))\n\ntype Props = {\n  turnOrderSetup: ITurnOrderSetup\n}\n\nconst CardNameDisplay = React.memo(({ turnOrderSetup }: Props) => (\n  <Card>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        Turn order cards\n      </Typography>\n      {renderCardNames(turnOrderSetup)}\n    </CardContent>\n  </Card>\n))\n\nCardNameDisplay.displayName = 'CardNameDisplay'\n\nexport default CardNameDisplay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport { MODES } from '../../../types'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport Card from './Card'\n\nconst renderModeOptions = () =>\n  MODES.map(mode => (\n    <FormControlLabel\n      key={mode}\n      value={mode}\n      control={<Radio />}\n      label={mode}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  mode: selectors.TurnOrder.Configuration.getMode(state),\n})\n\nconst mapDispatchToProps = {\n  setMode: actions.TurnOrder.Configuration.setMode,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst ModeSelection = React.memo(({ mode, setMode }: Props) => (\n  <Card>\n    <CardContent>\n      <FormLabel>Mode</FormLabel>\n      <RadioGroup\n        aria-label=\"mode\"\n        name=\"turnOrderMode\"\n        value={mode}\n        onChange={(event: React.ChangeEvent<any>) =>\n          setMode(event.currentTarget.value)\n        }\n      >\n        {renderModeOptions()}\n      </RadioGroup>\n    </CardContent>\n  </Card>\n))\n\nModeSelection.displayName = 'ModeSelection'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModeSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport config from '../../../config'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nconst renderPlayerCountOptions = () =>\n  Object.values(config.TURNORDERSETUPS).map(playerCount => (\n    <FormControlLabel\n      key={playerCount.id}\n      value={playerCount.id}\n      control={<Radio />}\n      label={playerCount.name}\n    />\n  ))\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  selectPlayerCount: actions.TurnOrder.Configuration.selectPlayerCount,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst PlayerCountSelection = React.memo(\n  ({ selectPlayerCount, selectedPlayerCount }: Props) => (\n    <Card>\n      <CardContent>\n        <FormControl component={'fieldset' as 'div'}>\n          <FormLabel>Amount of Players</FormLabel>\n          <RadioGroup\n            aria-label=\"Players\"\n            name=\"turnOrderPlayerCountOptions\"\n            value={selectedPlayerCount.id}\n            onChange={(event: React.ChangeEvent<any>) => {\n              selectPlayerCount(event.currentTarget.value)\n            }}\n            row={true}\n          >\n            {renderPlayerCountOptions()}\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  )\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayerCountSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport config from '../../../config'\nimport { ITurnOrderPlayerCount } from '../../../types'\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport Card from './Card'\n\nconst renderSetupOptions = (selectedPlayerCount: ITurnOrderPlayerCount) =>\n  Object.values(config.TURNORDERSETUPS[selectedPlayerCount.id].variations).map(\n    setup => (\n      <FormControlLabel\n        key={setup.id}\n        value={setup.id}\n        control={<Radio />}\n        label={setup.name}\n      />\n    )\n  )\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n  selectedSetup: selectors.TurnOrder.Configuration.getSelectedSetup(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: actions.TurnOrder.Configuration.selectSetup,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst SetupSelection = React.memo(\n  ({ selectSetup, selectedSetup, selectedPlayerCount }: Props) => (\n    <Card>\n      <CardContent>\n        <FormControl component={'fieldset' as 'div'}>\n          <FormLabel>Player Cards Variants</FormLabel>\n          <RadioGroup\n            aria-label=\"Players Variant\"\n            name=\"turnOrderOptions\"\n            value={selectedSetup.id}\n            onChange={(event: React.ChangeEvent<any>) => {\n              selectSetup(event.currentTarget.value)\n            }}\n          >\n            {renderSetupOptions(selectedPlayerCount)}\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </Card>\n  )\n)\n\nSetupSelection.displayName = 'SetupSelection'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetupSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../../Redux/Store'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport CardNameDisplay from './CardNameDisplay'\nimport ModeSelection from './ModeSelection'\nimport PlayerCountSelection from './PlayerCountSelection'\nimport SetupSelection from './SetupSelection'\n\nconst mapStateToProps = (state: RootState) => ({\n  currentConfiguration: selectors.TurnOrder.Configuration.getConfiguration(\n    state\n  ),\n  selectedPlayerCount: selectors.TurnOrder.Configuration.getSelectedPlayerCount(\n    state\n  ),\n})\n\nconst mapDispatchToProps = {\n  startGame: actions.TurnOrder.ActiveGame.startGame,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {}\n\nconst TurnOrderConfiguration = React.memo(\n  ({ currentConfiguration, startGame, selectedPlayerCount }: Props) => {\n    const availableVariations = Object.keys(selectedPlayerCount.variations).map(\n      key => [selectedPlayerCount.variations[key]]\n    )\n\n    const hasMoreThanOneVariant: boolean = availableVariations.length > 1\n\n    return (\n      <React.Fragment>\n        <PlayerCountSelection />\n        {hasMoreThanOneVariant ? <SetupSelection /> : null}\n        <ModeSelection />\n        <CardNameDisplay turnOrderSetup={currentConfiguration} />\n        <ShuffleButton\n          color=\"primary\"\n          variant=\"extended\"\n          onClick={() => startGame(currentConfiguration.turnOrderCards)}\n        >\n          Start Game\n        </ShuffleButton>\n      </React.Fragment>\n    )\n  }\n)\n\nTurnOrderConfiguration.displayName = 'TurnOrderConfiguration'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TurnOrderConfiguration)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, selectors } from '../../../Redux/Store'\n\nimport ActiveGame from './ActiveGame'\nimport TurnOrderConfiguration from './TurnOrderConfiguration'\n\nconst mapStateToProps = (state: RootState) => ({\n  gameHasStarted: selectors.TurnOrder.ActiveGame.getHasStarted(state),\n})\n\nconst mapDispatchToProps = {}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    gameHasStarted: boolean\n  }\n\nconst TurnOrder = React.memo(({ gameHasStarted }: Props) => (\n  <React.Fragment>\n    {gameHasStarted ? <ActiveGame /> : <TurnOrderConfiguration />}\n  </React.Fragment>\n))\n\nTurnOrder.displayName = 'TurnOrder'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TurnOrder)\n","import React from 'react'\nimport { useRedirect, useRoutes } from 'hookrouter'\n\nimport Nemeses from './components/pages/Nemeses'\nimport Mages from './components/pages/Mages'\nimport Supply from './components/pages/Supply'\nimport Settings from './components/pages/Settings'\nimport TurnOrder from './components/pages/TurnOrder'\n\ntype Match = {\n  urlParameters?: Object\n  contentComponent: React.ReactNode\n  title: string\n}\n\n/**\n * Creates a function which can be used as routing target inside hookrouters\n * useRoutes() hook. Returns an object which contains the provided title,\n * a contentComponent to render and the current urlParameters (or null if there are none)\n *\n * Usage for regular components:\n *  createRoutingTarget(() => <Component />, 'Title')\n *\n * Usage with urlParameters passed to component:\n *  createRoutingTarget((urlParams) => <Component {...urlParams} />, 'Title')\n *    or with desctructoring\n *  createRoutingTarget(({id}: {id: string}) => <Component {id} />, 'Title')\n */\nconst createRoutingTarget = (renderComponent: Function, title: string) => (\n  urlParameters: Object\n): Match => ({\n  urlParameters,\n  contentComponent: renderComponent(urlParameters),\n  title,\n})\n\nconst routes = {\n  '/nemesis': createRoutingTarget(() => <Nemeses />, 'Nemesis'),\n  '/mages': createRoutingTarget(() => <Mages />, 'Mages'),\n  '/supply': createRoutingTarget(() => <Supply />, 'Supply'),\n  '/turnorder': createRoutingTarget(() => <TurnOrder />, 'Turn Order'),\n  '/settings': createRoutingTarget(() => <Settings />, 'Settings'),\n}\n\nexport const useRouting = () => {\n  // If no endpoint has been provided we redirect to the nemesis randomizer\n  // because we currently do not have a dedicated landingpage\n  useRedirect('/', '/nemesis')\n  const match = useRoutes(routes)\n\n  return match\n}\n","import styled from 'styled-components/macro'\n\nconst HeaderPlaceholder = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  justify-content: flex-end;\n\n  min-height: 56px;\n\n  @media (min-width: 0px) and (orientation: landscape) {\n    min-height: 48px;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 64px;\n  }\n`\n\nexport default HeaderPlaceholder\n","import styled, { css } from 'styled-components/macro'\n\ntype Props = {\n  drawerIsOpen: boolean\n  isLoading: boolean\n}\n\nconst openDrawerMixin = css`\n  margin-left: 0;\n  transition: ${props => props.theme.muiTransitions.contentShift};\n`\n\nconst Wrapper = styled('div')<Props>`\n  flex-grow: 1;\n  padding: ${props => props.theme.spacing.unit * 3}px;\n  margin-left: -${props => props.theme.drawerWidth}px;\n  transition: ${props => props.theme.muiTransitions.content};\n\n  ${props => (props.drawerIsOpen ? openDrawerMixin : '')}\n\n  ${props =>\n    props.isLoading\n      ? `\n      text-align: center;\n      padding-top: 150px;\n    `\n      : ''}\n`\n\nexport default Wrapper\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport HeaderPlaceholder from './HeaderPlaceholder'\nimport Wrapper from './Wrapper'\n\ntype Props = {\n  isLoading: boolean\n  drawerIsOpen: boolean\n  contentComponent: React.ReactNode\n}\n\nconst Content = React.memo(\n  ({ isLoading, drawerIsOpen, contentComponent }: Props) => (\n    <Wrapper isLoading={isLoading} drawerIsOpen={drawerIsOpen}>\n      <HeaderPlaceholder />\n      {isLoading ? <CircularProgress /> : contentComponent}\n    </Wrapper>\n  )\n)\n\nContent.displayName = 'Content'\n\nexport default Content\n","import styled from 'styled-components/macro'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Title = styled(Typography)``\n\nexport default Title\n","import React from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport MuiAppBar from '@material-ui/core/AppBar'\n\ntype Props = {\n  drawerIsOpen: boolean\n}\n\nconst openDrawerMixin = css`\n  width: calc(100% - ${props => props.theme.drawerWidth}px);\n  margin-left: ${props => props.theme.drawerWidth}px;\n  transition: ${props => props.theme.muiTransitions.appBarShift};\n`\n\n// eslint-disable-next-line no-unexpected-multiline\nconst AppBar = styled(({ drawerIsOpen, ...rest }) => <MuiAppBar {...rest} />)<\n  Props\n>`\n  position: fixed;\n\n  ${props => (props.drawerIsOpen ? openDrawerMixin : '')}\n`\n\nexport default AppBar\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport MuiIconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\ntype WrapperProps = {\n  drawerIsOpen: boolean\n}\n\nconst Wrapper = styled('div')<WrapperProps>`\n  margin-left: 12px;\n  margin-right: 20px;\n\n  color: #fff;\n\n  ${props => (props.drawerIsOpen ? `display: none;` : '')}\n`\n\nconst IconButton = styled(MuiIconButton)`\n  color: #fff;\n`\n\ntype Props = {\n  drawerIsOpen: boolean\n  onClick: () => void\n}\n\nconst MenuButton = ({ drawerIsOpen, onClick }: Props) => (\n  <Wrapper drawerIsOpen={drawerIsOpen}>\n    <IconButton aria-label=\"Menu\" onClick={onClick}>\n      <MenuIcon />\n    </IconButton>\n  </Wrapper>\n)\n\nexport default MenuButton\n","import React from 'react'\n\nimport Toolbar from '@material-ui/core/Toolbar'\n\nimport Title from './Title'\nimport AppBar from './AppBar'\nimport MenuButton from './MenuButton'\n\ntype Props = {\n  drawerIsOpen: boolean\n  toggleDrawer: () => void\n  title: string\n}\n\nconst TopBar = React.memo(({ drawerIsOpen, toggleDrawer, title }: Props) => (\n  <AppBar drawerIsOpen={drawerIsOpen}>\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <MenuButton drawerIsOpen={drawerIsOpen} onClick={toggleDrawer} />\n      <Title variant=\"h6\" color=\"inherit\">\n        {title}\n      </Title>\n    </Toolbar>\n  </AppBar>\n))\n\nTopBar.displayName = 'TopBar'\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport A from './A'\n\ntype Props = {\n  text: string\n  to: string\n  children: any\n  onClick?: () => void\n}\n\nconst Link = React.memo(({ text, to, children, onClick }: Props) => (\n  <A href={to}>\n    <ListItem button key={text} onClick={onClick}>\n      <ListItemIcon>{children}</ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  </A>\n))\n\nLink.displayName = 'Link'\n\nexport default Link\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport Link from './Link'\n\ntype Props = {\n  clickHandler: () => void\n}\n\nconst Navigation = React.memo(({ clickHandler }: Props) => (\n  <List>\n    <Link text=\"Nemesis\" to=\"/nemesis\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-broken-skull\" />\n    </Link>\n    <Link text=\"Mages\" to=\"/mages\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-crystal-wand\" />\n    </Link>\n    <Link text=\"Supply\" to=\"/supply\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-campfire\" />\n    </Link>\n    <Link text=\"Turn Order\" to=\"/turnorder\" onClick={clickHandler}>\n      <i className=\"ra ra-lg ra-player-lift\" />\n    </Link>\n    <Link text=\"Settings\" to=\"/settings\" onClick={clickHandler}>\n      <BuildIcon\n        style={{\n          width: '0.9em',\n        }}\n      />\n    </Link>\n  </List>\n))\n\nNavigation.displayName = 'Navigation'\n\nexport default Navigation\n","import styled from 'styled-components/macro'\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  justify-content: flex-end;\n\n  min-height: 56px;\n\n  @media (min-width: 0px) and (orientation: landscape) {\n    min-height: 48px;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 64px;\n  }\n`\n\nexport default Header\n","import styled from 'styled-components/macro'\nimport Typography from '@material-ui/core/Typography'\n\nconst AppInfo = styled(Typography)`\n  margin: ${props => props.theme.spacing.unit * 2}px;\n`\n\nexport default AppInfo\n","import styled from 'styled-components/macro'\nimport Link from '@material-ui/core/Link'\n\nconst GithHubLink = styled(Link)`\n  display: block;\n  line-height: 24px;\n  margin-top: ${props => props.theme.spacing.unit * 2}px;\n`\n\nexport default GithHubLink\n","import styled from 'styled-components/macro'\n\nconst GitHubLogo = styled('img')`\n  width: 24px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: ${props => props.theme.spacing.unit}px;\n`\n\nexport default GitHubLogo\n","import styled from 'styled-components/macro'\nimport MuiDrawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst Drawer = styled(MuiDrawer)`\n  width: 240px;\n  flex-shrink: 0;\n`\n\n// FIXME remove withStyles call\nexport default withStyles({\n  paper: {\n    width: 240,\n  },\n})(Drawer)\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\nimport Navigation from '../Navigation'\nimport Header from './Header'\nimport AppInfo from './AppInfo'\nimport GitHubLink from './GitHubLink'\nimport GitHubLogo from './GitHubLogo'\nimport Drawer from './Drawer'\n\ntype Props = {\n  drawerIsOpen: boolean\n  toggleDrawer: () => void\n}\n\nconst DrawerMenu = React.memo(({ drawerIsOpen, toggleDrawer }: Props) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    anchor=\"left\"\n  >\n    <Header>\n      <IconButton onClick={toggleDrawer}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </Header>\n    <Divider />\n    <Navigation clickHandler={toggleDrawer} />\n    <Divider />\n    <AppInfo>\n      Version: {process.env.REACT_APP_VERSION}\n      <GitHubLink\n        href=\"https://github.com/on3iro/aeons-end-randomizer\"\n        color=\"inherit\"\n        target=\"_blank\"\n      >\n        <GitHubLogo src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" />\n        Github\n      </GitHubLink>\n    </AppInfo>\n  </Drawer>\n))\n\nDrawerMenu.displayName = 'DrawerMenu'\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState, actions, selectors } from '../../Redux/Store'\nimport { useRouting } from '../../routes'\n\nimport Content from '../Content'\nimport TopBar from '../TopBar'\nimport DrawerMenu from '../DrawerMenu'\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoading: selectors.Main.ContentLoading.getIsLoading(state),\n})\n\nconst mapDispatchToProps = {\n  getUserConfiguration: actions.Main.getUserConfiguration,\n}\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  typeof mapDispatchToProps & {\n    isLoading: boolean\n  }\n\nconst MainApp = ({ getUserConfiguration, isLoading }: Props) => {\n  const match = useRouting()\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  useEffect(() => {\n    getUserConfiguration()\n  }, [getUserConfiguration])\n\n  return (\n    <React.Fragment>\n      <TopBar\n        title={match.title}\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu drawerIsOpen={drawerIsOpen} toggleDrawer={toggleDrawer} />\n      <Content\n        contentComponent={match.contentComponent}\n        isLoading={isLoading}\n        drawerIsOpen={drawerIsOpen}\n      />\n    </React.Fragment>\n  )\n}\n\nMainApp.displayName = 'MainApp'\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainApp)\n","import styled from 'styled-components/macro'\n\nconst Wrapper = styled('div')`\n  height: 100%;\n  display: flex;\n  padding-bottom: 72px;\n`\n\nexport default Wrapper\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components/macro'\n\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\n\nimport { mainTheme, muiTheme } from '../../mainTheme'\n\nimport MainApp from './MainApp'\nimport Wrapper from './Wrapper'\n\ntype Props = { classes: any }\n\nconst App = React.memo(() => (\n  <ThemeProvider theme={mainTheme}>\n    <MuiThemeProvider theme={muiTheme}>\n      <Wrapper>\n        <CssBaseline />\n        <MainApp />\n      </Wrapper>\n    </MuiThemeProvider>\n  </ThemeProvider>\n))\n\nApp.displayName = 'App'\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport JssProvider from 'react-jss/lib/JssProvider'\nimport { create } from 'jss'\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './Redux/configureStore'\nimport { initialState } from './Redux/Store'\n\nconst store = configureStore(initialState)\n\nconst generateClassName = createGenerateClassName()\n// @ts-ignore\nconst jss = create({\n  ...jssPreset(),\n  // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n  insertionPoint: document.getElementById('jss-insertion-point'),\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <JssProvider jss={jss} generateClassName={generateClassName}>\n      <App />\n    </JssProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// @ts-ignore\nserviceWorker.register()\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { install, StoreCreator } from 'redux-loop'\n\nimport { RootReducer, RootState } from './Store'\n\nconst configureStore = (initialState: RootState) => {\n  // Add middleware to this array if necessary\n  const middleWares: any[] = []\n\n  const enhancers = [applyMiddleware(...middleWares), install<RootState>()]\n\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      // @ts-ignore\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : compose\n\n  const enhancedCreateStore = createStore as StoreCreator\n  const store = enhancedCreateStore(\n    RootReducer,\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  return store\n}\n\nexport { configureStore as default }\n"],"sourceRoot":""}