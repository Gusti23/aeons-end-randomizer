{"version":3,"sources":["routes.js","config/index.js","config/aeonsData.js","config/marketSetups.js","config/turnOrderSetups.js","globalContexts.js","hooks/useSelectedSets.jsx","components/ShuffleButton.jsx","components/pages/helpers.js","components/pages/Nemeses.jsx","components/pages/Mages/MageCountPicker.jsx","components/pages/Mages/MageGridWrapper.jsx","components/pages/Mages/MageCard.jsx","components/pages/Mages/MageList.jsx","components/pages/Mages/EmptyMageListHint.jsx","components/pages/Mages/index.jsx","hooks/useExpansionHandling.jsx","components/AoeExpansionPanel.jsx","components/AoeExpansionPanelSummary.jsx","components/pages/Supply/supplyStyles.js","components/pages/Supply/ListWrapper.jsx","components/pages/Supply/CardTypeIcon.jsx","components/pages/Supply/MarketTile.jsx","components/pages/Supply/SupplyList.jsx","components/pages/Supply/MarketOptions.jsx","components/pages/Supply/index.jsx","components/pages/Settings/settingStyles.js","components/pages/Settings/ConfiguredSet.jsx","components/pages/Settings/ActiveSets.jsx","components/pages/Settings/index.jsx","components/pages/TurnOrder/TurnOrderTableCell.jsx","components/pages/TurnOrder/TurnOrderTableRow.jsx","components/pages/TurnOrder/TurnOrderTable.jsx","components/pages/TurnOrder/ActiveTurnOrder.jsx","components/pages/TurnOrder/TurnOrderSetup.jsx","components/pages/TurnOrder/hooks.js","components/pages/TurnOrder/index.jsx","components/Content.jsx","components/App/TopBar.jsx","components/RouteItem.jsx","components/Routes.jsx","components/App/DrawerMenu.jsx","components/App/index.jsx","components/App/appStyles.js","serviceWorker.js","index.js"],"names":["ROUTES","config","DATA","sets","WE","nemeses","set","name","id","mages","cards","type","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","MARKETSETUPS","market1","tiles","operation","threshold","market2","market3","values","market4","market5","market6","random","TURNORDERSETUPS","onePlayerThreeToc","turnOrderCards","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","SetConfigurationContext","React","createContext","useSelectedSets","configurationOfSets","useContext","selectedSets","Object","keys","filter","key","noSelectedSetsComponent","length","react_default","a","createElement","Typography_default","paragraph","ShuffleButton","withStyles","root","position","bottom","right","zIndex","Fab","createSlotList","amount","Array","from","getListOfAvailableEntity","entity","reduce","acc","concat","toConsumableArray","getRandomEntity","availableEntities","Math","floor","createEntityList","blueprintList","blueprint","i","last","hasCostOperation","undefined","newEntity","card","setupBlueprint","indexOf","filterByCost","result","Nemeses","memo","_useSelectedSets","_useState","useState","_useState2","slicedToArray","nemesis","setNemesis","availableNemeses","Fragment","Card_default","CardContent_default","color","variant","component","components_ShuffleButton","onClick","MageCountPicker","_ref","selectedValue","handleAmountChange","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","styled","withConfig","displayName","componentId","MageCard","mage","Grid_default","item","xs","md","MageList","Mages_MageGridWrapper","container","spacing","map","Mages_MageCard","EmptyMageListHint","marginTop","Typography","Mages","setMages","_useState3","_useState4","setAmount","availableMages","hasEmptySlots","Mages_MageCountPicker","toString","e","parseInt","target","Mages_EmptyMageListHint","Mages_MageList","slotList","useExpansionHandling","expanded","setExpanded","handleExpansion","panel","event","AoeExpansionPanel","borderRadius","&:before","display","margin","ExpansionPanel","AoeExpansionPanelSummary","minHeight","&$expanded","content","ExpansionPanelSummary","supplyStyles","theme","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","minWidth","cardContent","cardName","fontWeight","cardInfoListItem","padding","marginRight","infoText","gem","background","relic","spell","cardIcon","opacity","gemIcon","relicIcon","spellIcon","ListWrapper","CardTypeIcon","classes","typeClass","className","MarketTile","tileSetup","index","rest","objectWithoutProperties","assign","toLowerCase","title","join","thresholdValue","getOperationString","List_default","ListItem_default","Supply_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","MarketOptions","marketSetupId","changeHandler","setup","getRandomCardsByType","availableCards","tileSetups","cardType","cardSlots","availableCardsOfType","_ref2","Supply","_ref3","_useExpansionHandling","setMarketSetup","setCards","components_AoeExpansionPanel","components_AoeExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","_createSupply","gems","relics","spells","createSupply","settingStyles","ConfiguredSet","handleChange","Checkbox_default","checked","ActiveSets","allSetsSelected","handleSelectAll","FormGroup_default","Settings_ConfiguredSet","renderConfiguredSets","Settings","_useContext","setSets","every","val","Settings_ActiveSets","newSets","objectSpread","defineProperty","setToDb","DiscardTableCell","TableCell","TurnOrderTableRow","handlers","TableRow_default","TurnOrderTableCell","align","IconButton_default","addToTop","index_es","addToBottom","shuffleIntoDeck","TurnOrderTable","Table_default","TableBody_default","TurnOrder_TurnOrderTableRow","renderTableRows","ActiveTurnOrder","deckIsEmpty","discard","Button_default","startNewRound","drawTurnOrderCard","TurnOrder_TurnOrderTable","handleResetGame","TurnOrderSetup","turnOrderSetup","startGame","chooseSetup","renderTurnOrderSetups","shuffleDeck","deck","TurnOrder","_useTurnOrderSetup","setTurnOrderSetup","useEffect","getFromDb","then","handleTurnOrderSetupChange","useTurnOrderSetup","_useGameState","turnOrderState","setTurnOrderState","_useState5","started","_useState6","gameState","setGameState","state","cardId","newState","find","cardToAdd","cardDrawn","stated","deckAndDiscardState","handleStartGame","cardToShuffle","newDeck","useGameState","TurnOrder_ActiveTurnOrder","TurnOrder_TurnOrderSetup","Content","_ROUTES$nemeses$ROUTE","route","drawerHeader","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","ListItemText_default","primary","Routes","locationhandler","components_RouteItem","Build_default","style","width","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","appInfo","process","Link_default","href","githubLink","src","alt","githubLogo","paddingBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","alignItems","mixins","toolbar","justifyContent","flexGrow","unit","contentShift","lineHeight","verticalAlign","withTheme","setDrawerIsOpen","setCurrentLocation","defaultSets","CssBaseline_default","App_TopBar","App_DrawerMenu","Provider","components_Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be7e26b2.chunk.js","sourcesContent":["export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { DATA } from './aeonsData'\nimport MARKETSETUPS from './marketSetups'\nimport TURNORDERSETUPS from './turnOrderSetups'\n\nexport default {\n  DATA,\n  MARKETSETUPS,\n  TURNORDERSETUPS\n}\n","export const DATA = {\n  sets: [\"WE\", \"AE\", \"BS\", \"Legacy\", \"Nameless\", \"Depths\", \"TV\", \"OD\"],\n  \"WE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"set\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"nemeses\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"set\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"nemeses\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"set\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"set\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"nemeses\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"set\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"nemeses\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Rage Borne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"set\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"set\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"set\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"set\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"set\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","export default {\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n}\n\n","export default {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player with 3 turn order cards',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 1' },\n      { id: 4, name: 'Nemesis' },\n      { id: 5, name: 'Nemesis' }\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player with 4 turn order cards',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 1' },\n      { id: 4, name: 'Player 1' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 1' },\n      { id: 3, name: 'Player 2' },\n      { id: 4, name: 'Player 2' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 2' },\n      { id: 3, name: 'Player 3' },\n      { id: 4, name: 'Wild' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      { id: 1, name: 'Player 1' },\n      { id: 2, name: 'Player 2' },\n      { id: 3, name: 'Player 3' },\n      { id: 4, name: 'Player 4' },\n      { id: 5, name: 'Nemesis' },\n      { id: 6, name: 'Nemesis' }\n    ]\n  }\n}\n","import React from 'react'\n\nexport const SetConfigurationContext = React.createContext(null)\n\n","import React, { useContext } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from 'globalContexts'\n\n/**\n * Custom hook to make the users configured sets available to a component.\n * If no sets have been selected a simple noSelectedSetsComponent will\n * be created, which can be rendered to warn the user. (this component will otherwise be null)\n *\n * returns { selectedSets, noSelectedSetsComponent } \n  */\nconst useSelectedSets = () => {\n  const { configurationOfSets } = useContext(SetConfigurationContext)\n  const selectedSets = Object\n    .keys(configurationOfSets)\n    .filter( key => configurationOfSets[key])\n  const noSetsSelected = selectedSets.length < 1\n\n  const noSelectedSetsComponent = noSetsSelected\n    ? (<Typography paragraph>\n        There is currently no set selected. Please activate at least one set in the settings.\n      </Typography>)\n    : null\n\n  return {\n    selectedSets,\n    noSelectedSetsComponent\n  }\n}\n\nexport default useSelectedSets\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '24px',\n    right: '24px',\n    zIndex: 10,\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import config from 'config'\n\n/**\n * Creates a list containing \"EMPTY\" strings. The length of the list\n * is determined by the amount of empty slots (\"amount\" parameter)\n  */\nexport const createSlotList = (amount) => {\n    return Array.from({ length: amount }, () => \"EMPTY\");\n}\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = {\n *    AE: { mages: [ \"a\", \"b\" ] },\n *    WE: { mages: [ \"c\", \"d\" ] }\n *  }\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ \"a\", \"b\", \"c\", \"d\" ]\n  */\nexport const getListOfAvailableEntity = (selectedSets, entity) => selectedSets.reduce(\n  (acc, set) => {\n    return [ ...acc, ...config.DATA[set][entity] ]\n  },[]\n)\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = (availableEntities) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (card, setupBlueprint) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"=\": {\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\n/**\n * Given a list of available entities (e.g. \"mages\" or \"cards\") and a list\n * of slots to fill, this returns a new list where each \"slot\" has been replaced\n * by a random entity from the list of available entities.\n * If the entities have an operation specified, the available entities will\n * be filtered by cost and operation before a random entity is determined. (currently only relevant for cards)\n * Also do note, that each entity is unique and therefore will be removed from the\n * list of available entities for the rest of the function run, as soon as it has been\n * picked for a slot once.\n  */\nexport const createEntityList = (availableEntities, blueprintList) => {\n  const entities = blueprintList.reduce(\n    (acc, blueprint, i) => {\n      const last = i === blueprintList.length - 1\n\n      // Check for cards\n      const hasCostOperation = blueprint.operation !== undefined\n      const newEntity = hasCostOperation\n        ? getRandomEntity(acc.availableEntities.filter(entity => filterByCost(entity, blueprint)))\n        : getRandomEntity(acc.availableEntities)\n\n      if (last) {\n        return [ ...acc.result, newEntity ]\n      }\n\n      // Make sure each entity will only be added to the result list once\n      const remainingEntitites = acc.availableEntities.filter(\n        entity => entity.id !== newEntity.id\n      )\n\n      return {\n        availableEntities: remainingEntitites,\n        result: [ ...acc.result, newEntity]\n      }\n  }, { availableEntities, result: [] })\n\n  return entities\n}\n","import React, { useState } from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from './helpers.js'\n\n\nconst Nemeses = React.memo(() => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [nemesis, setNemesis] = useState(null)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableNemeses = getListOfAvailableEntity(selectedSets, \"nemeses\")\n  const handleShuffle = () => {\n    setNemesis(getRandomEntity(availableNemeses))\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? (\n            <React.Fragment>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\">{nemesis['set']}</Typography>\n                  <Typography variant=\"h6\" component=\"h2\">{nemesis['name']}</Typography>\n                </CardContent>\n              </Card>\n\n            </React.Fragment>\n          )\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default Nemeses\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst MageCountPicker = React.memo(({ selectedValue, handleAmountChange }) => (\n  <Card>\n    <CardContent>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Amount of Mages</FormLabel>\n        <RadioGroup\n          aria-label=\"Amount of Mages\"\n          name=\"mageAmount\"\n          value={selectedValue}\n          onChange={handleAmountChange}\n          row={true}\n        >\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n))\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default MageGridWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nconst MageCard = React.memo(({mage}) => (\n  <Grid item xs={6} md={3}>\n    <Card>\n      <CardContent>\n        <Typography color=\"textSecondary\">{mage.set}</Typography>\n        <Typography variant=\"h6\" component=\"h2\">{mage.name}</Typography>\n      </CardContent>\n    </Card>\n  </Grid>\n))\n\nexport default MageCard\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport MageGridWrapper from './MageGridWrapper'\n\nimport MageCard from './MageCard'\n\nconst MageList = React.memo(({ mages }) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {\n        mages.map(mage => (\n          <MageCard mage={mage} key={mage.name}/>\n        ))\n      }\n    </Grid>\n  </MageGridWrapper>\n))\n\nexport default MageList\n","import { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = withStyles({\n  root: {\n    marginTop: 24\n  }\n})(Typography)\n\nexport default EmptyMageListHint\n","import React, { useState } from 'react'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\n\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from 'components/pages/helpers.js'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\n\n\nconst Mages = React.memo(() => {\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const [mages, setMages] = useState([])\n  const [amount, setAmount] = useState(1)\n  const handleAmountChange = (e) => {\n    setAmount(parseInt(e.target.value))\n  }\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const availableMages = getListOfAvailableEntity(selectedSets, \"mages\")\n  const handleShuffle = () => {\n    const slotList = createSlotList(amount)\n    const mages = createEntityList(availableMages, slotList)\n    setMages(mages)\n  }\n\n  const hasEmptySlots = mages.indexOf(\"EMPTY\") > -1 || mages.length === 0\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={amount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        hasEmptySlots\n          ? <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default Mages\n","import { useState } from 'react'\n\nconst useExpansionHandling = () => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState(null)\n\n  const handleExpansion = (panel) => (event, expanded) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, handleExpansion, setExpanded }\n}\n\nexport default useExpansionHandling\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n\nconst AoeExpansionPanel = withStyles({\n  root: {\n    borderRadius: 4,\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {\n    margin: 'auto',\n  },\n})(ExpansionPanel);\n\nexport default AoeExpansionPanel\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nconst AoeExpansionPanelSummary = withStyles({\n  root: {\n    minHeight: 48,\n    '&$expanded': {\n      minHeight: 48,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(ExpansionPanelSummary);\n\nexport default AoeExpansionPanelSummary\n","const supplyStyles = (theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  card: {\n    minWidth: 30,\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardName: {\n    fontWeight: 'bold',\n  },\n  cardInfoListItem: {\n    padding: 0,\n  },\n  label: {\n    marginRight: 8,\n    display: 'inline-block',\n  },\n  infoText: {\n    display: 'inline-block',\n  },\n  gem: {\n    background: '#EDE7F6',\n  },\n  relic: {\n    background: '#E3F2FD',\n  },\n  spell: {\n    background: '#FFF3E0',\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2\n  },\n  gemIcon: {\n    color: '#B39DDB',\n  },\n  relicIcon: {\n    color: '#90CAF9',\n  },\n  spellIcon: {\n    color: '#FFCC80',\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nconst CardTypeIcon = React.memo(({type, classes}) => {\n  const typeClass = classes[`${type}Icon`]\n\n  switch (type) {\n    case 'gem': {\n      return <i className={`ra ra-lg ra-crystals ${classes.cardIcon} ${typeClass}`} />\n    }\n    case 'relic': {\n      return <i className={`ra ra-lg ra-crystal-wand ${classes.cardIcon} ${typeClass}`} /> \n    }\n    case 'spell': {\n      return <i className={`ra ra-lg ra-scroll-unfurled ${classes.cardIcon} ${typeClass}`} /> \n    }\n    default: {\n      return null\n    }\n  }\n})\n\nexport default CardTypeIcon\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport CardTypeIcon from './CardTypeIcon'\n\nconst getOperationString = (operation, values, threshold) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}\n\nconst MarketTile = React.memo(({ tileSetup, index, cards, classes, ...rest }) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card className={`${classes.card} ${classes[type.toLowerCase()]}`}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography className={classes.cardName} component=\"p\">\n            { cards[index].name !== undefined ? cards[index].name : \"-\" }\n          </Typography>\n          <List>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Set:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { cards[index].set !== undefined ? cards[index].set : \"-\" }\n              </Typography>\n            </ListItem>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Cost:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { cards[index].cost !== undefined ? cards[index].cost : \"-\" }\n              </Typography>\n            </ListItem>\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} classes={classes} />\n      </Card>\n    </Grid>\n  )\n})\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (marketSetup, cards, classes) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        index={i}\n        cards={cards}\n        classes={classes}\n      />\n    )\n  )\n}\n\nconst SupplyList = React.memo(({marketSetup, cards, classes}) => (\n  <ListWrapper>\n    <Grid\n      container\n      spacing={16}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </Grid>\n  </ListWrapper>\n))\n\nexport default SupplyList\n","import React from 'react'\n\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nimport config from 'config'\n\n\nconst renderMarketOptions = () => Object\n  .values(config.MARKETSETUPS)\n  .map(setup => ( \n    <FormControlLabel\n      key={setup.id}\n      value={setup.id}\n      control={<Radio />}\n      label={setup.name}\n    />\n  ))\n\nconst MarketOptions = React.memo(({ marketSetupId, changeHandler }) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={changeHandler}\n  >\n    { renderMarketOptions() }\n  </RadioGroup>\n))\n\nexport default MarketOptions\n","import React, { useState } from 'react'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useSelectedSets from 'hooks/useSelectedSets'\nimport useExpansionHandling from 'hooks/useExpansionHandling'\nimport config from 'config'\n\nimport AoeExpansionPanel from 'components/AoeExpansionPanel'\nimport AoeExpansionPanelSummary from 'components/AoeExpansionPanelSummary'\nimport ShuffleButton from 'components/ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  createEntityList\n} from '../helpers.js'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (availableCards, tileSetups, cardType) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createEntityList(availableCardsOfType, cardSlots)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nconst createSupply = (selectedSets, tileSetups) => {\n  const availableCards = getListOfAvailableEntity(selectedSets, \"cards\")\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\n// Component\nconst Supply = React.memo(({ classes }) => {\n  const { expanded, handleExpansion, setExpanded } = useExpansionHandling()\n\n  // Market setup handling\n  const [ marketSetup, setMarketSetup ] = useState(config.MARKETSETUPS['market1'])\n  const handleMarketSetup = (event) => {\n    setMarketSetup(config.MARKETSETUPS[event.target.value])\n    setExpanded(false)\n  }\n\n  // Set handling\n  const { selectedSets, noSelectedSetsComponent } = useSelectedSets()\n  const emptySlotList = () => createSlotList(9)\n  const [cards, setCards] = useState(emptySlotList)\n\n  if (noSelectedSetsComponent) {\n    return noSelectedSetsComponent\n  }\n\n  const handleShuffle = () => {\n    const { gems, relics, spells } = createSupply(selectedSets, marketSetup.tiles)\n    setCards([...gems, ...relics, ...spells])\n  }\n\n  return (\n    <React.Fragment>\n      <AoeExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <AoeExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </AoeExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            changeHandler={handleMarketSetup}\n          />\n        </ExpansionPanelDetails>\n      </AoeExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(supplyStyles)(Supply)\n","const settingStyles = (theme) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nconst ConfiguredSet = React.memo(({\n  set,\n  configurationOfSets,\n  handleChange\n}) => (\n  <FormControlLabel\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={set}\n  />\n))\n\nexport default ConfiguredSet\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport ConfiguredSet from './ConfiguredSet'\n\n\nconst renderConfiguredSets = (configurationOfSets, sets, handleChange) => sets.map(set => (\n  <ConfiguredSet\n    key={set}\n    set={set}\n    configurationOfSets={configurationOfSets} \n    handleChange={handleChange}\n  />\n))\n\nconst ActiveSets = React.memo(({\n  allSetsSelected,\n  handleSelectAll,\n  sets,\n  configurationOfSets,\n  handleChange\n}) => (\n  <FormControl component=\"fieldset\">\n    <FormLabel component=\"legend\">Select active sets</FormLabel>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={allSetsSelected}\n          onChange={handleSelectAll}\n          value={ allSetsSelected\n            ? \"Deselect All\"\n            : \"Select All\"\n          }\n        />\n      }\n      label={ allSetsSelected\n        ? \"Deselect All\"\n        : \"Select All\"\n      }\n    />\n    <FormGroup>\n      {\n        renderConfiguredSets(configurationOfSets, sets, handleChange)\n      }\n    </FormGroup>\n  </FormControl>\n))\n\nexport default ActiveSets\n","import React, { useContext } from 'react'\n\nimport { set as setToDb } from 'idb-keyval'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport AoeExpansionPanel from 'components/AoeExpansionPanel'\nimport AoeExpansionPanelSummary from 'components/AoeExpansionPanelSummary'\n\nimport useExpansionHandling from 'hooks/useExpansionHandling'\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = React.memo(({ classes }) => {\n  const { expanded, handleExpansion } = useExpansionHandling()\n\n  // Sets\n  const { configurationOfSets, sets, setSets } = useContext(SetConfigurationContext)\n  const handleChange = (set) => {\n    const newSets = { ...configurationOfSets, [set]: !configurationOfSets[set] }\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  const allSetsSelected = Object.values(configurationOfSets).every(val => val === true)\n  const handleSelectAll = () => {\n    const newSets = sets.reduce((acc, set) => {\n      return { ...acc, [set]: !allSetsSelected }\n    }, {})\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  return (\n    <AoeExpansionPanel expanded={expanded === 'sets'} onChange={handleExpansion('sets')}>\n      <AoeExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Configured Sets</Typography>\n      </AoeExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets\n          allSetsSelected={allSetsSelected}\n          handleSelectAll={handleSelectAll}\n          sets={sets}\n          configurationOfSets={configurationOfSets}\n          handleChange={handleChange}\n        />\n      </ExpansionPanelDetails>\n    </AoeExpansionPanel>\n  )\n})\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst DiscardTableCell = withStyles({\n    root: {\n        padding: '4px'\n    }\n})(TableCell)\n\nexport default DiscardTableCell","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport TurnOrderTableCell from './TurnOrderTableCell'\n\nconst TurnOrderTableRow = React.memo(({\n  card,\n  handlers\n}) => (\n  <TableRow>\n    <TurnOrderTableCell>\n      <Typography component='p'>{card.name}</Typography>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"center\">\n      <IconButton\n        aria-label=\"Add to top\" \n        title=\"Add to top\" \n        onClick={() => handlers.addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"center\">\n      <IconButton \n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => handlers.addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"center\">\n      <IconButton \n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => handlers.shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n  </TableRow>\n))\n\nexport default TurnOrderTableRow\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n\nimport TurnOrderTableRow from './TurnOrderTableRow'\n\nconst renderTableRows = (cards, handlers) => cards.map((card, i) => (\n  <TurnOrderTableRow \n    key={i}\n    card={card}\n    handlers={handlers}\n  />\n))\n\nconst TurnOrderTable = React.memo(({ cards, handlers }) => (\n <Table>\n   <TableBody>\n     { renderTableRows(cards, handlers) }\n   </TableBody>\n </Table>\n))\n\nexport default TurnOrderTable\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport ShuffleButton from 'components/ShuffleButton.jsx'\n\nimport TurnOrderTable from './TurnOrderTable'\n\nconst ActiveTurnOrder = React.memo(({\n  deckIsEmpty,\n  discard,\n  handlers\n}) => (\n  <React.Fragment>\n    {\n      deckIsEmpty\n        ? (<Button color='secondary' onClick={handlers.startNewRound}>New Round</Button>)\n        : (\n          <Button\n            color='secondary' \n            onClick={handlers.drawTurnOrderCard}\n          >\n            Draw a card\n          </Button>\n        )\n    }\n\n    <TurnOrderTable\n      cards={discard}\n      handlers={handlers}\n    />\n\n  <ShuffleButton \n    color='primary'\n    variant='extended'\n    onClick={handlers.handleResetGame}\n  >\n        Reset Game\n    </ShuffleButton>\n  </React.Fragment>\n))\n\nexport default ActiveTurnOrder\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport ShuffleButton from 'components/ShuffleButton.jsx'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\n\nimport AoeExpansionPanel from 'components/AoeExpansionPanel'\nimport AoeExpansionPanelSummary from 'components/AoeExpansionPanelSummary'\n\nimport useExpansionHandling from 'hooks/useExpansionHandling'\nimport config from 'config'\n\nconst renderSetupOptions = () => Object.values(config.TURNORDERSETUPS).map(setup => (\n  <FormControlLabel\n    key={setup.id}\n    value={setup.id}\n    control={<Radio />}\n    label={setup.name} />\n))\n\nconst renderTurnOrderSetups = (turnOrderSetup) => turnOrderSetup\n  .turnOrderCards\n  .map(\n    (card, i) => (\n      <Typography component='p' key={i}>\n        {card.name}\n      </Typography>\n    )\n  )\n\nconst TurnOrderSetup = React.memo(({\n  turnOrderSetup,\n  startGame,\n  chooseSetup\n}) => {\n  const { expanded, handleExpansion, setExpanded } = useExpansionHandling()\n  const handleSetupChange = (event) => {\n    chooseSetup(event)\n    setExpanded(false)\n  }\n\n  return (\n    <React.Fragment>\n      <AoeExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <AoeExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{turnOrderSetup.name}</Typography>\n        </AoeExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <RadioGroup\n            aria-label='Players'\n            name='turnOrderOptions'\n            value={turnOrderSetup.id}\n            onChange={handleSetupChange}>\n            {renderSetupOptions()}\n          </RadioGroup>\n        </ExpansionPanelDetails>\n      </AoeExpansionPanel>\n      { renderTurnOrderSetups(turnOrderSetup) }\n      <ShuffleButton color='primary' variant='extended' onClick={startGame}>\n        Start Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default TurnOrderSetup\n","import { useState, useEffect } from 'react'\n\nimport {\n  get as getFromDb,\n  set as setToDb\n} from 'idb-keyval'\n\nimport config from 'config'\n\nimport {\n  createEntityList\n} from '../helpers'\n\n\nconst shuffleDeck = (deck) => {\n  return createEntityList(deck, deck)\n}\n\nexport const useTurnOrderSetup = () => {\n  const [turnOrderSetup, setTurnOrderSetup] = useState(\n    config.TURNORDERSETUPS['onePlayerThreeToc']\n  )\n  const handleTurnOrderSetupChange = (event) => {\n    const setup = config.TURNORDERSETUPS[event.target.value]\n    setTurnOrderSetup(setup)\n    setToDb('turnOrderSetup', setup)\n  }\n\n  useEffect(() => {\n    getFromDb('turnOrderSetup').then(setup => {\n      if (setup !== undefined) {\n        setTurnOrderSetup(setup)\n      }\n    })\n  }, [])\n\n  return {\n    turnOrderSetup,\n    handleTurnOrderSetupChange\n  }\n}\n\nexport const useGameState = (turnOrderSetup) => {\n  const TURNORDERSTATE = 'turnOrderState'\n\n  const [turnOrderState, setTurnOrderState] = useState({\n    deck: [],\n    discard: []\n  })\n\n  const [gameState, setGameState] = useState({\n    started: false\n  })\n\n  const drawTurnOrderCard = () => {\n    const { deck } = turnOrderState\n\n    if(deck.length === 0) return\n\n    const cardDrawn = deck[deck.length - 1];\n\n    const newState = {\n      deck: deck.filter(card => card.id !== cardDrawn.id),\n      discard: [cardDrawn, ...turnOrderState.discard ]\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const startNewRound = () => {\n    const newState = {\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards),\n      discard: []\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToTop = (cardId) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    const newState = {\n      deck: [...turnOrderState.deck, cardToAdd],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToBottom = (cardId) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    const newState = {\n      deck: [cardToAdd, ...turnOrderState.deck],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const shuffleIntoDeck = (cardId) => {\n    const cardToShuffle = turnOrderState.discard.find(card => card.id === cardId)\n    const newDeck = [...turnOrderState.deck, cardToShuffle]\n    const shuffledDeck = shuffleDeck(newDeck)\n\n    const newState = {\n      deck: shuffledDeck,\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  // Game state handling\n  const handleStartGame = () => {\n    const gameState = { started: true }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = {\n      ...turnOrderState,\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards)\n    }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  const handleResetGame = () => {\n    const gameState = { stated: false }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = { ...turnOrderState, discard: [] }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  useEffect(() => {\n    getFromDb(TURNORDERSTATE).then(state => {\n      const isValidState = (\n        state !== undefined &&\n        state.turnOrderState &&\n        state.turnOrderState.deck &&\n        state.turnOrderState.discard\n      )\n      if (isValidState) {\n        setGameState(state.gameState)\n        setTurnOrderState(state.turnOrderState)\n      }\n    })\n  }, [])\n\n  return {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  }\n}\n","import React from 'react'\n\nimport ActiveTurnOrder from './ActiveTurnOrder'\nimport TurnOrderSetup from './TurnOrderSetup'\nimport {\n  useTurnOrderSetup,\n  useGameState\n} from './hooks'\n\n\nconst TurnOrder = React.memo(() => {\n  const { turnOrderSetup, handleTurnOrderSetupChange } = useTurnOrderSetup()\n\n  const {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  } = useGameState(turnOrderSetup)\n\n  return (\n    <React.Fragment>\n      {gameState.started\n          ? (\n            <ActiveTurnOrder\n              deckIsEmpty={turnOrderState.deck.length === 0}\n              discard={turnOrderState.discard}\n              handlers={{\n                addToBottom,\n                addToTop,\n                drawTurnOrderCard,\n                handleResetGame,\n                shuffleIntoDeck,\n                startNewRound\n              }}\n            />\n          )\n          : (\n            <TurnOrderSetup\n              turnOrderSetup={turnOrderSetup}\n              startGame={handleStartGame}\n              chooseSetup={handleTurnOrderSetupChange}\n            />\n          )}\n    </React.Fragment>\n  )\n})\n\nexport default TurnOrder\n","import React from 'react'\n\nimport Nemeses from 'components/pages/Nemeses'\nimport Mages from 'components/pages/Mages'\nimport Supply from 'components/pages/Supply'\nimport Settings from 'components/pages/Settings'\nimport TurnOrder from 'components/pages/TurnOrder'\n\nimport { ROUTES } from 'routes'\n\n\nconst Content = React.memo(({ classes, route, ...rest }) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      {\n        [ROUTES.nemeses]: <Nemeses />,\n        [ROUTES.mages]: <Mages />,\n        [ROUTES.supply]: <Supply />,\n        [ROUTES.turnOrder]: <TurnOrder />,\n        [ROUTES.settings]: <Settings />\n      }[route]\n    }\n  </div>\n))\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = React.memo(({ classes, drawerIsOpen, currentLocation, toggleDrawer }) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n))\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = React.memo(({ route, clickhandler, children }) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n))\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes.js'\nimport RouteItem from './RouteItem.jsx'\n\nconst Routes = React.memo(({ locationhandler }) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n))\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport Routes from 'components/Routes.jsx'\n\n\nconst DrawerMenu = React.memo(({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography className={classes.appInfo}>\n      Version: {process.env.REACT_APP_VERSION}\n      <Link href=\"https://github.com/on3iro/aeons-end-randomizer\" color=\"inherit\" className={classes.githubLink} target=\"_blank\">\n        <img src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" className={classes.githubLogo} />Github\n      </Link>\n    </Typography>\n  </Drawer>\n))\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react';\n\nimport { get as getFromDb } from 'idb-keyval'\n\nimport classNames from 'classnames'\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles.js'\nimport { ROUTES } from 'routes.js'\nimport config from 'config'\nimport { SetConfigurationContext } from 'globalContexts'\n\nimport Content from 'components/Content.jsx'\n\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\n\nconst App = ({ classes, theme }) => {\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const defaultSets = config.DATA.sets.reduce(\n    (acc, set) => ({ ...acc, [set]: false }) , {}\n  )\n  const [ configurationOfSets, setSets ] = useState(defaultSets)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    getFromDb('sets').then(sets => {\n      if (sets !== undefined) {\n        setSets(sets)\n      }\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <SetConfigurationContext.Provider value={{ configurationOfSets, setSets, sets: config.DATA.sets }}>\n        <Content\n          route={currentLocation}\n          classes={classes}\n          className={classNames(classes.content, {\n            [classes.contentShift]: drawerIsOpen,\n          })}\n        />\n      </SetConfigurationContext.Provider>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(App)\n","const drawerWidth = 240;\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    paddingBottom: 72\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  appInfo: {\n    margin: theme.spacing.unit * 2\n  },\n  githubLink: {\n    display: 'block',\n    lineHeight: '24px',\n    marginTop: theme.spacing.unit * 2\n  },\n  githubLogo: {\n    width: '24px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing.unit\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}