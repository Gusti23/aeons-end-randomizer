{"version":3,"sources":["serviceWorker.js","components/App/UpdateScreen.tsx","Redux/Store/Settings/Expansions/Selected.ts","config/aeonsData.ts","config/turnOrderSetups.ts","config/index.ts","config/marketSetups.ts","Redux/Store/TurnOrder/ActiveGame/index.ts","Redux/Store/MainContentLoading/index.ts","types.ts","Redux/helpers.ts","Redux/Store/TurnOrder/Configuration/index.ts","Redux/Store/Nemesis/index.ts","routes.ts","Redux/Store/Mages/Count/index.ts","components/ShuffleButton.tsx","components/NoSelectedExpansions.tsx","components/pages/Nemeses/nemesesStyles.ts","components/pages/Nemeses/index.tsx","Redux/Store/Mages/Recruited/index.ts","Redux/Store/Supply/Selection/index.ts","components/pages/Mages/MageCountPicker.tsx","components/pages/Mages/MageGridWrapper.tsx","components/pages/Mages/MageCard.tsx","components/pages/Mages/mageStyles.tsx","components/pages/Mages/MageList.tsx","components/pages/Mages/EmptyMageListHint.tsx","components/pages/Mages/index.tsx","Redux/Store/Supply/RandomSetup/index.ts","Redux/Store/Supply/RandomSetup/helpers.ts","Redux/Store/Settings/SupplySetups/index.ts","hooks/useExpansionHandling.tsx","components/StyledExpansionPanel.tsx","components/StyledExpansionPanelSummary.tsx","components/pages/Supply/supplyStyles.ts","components/pages/Supply/ListWrapper.tsx","components/pages/Supply/CardTypeIcon.tsx","components/pages/Supply/MarketTile.tsx","components/pages/Supply/SupplyList.tsx","components/pages/Supply/MarketOptions.tsx","components/pages/Supply/index.tsx","components/pages/Settings/settingStyles.ts","Redux/Store/Settings/Expansions/index.ts","components/pages/Settings/ConfiguredSet.tsx","components/pages/Settings/CheckboxList.tsx","components/pages/Settings/ActiveSets.tsx","components/pages/Settings/index.tsx","components/pages/TurnOrder/TableCell.tsx","components/pages/TurnOrder/TableRow.tsx","components/pages/TurnOrder/styles.ts","components/pages/TurnOrder/DiscardTable.tsx","components/pages/TurnOrder/ActiveGame.tsx","components/pages/TurnOrder/CardNameDisplay.tsx","components/pages/TurnOrder/ModeSelection.tsx","components/pages/TurnOrder/SetupSelection.tsx","components/pages/TurnOrder/TurnOrderConfiguration.tsx","components/pages/TurnOrder/index.tsx","components/Content.tsx","components/App/TopBar.tsx","components/RouteItem.tsx","components/Routes.tsx","components/App/DrawerMenu.tsx","components/App/MainApp.tsx","components/App/index.tsx","components/App/appStyles.ts","Redux/Store/Settings/index.ts","Redux/Store/Mages/index.ts","Redux/Store/Supply/index.ts","Redux/Store/TurnOrder/index.ts","Redux/Store/index.ts","index.tsx","Redux/configureStore.ts"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ActionTypes","Wrapper","styled","withConfig","displayName","componentId","ButtonWrapper","StyledHeadline","Typography","StyledCard","Card","UpdateScreen","React","memo","_ref","newVersion","react_default","a","createElement","CardContent_default","variant","component","Typography_default","paragraph","Link_default","target","Button_default","onClick","color","className","DATA","WE","id","name","type","nemeses","expansion","mages","cards","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","p-1","p-2","p-3","p-4","p-5","TURNORDERCARDS","player1-1","cssClass","player1-2","player1-3","player1-4","player2-1","player2-2","player3-1","player4-1","wild","nemesis-1","nemesis-2","maelstrom","TURNORDERSETUPS","onePlayerThreeToc","turnOrderCards","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","DEFAULTSUPPLYCOUNT","EXPANSIONS","Object","keys","MARKETSETUPS","market1Inc","active","tiles","operation","threshold","market1","market2","market3","values","market4","market5","market6","random","default","initialState","reduce","acc","set","objectSpread","defineProperty","actions","toggleAll","createAction","TOGGLE_ALL","toggleExpansion","TOGGLE_EXPANSION","setToDB","SET_TO_DB","setToDBSuccessful","SET_TO_DB_SUCCESS","setToDBFailed","SET_TO_DB_FAILURE","fetchFromDB","FETCH_FROM_DB","fetchFromDBSuccessful","FETCH_FROM_DB_SUCCESS","fetchFromDBFailed","FETCH_FROM_DB_FAILURE","allSetsAreSelected","every","val","getSelectedExpansions","Settings","Expansions","Selected","selectors","getSelectedExpansionsArray","createSelector","selectedExpansions","filter","key","getAllSetsSelected","getHasStandaloneSet","some","MainContentLoading","isCard","card","undefined","MODES","_len","arguments","length","args","Array","_key","tuple","createSlotList","amount","from","getListOfAvailableEntity","selectedSets","entity","toConsumableArray","shuffleDeck","deck","availableCards","slots","getEntity","getRandomEntity","slot","i","result","availableEntities","Math","floor","newStateWithDBWrite","newState","loop","Cmd","run","setToDb","successActionCreator","setTurnOrderToDbSuccess","failActionCreator","setTurnOrderToDbFailure","discard","started","noOp","init","INIT","draw","DRAW","newRound","NEW_ROUND","addToTop","cardId","ADD_TO_TOP","addToBottom","ADD_TO_BOTTOM","shuffleIntoDeck","SHUFFLE_INTO_DECK","SET_TURNORDER_TO_DB_SUCCESS","SET_TURNORDER_TO_DB_FAILURE","startGame","START_GAME","resetGame","RESET_GAME","TurnOrder","ActiveGame","Mode","SelectedSetup","setMode","mode","SET_MODE","selectSetup","setupId","SELECT_SETUP","getMode","Configuration","getSelectedSetup","getConfiguration","selectedSetup","setup","map","adjustSetup","getAvailableCards","ROUTES","setRandomNemesis","expansions","SET_RANDOM","Nemesis","ShuffleButton","withStyles","root","position","bottom","right","zIndex","Fab","NoSelectedExpansions","nemesesStyles","theme","createStyles","cardContent","cardIcon","fontSize","opacity","Nemeses","classes","hasStandaloneExpansionSelected","nemesis","Fragment","Card_default","components_ShuffleButton","components_NoSelectedExpansions","mapDispatchToProps","connect","SelectedExpansions","setCount","count","SET","Mages","Count","setRandomMages","Recruited","MageCountPicker","selectedValue","handleAmountChange","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","MageCard","mage","Grid_default","item","xs","md","mageStyles","MageList","Mages_MageGridWrapper","container","spacing","Mages_MageCard","EmptyMageListHint","marginTop","mageCount","setMageCount","setMages","noMagesGeneratedYet","Mages_MageCountPicker","toString","e","parseInt","currentTarget","Mages_EmptyMageListHint","Mages_MageList","MageCount","RecruitedMages","Supply","Selection","getRandomCardsByType","tileSetups","cardType","cardSlots","blueprints","blueprint","filteredByCost","setupBlueprint","filterByCost","createCardList","_ref2","Cards","resetMarket","RESET","createMarket","CREATE","RandomSetup","useExpandedHandling","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","createExpansionHandler","panel","event","StyledExpansionPanel","borderRadius","&:before","display","margin","ExpansionPanel","StyledExpansionPanelSummary","minHeight","&$expanded","content","ExpansionPanelSummary","supplyStyles","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","minWidth","cardName","fontWeight","cardInfoListItem","padding","marginRight","infoText","gem","background","relic","spell","gemIcon","relicIcon","spellIcon","ListWrapper","CardTypeIcon","typeClass","MarketTile","tileSetup","rest","objectWithoutProperties","assign","toLowerCase","title","join","thresholdValue","getOperationString","List_default","ListItem_default","Supply_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","Predefined","Custom","getPredefined","SupplySetups","getCustom","getCustomAndPredefined","predefined","custom","getActiveSetups","customAndPredefined","MarketOptions","activeMarketSetups","allMarketSetups","expansionHandler","marketSetupId","renderMarketOptions","SupplySelection","_useExpandedHandling","components_StyledExpansionPanel","components_StyledExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","RandomSupply","settingStyles","Reducer","combineReducers","action","allSetsSelected","payload","getFromDb","getExpansionNamesByType","getStandaloneExpansions","sort","getMiniExpansions","getPromos","b","promoA","promoB","ConfiguredSet","configurationOfSets","handleChange","Checkbox_default","checked","CheckboxList","setConfig","changeHandler","FormGroup_default","style","marginBottom","Settings_ConfiguredSet","ActiveSets","handleSelectAll","standalones","miniExpansions","promos","Settings_CheckboxList","_useExpansionHandling","useExpansionHandling","Settings_ActiveSets","TableCell","&:first-child","paddingLeft","&:last-child","paddingRight","MuiTableCell","TableRow","TableRow_default","cardRow","TurnOrder_TableCell","align","IconButton_default","index_es","TurnOrderGame","turnOrderStyles","cardDeck","cardTable","borderCollapse","borderBottom","& *","player1","& td","borderColor","player2","player3","player4","DiscardTable","Table_default","TableBody_default","TurnOrder_TableRow","renderTableRows","styles","ActiveTurnOrder","drawCard","size","TurnOrder_DiscardTable","TurnOrderConfig","CardNameDisplay","turnOrderSetup","gutterBottom","renderCardNames","ModeSelection","TurnOrderConfiguration","SetupSelection","currentConfiguration","TurnOrder_SetupSelection","TurnOrder_ModeSelection","TurnOrder_CardNameDisplay","gameHasStarted","TurnOrder_TurnOrderConfiguration","Content","_ROUTES$nemeses$ROUTE","route","isLoading","drawerHeader","CircularProgress_default","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","ListItemText_default","primary","Routes","locationhandler","components_RouteItem","Build_default","width","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","appInfo","githubLink","src","alt","githubLogo","fetchExpansionsFromDB","fetchTurnOrderConfigFromDB","setCurrentLocation","_useState3","_useState4","setDrawerIsOpen","useEffect","App_TopBar","App_DrawerMenu","components_Content","contentShift","loading","createMuiTheme","blue","pink","useNextVariants","App","updateAvailable","updateInformation","setUpdateAvailable","axios","data","core_styles","CssBaseline_default","App_UpdateScreen","App_MainApp","height","paddingBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","alignItems","mixins","toolbar","justifyContent","flexGrow","unit","lineHeight","verticalAlign","textAlign","paddingTop","withTheme","_action$payload","availableMages","createMageList","_createSupply","gems","relics","spells","createSupply","activeGameActions","cardDrawn","cardToAdd","find","cardToShuffle","newDeck","shuffledDeck","RootReducer","availableNemeses","store","enhancers","applyMiddleware","apply","install","composeEnhancers","compose","enhancedCreateStore","createStore","configureStore","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.708ec4df.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nimport styled from 'styled-components/macro'\n\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport * as serviceWorker from '../../serviceWorker';\n\nconst Wrapper = styled('div')`\n  display: flex;\n  justify-content: center;\n  flex-flow: column nowrap;\n  width: 100%;\n`\n\nconst ButtonWrapper = styled('div')`\n  text-align: center;\n  width: 100%;\n\n  .update-button {\n    margin-top: 24px;\n  }\n`\n\nconst StyledHeadline = styled(Typography)`\n  padding-bottom: 16px;\n`\n\nconst StyledCard = styled(Card)`\n  width: auto;\n  max-width: 320px;\n  margin: 56px auto 0;\n  text-align: center;\n`\n\nconst UpdateScreen = React.memo(({ newVersion }: {\n  newVersion: string\n}) => {\n  return (\n    <Wrapper>\n      <StyledCard>\n        <CardContent>\n          <StyledHeadline variant=\"h6\" component=\"h1\">\n            New Version: { newVersion }\n          </StyledHeadline>\n          <Typography paragraph>\n            Good news, a new Version of Aeons End Randomizer is available :)\n          </Typography>\n          <Typography paragraph>\n            <Link href=\"https://github.com/on3iro/aeons-end-randomizer/releases\" target=\"_blank\">Changelog</Link>\n          </Typography>\n          <ButtonWrapper>\n            <Button\n              onClick={() => {\n                serviceWorker.register()\n                window.location.reload(true)\n              }}\n              variant=\"contained\"\n              color=\"secondary\"\n              className=\"update-button\"\n            >\n              Update Now!\n            </Button>\n          </ButtonWrapper>\n        </CardContent>\n      </StyledCard>\n    </Wrapper>\n  )\n})\n\nexport default UpdateScreen\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{ [key: string]: boolean }>\nexport const initialState: State = config.EXPANSIONS.reduce(\n  (acc, set) => ({ ...acc, [set]: false }) , {}\n)\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  TOGGLE_ALL = 'Settings/Expansions/SelectedExpansions/TOGGLE_ALL',\n  TOGGLE_EXPANSION = 'Settings/Expansions/SelectedExpansions/TOGGLE_EXPANSION',\n  SET_TO_DB = 'Settings/Expansions/SelectedExpansions/SET_TO_DB',\n  SET_TO_DB_SUCCESS ='Settings/Expansions/SelectedExpansions/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE ='Settings/Expansions/SelectedExpansions/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'Settings/Expansions/SelectedExpansions/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  toggleAll: () => createAction(ActionTypes.TOGGLE_ALL),\n  toggleExpansion: (expansion: string) => createAction(ActionTypes.TOGGLE_EXPANSION, expansion),\n  setToDB: (state: State) => createAction(ActionTypes.SET_TO_DB, state),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: (error: Object) => createAction(ActionTypes.SET_TO_DB_FAILURE, error),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) => createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: (error: Object) => createAction(ActionTypes.FETCH_FROM_DB_FAILURE, error),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nconst allSetsAreSelected = (state: State) => Object\n  .values(state)\n  .every(val => val === true)\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_ALL: {\n      const allSetsSelected = allSetsAreSelected(state)\n      const newState = config.EXPANSIONS\n        .reduce((acc, set) => ({ ...acc, [set]: !allSetsSelected }), {})\n\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: ['sets', newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.TOGGLE_EXPANSION: {\n      const newState = { ...state, [action.payload]: !state[action.payload] }\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: ['sets', newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>( getFromDb, {\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n          args: ['sets']\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedExpansions = (state: RootState) => state.Settings.Expansions.Selected\n\nconst getSelectedExpansionsArray = createSelector(\n  [ getSelectedExpansions ],\n  (selectedExpansions) => Object\n    .keys(selectedExpansions)\n    .filter(key => selectedExpansions[key])\n)\n\nconst getAllSetsSelected = createSelector(\n  [ getSelectedExpansions ],\n  (selectedExpansions) => allSetsAreSelected(selectedExpansions)\n)\n\nconst getHasStandaloneSet = createSelector(\n  [ getSelectedExpansions ],\n  (selectedExpansions) => Object\n    .keys(selectedExpansions)\n    .some(expansion => config.DATA[expansion].type === \"standalone\")\n)\n\nexport const selectors = {\n  getSelectedExpansions,\n  getSelectedExpansionsArray,\n  getAllSetsSelected,\n  getHasStandaloneSet,\n}\n","import { IExpansionData } from '../types'\n\nexport const DATA: IExpansionData = {\n  \"WE\": {\n    \"id\": \"WE\",\n    \"name\": \"War Eternal\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"id\": \"TV\",\n    \"name\": \"Void\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"id\": \"OD\",\n    \"name\": \"Outer Dark\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"id\": \"Nameless\",\n    \"name\": \"Nameless\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"id\": \"Legacy\",\n    \"name\": \"Legacy\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [ \n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Green\",\n        \"id\": \"LegacyGreen\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Yellow\",\n        \"id\": \"LegacyYellow\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Orange\",\n        \"id\": \"LegacyOrange\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy Blue\",\n        \"id\": \"LegacyBlue\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"id\": \"Depths\",\n    \"name\": \"Depths\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"id\": \"BS\",\n    \"name\": \"Buried Secrets\",\n    \"type\": \"mini\",\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"id\": \"AE\",\n    \"name\": \"Aeons End\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Rageborne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  },\n  \"p-1\": {\n    \"id\": \"p-1\",\n    \"name\": \"Drown in Flames\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-1\",\n        \"name\": \"Drown in Flames\",\n        \"id\": \"DrownInFlames\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"p-2\": {\n    \"id\": \"p-2\",\n    \"name\": \"Fleeting Vision\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-2\",\n        \"name\": \"Fleeting Vision\",\n        \"id\": \"FleetingVision\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"p-3\": {\n    \"id\": \"p-3\",\n    \"name\": \"Splinter Missile\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-3\",\n        \"name\": \"Splinter Missile\",\n        \"id\": \"SplinterMissile\",\n        \"cost\": 5\n      }\n    ]\n  },\n  \"p-4\": {\n    \"id\": \"p-4\",\n    \"name\": \"Echo Stone\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"p-4\",\n        \"name\": \"Echo Stone\",\n        \"id\": \"EchoStone\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"p-5\": {\n    \"id\": \"p-5\",\n    \"name\": \"Thieving Spirit\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-5\",\n        \"name\": \"Thieving Spirit\",\n        \"id\": \"ThievingSpirit\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","import { ITurnOrderSetups, ITurnOrderCard } from '../types'\n\nexport const TURNORDERCARDS: {[key: string]: ITurnOrderCard} = {\n  \"player1-1\": {id:\"player1-1\", name: 'Player 1', cssClass: 'player1'},\n  \"player1-2\": {id:\"player1-2\", name: 'Player 1', cssClass: 'player1'},\n  \"player1-3\": {id:\"player1-3\", name: 'Player 1', cssClass: 'player1'},\n  \"player1-4\": {id:\"player1-4\", name: 'Player 1', cssClass: 'player1'},\n\n  \"player2-1\": {id:\"player2-1\", name: 'Player 2', cssClass: 'player2'},\n  \"player2-2\": {id:\"player2-2\", name: 'Player 2', cssClass: 'player2'},\n\n  \"player3-1\": {id:\"player3-1\", name: 'Player 3', cssClass: 'player3'},\n  \"player4-1\": {id:\"player4-1\", name: 'Player 4', cssClass: 'player4'},\n\n  \"wild\": {id:\"wild\", name: 'Wild', cssClass: 'wild'},\n\n  \"nemesis-1\": {id:\"nemesis-1\", name: 'Nemesis', cssClass: 'nemesis'},\n  \"nemesis-2\": {id:\"nemesis-2\", name: 'Nemesis', cssClass: 'nemesis'},\n\n  \"maelstrom\": {id:\"maelstrom\", name: 'Maelstrom Assault', cssClass: 'maelstrom'},\n}\n\nexport const TURNORDERSETUPS: ITurnOrderSetups = {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player (3 toc)',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player1-2\"],\n      TURNORDERCARDS[\"player1-3\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player (4 toc)',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player1-2\"],\n      TURNORDERCARDS[\"player1-3\"],\n      TURNORDERCARDS[\"player1-4\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player1-2\"],\n      TURNORDERCARDS[\"player2-1\"],\n      TURNORDERCARDS[\"player2-2\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player2-1\"],\n      TURNORDERCARDS[\"player3-1\"],\n      TURNORDERCARDS[\"wild\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      TURNORDERCARDS[\"player1-1\"],\n      TURNORDERCARDS[\"player2-1\"],\n      TURNORDERCARDS[\"player3-1\"],\n      TURNORDERCARDS[\"player4-1\"],\n      TURNORDERCARDS[\"nemesis-1\"],\n      TURNORDERCARDS[\"nemesis-2\"],\n    ]\n  }\n}\n","import { DATA } from './aeonsData'\nimport { MARKETSETUPS } from './marketSetups'\nimport { TURNORDERSETUPS, TURNORDERCARDS } from './turnOrderSetups'\n\nconst EXPANSIONS = Object.keys(DATA)\nconst DEFAULTSUPPLYCOUNT = 9\n\nexport default {\n  DATA,\n  DEFAULTSUPPLYCOUNT,\n  EXPANSIONS,\n  MARKETSETUPS,\n  TURNORDERSETUPS,\n  TURNORDERCARDS,\n}\n","import { IMarketSetups } from '../types'\n\nexport const MARKETSETUPS: IMarketSetups = {\n  \"market1Inc\": {\n    id: \"market1Inc\",\n    name: \"Market Setup 1 (inclusive)\",\n    type: \"custom\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<=\", threshold: 5 },\n      { type: \"Spell\", operation: \"<=\", threshold: 5 },\n      { type: \"Spell\", operation: \">=\", threshold: 5 },\n      { type: \"Spell\", operation: \">=\", threshold: 5 },\n    ]\n  },\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    type: \"official\",\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    type: \"official\",\n    default: true, // this flag removes the setup from the settings, so it will always be active\n    active: true,\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  }\n}\n\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport { RootState } from '../../'\nimport { ITurnOrderCard } from '../../../../types'\nimport { shuffleDeck } from '../../../helpers'\n\n\nexport const TURNORDER_GAME_DB_KEY = 'turnOrderGameState'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst newStateWithDBWrite = (newState: State) => {\n  return loop(\n    newState,\n    Cmd.run<Action>( setToDb, {\n      args: [TURNORDER_GAME_DB_KEY, newState],\n      successActionCreator: actions.setTurnOrderToDbSuccess,\n      failActionCreator: actions.setTurnOrderToDbFailure,\n    })\n  )\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  deck: Array<ITurnOrderCard>,\n  discard: Array<ITurnOrderCard>,\n  started: boolean\n}\nexport const initialState: State = {\n  deck: [],\n  discard: [],\n  started: false,\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  INIT = 'TurnOrder/ActiveGame/INIT',\n  DRAW = 'TurnOrder/ActiveGame/DRAW',\n  NEW_ROUND = 'TurnOrder/ActiveGame/NEW_ROUND',\n  ADD_TO_TOP = 'TurnOrder/ActiveGame/ADD_TO_TOP',\n  ADD_TO_BOTTOM = 'TurnOrder/ActiveGame/ADD_TO_BOTTOM',\n  SHUFFLE_INTO_DECK = 'TurnOrder/ActiveGame/SHUFFLE_INTO_DECK',\n  SET_TURNORDER_TO_DB_SUCCESS = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_SUCCESS',\n  SET_TURNORDER_TO_DB_FAILURE = 'TurnOrder/ActiveGame/SET_TURNORDER_TO_DB_FAILURE',\n  START_GAME = 'TurnOrder/ActiveGame/START_GAME',\n  RESET_GAME = 'TurnOrder/ActiveGame/RESET_GAME',\n  FETCH_FROM_DB = 'TurnOrder/ActiveGame/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/ActiveGame/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/ActiveGame/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction(\"NOOP\"),\n  init: (state: State) => createAction(ActionTypes.INIT, state),\n  draw: () => createAction(ActionTypes.DRAW),\n  newRound: (turnOrderCards: ITurnOrderCard[]) =>\n    createAction(ActionTypes.NEW_ROUND, turnOrderCards),\n  addToTop: (cardId: string) => createAction(ActionTypes.ADD_TO_TOP, cardId),\n  addToBottom: (cardId: string) => createAction(ActionTypes.ADD_TO_BOTTOM, cardId),\n  shuffleIntoDeck: (cardId: string) => createAction(ActionTypes.SHUFFLE_INTO_DECK, cardId),\n  setTurnOrderToDbSuccess: () => createAction(ActionTypes.SET_TURNORDER_TO_DB_SUCCESS),\n  setTurnOrderToDbFailure: () => createAction(ActionTypes.SET_TURNORDER_TO_DB_FAILURE),\n  startGame: (turnOrderCards: ITurnOrderCard[]) => createAction(ActionTypes.START_GAME, turnOrderCards),\n  resetGame: () => createAction(ActionTypes.RESET_GAME),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) => createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.INIT: {\n      return action.payload\n    }\n\n    case ActionTypes.DRAW: {\n      const { deck } = state\n\n      if(deck.length === 0) return state\n\n      const cardDrawn = deck[deck.length - 1];\n\n      const newState = {\n        ...state,\n        deck: deck.filter(card => card.id !== cardDrawn.id),\n        discard: [cardDrawn, ...state.discard ]\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.NEW_ROUND: {\n      const newState = {\n        ...state,\n        deck: shuffleDeck(action.payload),\n        discard: []\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_TOP: {\n      const cardId = action.payload\n      const cardToAdd = state\n        .discard\n        .find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [...state.deck, cardToAdd],\n        discard: state\n          .discard\n          .filter(card => card.id !== cardId)\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.ADD_TO_BOTTOM: {\n      const cardId = action.payload\n      const cardToAdd = state\n        .discard\n        .find(card => card.id === cardId)\n\n      if (!cardToAdd) return state\n\n      const newState = {\n        ...state,\n        deck: [cardToAdd, ...state.deck],\n        discard: state\n          .discard\n          .filter(card => card.id !== cardId)\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.SHUFFLE_INTO_DECK: {\n      const cardId = action.payload\n      const cardToShuffle = state\n        .discard\n        .find(card => card.id === cardId)\n\n      if (!cardToShuffle) return state\n\n      const newDeck = [...state.deck, cardToShuffle]\n      const shuffledDeck = shuffleDeck(newDeck)\n\n      const newState = {\n        ...state,\n        deck: shuffledDeck,\n        discard: state\n          .discard\n          .filter(card => card.id !== cardId)\n      }\n\n      return newStateWithDBWrite(newState)\n    }\n\n    case ActionTypes.START_GAME: {\n      return newStateWithDBWrite({\n        started: true,\n        deck: shuffleDeck(action.payload),\n        discard: [],\n      })\n    }\n\n    case ActionTypes.RESET_GAME: {\n      return newStateWithDBWrite({\n        started: false,\n        deck: [],\n        discard: [],\n      })\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>( getFromDb, {\n          args: [TURNORDER_GAME_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getDeck = (state: RootState) => state.TurnOrder.ActiveGame.deck\nconst getDiscard = (state: RootState) => state.TurnOrder.ActiveGame.discard\nconst getHasStarted = (state: RootState) => state.TurnOrder.ActiveGame.started\n\nexport const selectors = {\n  getDeck,\n  getDiscard,\n  getHasStarted,\n}\n","import { combineReducers } from 'redux-loop'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport { RootState } from '../'\nimport * as SelectedExpansions from '../Settings/Expansions/Selected'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<boolean>\nexport const initialState = false\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = SelectedExpansions.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB: {\n      return true\n    }\n\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_SUCCESS:\n    case SelectedExpansions.ActionTypes.FETCH_FROM_DB_FAILURE: {\n      return false\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getIsLoading = (state: RootState) => state.MainContentLoading\n\nexport const selectors = {\n  getIsLoading\n}\n","//////////\n// UTIL //\n//////////\n\ntype List = string | number | boolean | undefined | null | void | {};\nexport const tuple = <T extends List[]>(...args: T) => args;\n\n//////////\n// DATA //\n//////////\n\nexport interface ICreature {\n  expansion: string;\n  name: string;\n  id: string;\n}\n\nexport type CardType = \"Gem\" | \"Relic\" | \"Spell\" | \"EMPTY\"\n\nexport interface ICard {\n  type: CardType;\n  expansion: string;\n  name: string;\n  id: string;\n  cost: number;\n}\n\nexport type ExpansionType = \"standalone\" | \"mini\" | \"promo\"\n\nexport type EntityType = \"nemeses\" | \"mages\" | \"cards\"\nexport type Entity = ICard | ICreature\n\nexport interface IExpansion {\n  id: string;\n  name: string;\n  type: ExpansionType;\n  nemeses: Array<ICreature>;\n  mages: Array<ICreature>;\n  cards: Array<ICard>;\n}\n\nexport interface IExpansionData {\n  [key: string]: IExpansion;\n}\n\n////////////\n// Market //\n////////////\n\nexport type MarketType = \"official\" | \"custom\"\nexport type Operation =\n  \"<\"\n  | \">\"\n  | \"=\"\n  | \"<=\"\n  | \">=\"\n  | \"ANY\"\n  | \"OR\"\n  | \"NoOp\"\n\nexport interface IBluePrint {\n  type: CardType;\n  operation: Operation;\n  threshold?: number;\n  values?: Array<number>;\n}\n\nexport interface IEmptyBluePrint extends IBluePrint {\n  type: \"EMPTY\";\n  operation: \"NoOp\";\n}\nexport type Slot = IBluePrint | IEmptyBluePrint\n\nexport type IMarketSetup = Readonly<{\n  id: string;\n  name: string;\n  type: MarketType;\n  default?: boolean;\n  active: boolean;\n  tiles: Array<Slot>;\n}>\n\nexport type IMarketSetups = Readonly<{ [key: string]: IMarketSetup }>\n\n///////////////\n// TurnOrder //\n///////////////\n\nexport type Player =\n  \"Player 1\"\n  | \"Player 2\"\n  | \"Player 3\"\n  | \"Player 4\"\n  | \"Nemesis\"\n  | \"Wild\"\n  | \"Maelstrom Assault\"\n\nexport interface ITurnOrderCard {\n  id: string;\n  name: Player;\n  cssClass: string;\n}\n\nexport interface ITurnOrderSetup {\n  id: string;\n  name: string;\n  turnOrderCards: Array<ITurnOrderCard>\n}\n\nexport interface ITurnOrderSetups {\n  [key: string]: ITurnOrderSetup\n}\n\nexport const isCard = (card: ICard | Slot): card is ICard => {\n  return (<ICard>card).name !== undefined\n}\n\nexport const MODES = tuple(\"Default\", \"Maelstrom\")\nexport type Mode = typeof MODES[number] // automatically creates union from tuple\n","import config from '../config'\nimport * as types from '../types'\n\n\nexport const createSlotList = (amount: number): Array<types.IEmptyBluePrint> => {\n  return Array.from({ length: amount }, (): types.IEmptyBluePrint => ({ type: \"EMPTY\", operation: \"NoOp\" }))\n}\n\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = [ \"AE\", \"WE\" ]\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ {...}, ...]\n  */\nexport const getListOfAvailableEntity = (\n  selectedSets: ReadonlyArray<string>,\n  entity: types.EntityType\n) => selectedSets.reduce(\n  (acc: Array<types.ICard | types.ICreature >, expansion: string): Array<types.ICard | types.ICreature> => {\n    return [ ...acc, ...config.DATA[expansion][entity] ]\n  },\n  []\n)\n\nexport const isCardArray = (entityList: Array<types.ICard | types.ICreature>): entityList is Array<types.ICard> => {\n  return (<types.ICard>entityList[0]).name !== undefined\n}\n\n// TODO Refactor turnorder cards and mages (code duplication)\ntype TurnOrderListReductionResult = {\n  availableCards: types.ITurnOrderCard[],\n  result: types.ITurnOrderCard[]\n}\n\nexport const createTurnOrderCardList = (\n  availableCards: types.ITurnOrderCard[],\n  slots: types.ITurnOrderCard[],\n  getEntity: <T>(list: Array<T>) => T\n): TurnOrderListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: TurnOrderListReductionResult,\n      slot: types.ITurnOrderCard,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(acc.availableCards) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [ ...acc.result, card ]\n      }\n    }, { availableCards, result: [] })\n\n  return result\n}\n\ntype MageListReductionResult = {\n  availableMages: types.ICreature[],\n  result: types.ICreature[]\n}\n\nexport const createMageList = (\n  availableMages: types.ICreature[],\n  slots: Array<types.Slot>,\n  getEntity: <T>(list: Array<T>) => T\n): MageListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: MageListReductionResult,\n      slot: types.Slot,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const mage = getEntity(acc.availableMages) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingMages = acc.availableMages.filter(\n        entity => entity.id !== mage.id\n      )\n\n      return {\n        availableMages: remainingMages,\n        result: [ ...acc.result, mage ]\n      }\n  }, { availableMages, result: [] })\n\n  return result\n}\n\nexport const shuffleDeck = (deck: types.ITurnOrderCard[]): types.ITurnOrderCard[] => {\n  return createTurnOrderCardList(deck, deck, getRandomEntity).result\n}\n\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = <E>(availableEntities: Array<E>) => availableEntities[Math.floor(Math.random() * availableEntities.length)]\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer, loop, Cmd } from 'redux-loop'\nimport { createSelector } from 'reselect'\nimport { get as getFromDb, set as setToDb } from 'idb-keyval'\n\nimport config from '../../../../config'\nimport { ITurnOrderSetup, Mode } from '../../../../types'\nimport { RootState } from '../../'\nimport { actions as activeGameActions, Action as ActiveGameAction } from '../ActiveGame'\n\n\nconst TURNORDER_CONFIG_DB_KEY = 'turnOrderConfig'\n\n/////////////\n// HELPERS //\n/////////////\n\nconst adjustSetup = (mode: Mode, setup: ITurnOrderSetup): ITurnOrderSetup => {\n  switch (mode) {\n    case 'Maelstrom': {\n      return {\n        id: setup.id,\n        name: setup.name,\n        turnOrderCards: setup.turnOrderCards.map(card => {\n          return (card.id === 'nemesis-1')\n            ? config.TURNORDERCARDS[\"maelstrom\"]\n            : card\n        })\n      }\n    }\n\n    case 'Default':\n    default: {\n      return setup\n    }\n  }\n}\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Mode: Mode,\n  SelectedSetup: ITurnOrderSetup\n}>\nexport const initialState: State = {\n  Mode: 'Default',\n  SelectedSetup: config.TURNORDERSETUPS['onePlayerThreeToc']\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_MODE = 'TurnOrder/Configuration/SET_MODE',\n  SELECT_SETUP = 'TurnOrder/Configuration/SELECT_SETUP',\n  SET_TO_DB = 'TurnOrder/Configuration/SET_TO_DB',\n  SET_TO_DB_SUCCESS = 'TurnOrder/Configuration/SET_TO_DB_SUCCESS',\n  SET_TO_DB_FAILURE = 'TurnOrder/Configuration/SET_TO_DB_FAILURE',\n  FETCH_FROM_DB = 'TurnOrder/Configuration/FETCH_FROM_DB',\n  FETCH_FROM_DB_SUCCESS = 'TurnOrder/Configuration/FETCH_FROM_DB_SUCCESS',\n  FETCH_FROM_DB_FAILURE = 'TurnOrder/Configuration/FETCH_FROM_DB_FAILURE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  setMode: (mode: Mode) => createAction(ActionTypes.SET_MODE, mode),\n  selectSetup: (setupId: string) => createAction(ActionTypes.SELECT_SETUP, setupId),\n  setToDB: () => createAction(ActionTypes.SET_TO_DB),\n  setToDBSuccessful: () => createAction(ActionTypes.SET_TO_DB_SUCCESS),\n  setToDBFailed: () => createAction(ActionTypes.SET_TO_DB_FAILURE),\n  fetchFromDB: () => createAction(ActionTypes.FETCH_FROM_DB),\n  fetchFromDBSuccessful: (state: State) => createAction(ActionTypes.FETCH_FROM_DB_SUCCESS, state),\n  fetchFromDBFailed: () => createAction(ActionTypes.FETCH_FROM_DB_FAILURE),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action | ActiveGameAction> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_MODE: {\n      const newState = { ...state, Mode: action.payload }\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.SELECT_SETUP: {\n      const newState = { ...state, SelectedSetup: config.TURNORDERSETUPS[action.payload] }\n      return loop(\n        newState,\n        Cmd.run<Action>( setToDb, {\n          args: [TURNORDER_CONFIG_DB_KEY, newState],\n          successActionCreator: actions.setToDBSuccessful,\n          failActionCreator: actions.setToDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB: {\n      return loop(\n        state,\n        Cmd.run<Action>( getFromDb, {\n          args: [TURNORDER_CONFIG_DB_KEY],\n          successActionCreator: actions.fetchFromDBSuccessful,\n          failActionCreator: actions.fetchFromDBFailed,\n        })\n      )\n    }\n\n    case ActionTypes.FETCH_FROM_DB_SUCCESS: {\n      // If the fetched state somehow is undefined just take the current state instead\n      const newState = action.payload || state\n      return loop(\n        newState,\n        // If we could load the configuration also load the actual\n        // turnorder game state\n        Cmd.action<ActiveGameAction>(activeGameActions.fetchFromDB())\n      )\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMode = (state: RootState) => state.TurnOrder.Configuration.Mode\nconst getSelectedSetup = (state: RootState) => state.TurnOrder.Configuration.SelectedSetup\nconst getConfiguration = createSelector(\n  [ getMode, getSelectedSetup ],\n  (mode, selectedSetup) => adjustSetup(mode, selectedSetup)\n)\nconst getAvailableCards = createSelector(\n  [ getConfiguration ],\n  (config) => config.turnOrderCards\n)\n\nexport const selectors = {\n  getMode,\n  getSelectedSetup,\n  getConfiguration,\n  getAvailableCards,\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../types'\nimport { RootState } from '../'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from '../../helpers'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<ICreature> | undefined\nexport const initialState: State = undefined\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Nemesis/SET_RANDOM'\n}\n\nexport const actions = {\n  setRandomNemesis: (expansions: ReadonlyArray<string>) => createAction(ActionTypes.SET_RANDOM, expansions),\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const expansions = action.payload\n      const availableNemeses = getListOfAvailableEntity(expansions, \"nemeses\")\n      return getRandomEntity(availableNemeses)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getNemesis = (state: RootState) => state.Nemesis\n\nexport const selectors = {\n  getNemesis\n}\n","export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport { RootState } from '../../'\n\n\n///////////\n// STATE //\n///////////\n\nexport type MageCount = 1 | 2 | 3 | 4\nexport type State = MageCount\nexport const initialState: State = 1\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET = 'Mages/Count/SET'\n}\n\nexport const actions = {\n  setCount: (count: MageCount) => createAction(ActionTypes.SET, count),\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET: {\n      return action.payload\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCount = (state: RootState) => state.Mages.Count\n\nexport const selectors = {\n  getCount\n}\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '24px',\n    right: '24px',\n    zIndex: 10,\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\n\nconst NoSelectedExpansions = React.memo(() => (\n  <Typography paragraph>\n    There is currently no standalone set selected. Please activate at least one standalone set in the settings.\n  </Typography>\n))\n\nexport default NoSelectedExpansions\n","import { createStyles } from '@material-ui/core'\n\nconst nemesesStyles = (theme: any) => createStyles({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default nemesesStyles\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\nimport * as Nemesis from '../../../Redux/Store/Nemesis'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nimport nemesesStyles from './nemesesStyles'\n\nconst Nemeses = React.memo(({\n  classes,\n  hasStandaloneExpansionSelected,\n  nemesis,\n  selectedExpansions,\n  setRandomNemesis,\n}: {\n  classes: any,\n  hasStandaloneExpansionSelected: boolean,\n  nemesis: ICreature | undefined,\n  selectedExpansions: ReadonlyArray<string>,\n  setRandomNemesis: (expansions: ReadonlyArray<string>) => Nemesis.Action\n}) => {\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? (\n            <React.Fragment>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography color=\"textSecondary\">{config.DATA[nemesis.expansion].name}</Typography>\n                  <Typography variant=\"h6\" component=\"h2\">{nemesis['name']}</Typography>\n                </CardContent>\n                <i className={`ra ra-lg ra-broken-skull ${classes.cardIcon}`} />\n              </Card>\n\n            </React.Fragment>\n          )\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={() => setRandomNemesis(selectedExpansions)}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: SelectedExpansions.selectors.getHasStandaloneSet(state),\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsArray(state),\n  nemesis: Nemesis.selectors.getNemesis(state),\n})\n\nconst mapDispatchToProps = {\n  setRandomNemesis: Nemesis.actions.setRandomNemesis\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(nemesesStyles)(Nemeses))\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../../config'\nimport { ICreature } from '../../../../types'\nimport { RootState } from '../../'\nimport {\n  createSlotList,\n  createMageList,\n  getListOfAvailableEntity,\n  getRandomEntity,\n} from '../../../helpers'\n\nimport { MageCount } from '../Count'\n\n///////////\n// STATE //\n///////////\n\nexport type State = ReadonlyArray<ICreature>\nexport const initialState: State = []\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SET_RANDOM = 'Mages/Recruited/SET_RANDOM'\n}\n\nexport const actions = {\n  setRandomMages: (expansions: ReadonlyArray<string>, count: MageCount) => createAction(ActionTypes.SET_RANDOM, { expansions, count }),\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_RANDOM: {\n      const { expansions, count } = action.payload\n      const availableMages = getListOfAvailableEntity(expansions, \"mages\")\n      const slotList = createSlotList(count)\n      const { result } = createMageList(availableMages, slotList, getRandomEntity)\n      return result\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getMages = (state: RootState) => state.Mages.Recruited\n\nexport const selectors = {\n  getMages\n}\n\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Selected: types.IMarketSetup\n}>\nexport const initialState: State = {\n  // FIXME we should ensure with typescript, that the 'default: true' property is not\n  // optional for default state here\n  Selected: config.MARKETSETUPS['random'],\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  SELECT_SETUP = \"Supply/Selection/SELECT_SETUP\"\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  selectSetup: (setup: Readonly<types.IMarketSetup>) => createAction(ActionTypes.SELECT_SETUP, setup),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.SELECT_SETUP: {\n      return {\n        ...state,\n        Selected: action.payload\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getSelectedSetup = (state: RootState) => state.Supply.Selection.Selected\n\nexport const selectors = {\n  getSelectedSetup,\n}\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst MageCountPicker = React.memo(({ selectedValue, handleAmountChange }:{\n  selectedValue: string,\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}) => (\n  <Card>\n    <CardContent>\n      <FormControl component={\"fieldset\" as \"div\"}>\n        <FormLabel>Amount of Mages</FormLabel>\n        <RadioGroup\n          aria-label=\"Amount of Mages\"\n          name=\"mageAmount\"\n          value={selectedValue}\n          onChange={handleAmountChange}\n          row={true}\n        >\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n))\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default MageGridWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../types'\n\nconst MageCard = React.memo(({mage, classes}: {\n  mage: ICreature,\n  classes: any\n}) => (\n  <Grid item xs={6} md={3}>\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography color=\"textSecondary\">{config.DATA[mage.expansion].name}</Typography>\n        <Typography variant=\"h6\" component=\"h2\">{mage.name}</Typography>\n      </CardContent>\n      <i className={`ra ra-lg ra-fluffy-swirl ${classes.cardIcon}`} />\n    </Card>\n  </Grid>\n))\n\nexport default MageCard\n","import { createStyles } from '@material-ui/core'\n\nconst mageStyles = (theme: any) => createStyles({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default mageStyles\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport MageGridWrapper from './MageGridWrapper'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ICreature } from '../../../types'\n\nimport MageCard from './MageCard'\nimport mageStyles from './mageStyles'\n\nconst MageList = React.memo(({ mages, classes }: {\n  mages: ReadonlyArray<ICreature>,\n  classes: any\n}) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {\n        mages.map(mage => (\n          <MageCard\n            classes={classes}\n            mage={mage}\n            key={mage.name}\n          />\n        ))\n      }\n    </Grid>\n  </MageGridWrapper>\n))\n\nexport default withStyles(mageStyles)(MageList)\n","import { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = withStyles({\n  root: {\n    marginTop: 24\n  }\n})(Typography)\n\nexport default EmptyMageListHint\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { ICreature } from '../../../types'\n\nimport { RootState } from '../../../Redux/Store'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\nimport * as MageCount from '../../../Redux/Store/Mages/Count'\nimport * as RecruitedMages from '../../../Redux/Store/Mages/Recruited'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\n\nconst Mages = React.memo(({\n  hasStandaloneExpansionSelected,\n  selectedExpansions,\n  mageCount,\n  setMageCount,\n  setMages,\n  mages,\n}: {\n  hasStandaloneExpansionSelected: boolean,\n  selectedExpansions: ReadonlyArray<string>,\n  mageCount: MageCount.MageCount,\n  setMageCount: (count: MageCount.MageCount) => MageCount.Action,\n  setMages: (expansions: ReadonlyArray<string>, count: MageCount.MageCount) => RecruitedMages.Action,\n  mages: ReadonlyArray<ICreature>\n}) => {\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  const handleShuffle = () => {\n    setMages(selectedExpansions, mageCount)\n  }\n\n  const noMagesGeneratedYet = mages.length === 0\n\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMageCount(parseInt(e.currentTarget.value) as MageCount.MageCount)\n  }\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={mageCount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        noMagesGeneratedYet\n          ? <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: SelectedExpansions.selectors.getHasStandaloneSet(state),\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsArray(state),\n  mageCount: MageCount.selectors.getCount(state),\n  mages: RecruitedMages.selectors.getMages(state),\n})\n\nconst mapDispatchToProps = {\n  setMageCount: MageCount.actions.setCount,\n  setMages: RecruitedMages.actions.setRandomMages,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mages)\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport { Slot, ICard } from '../../../../types'\nimport { createSlotList } from '../../../helpers'\nimport config from '../../../../config'\nimport { RootState } from '../../'\nimport { createSupply } from './helpers'\n\n\n///////////\n// STATE //\n///////////\n\nexport type State = Readonly<{\n  Cards: ReadonlyArray<Slot | ICard>\n}>\nexport const initialState: State = {\n  Cards: createSlotList(config.DEFAULTSUPPLYCOUNT)\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes {\n  RESET = 'Supply/RandomSetup/RESET',\n  CREATE = 'Supply/RandomSetup/CREATE',\n}\n\nexport const actions = {\n  noOp: () => createAction('NOOP'),\n  resetMarket: () => createAction(ActionTypes.RESET),\n  createMarket: (\n    expansions: ReadonlyArray<string>,\n    tiles: ReadonlyArray<Slot>\n  ) => createAction(ActionTypes.CREATE, { expansions, tiles }),\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer: LoopReducer<State, Action> = (\n  state: State = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case ActionTypes.RESET: {\n      return initialState\n    }\n\n    case ActionTypes.CREATE: {\n      const { expansions, tiles } = action.payload\n      const { gems, relics, spells } = createSupply(expansions, tiles)\n      return {\n        ...state,\n        Cards: [...gems.result, ...relics.result, ...spells.result]\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getCards = (state: RootState) => state.Supply.RandomSetup.Cards\n\nexport const selectors = {\n  getCards\n}\n","import {\n   ICard, \n   IBluePrint, \n   CardType,\n} from '../../../../types'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity,\n  isCardArray\n} from '../../../helpers'\n\n\ntype CardListReduceResult = {\n  availableCards: ICard[],\n  result: ICard[]\n}\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (\n  card: ICard,\n  setupBlueprint: IBluePrint\n) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"<=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost <= setupBlueprint.threshold\n    }\n    case \">=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost >= setupBlueprint.threshold\n    }\n    case \"=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      if (!setupBlueprint.values) return true\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nconst createCardList = (\n  availableCards: ICard[],\n  blueprints: Array<IBluePrint>,\n  getEntity: <T>(list: Array<T>) => T\n): CardListReduceResult => {\n  const result = blueprints.reduce(\n    (\n      acc: CardListReduceResult,\n      blueprint: IBluePrint,\n      i: number\n    ) => {\n      const filteredByCost = acc.availableCards.filter(card => filterByCost(card, blueprint))\n\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(filteredByCost) || blueprint\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [ ...acc.result, card ]\n      }\n  }, { availableCards, result: [] })\n\n  return result\n}\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (\n    availableCards: ReadonlyArray<ICard>,\n    tileSetups: ReadonlyArray<IBluePrint>,\n    cardType: CardType\n) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createCardList(availableCardsOfType, cardSlots, getRandomEntity)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nexport const createSupply = (\n    selectedExpansions: ReadonlyArray<string>,\n    tileSetups: ReadonlyArray<IBluePrint>\n) => {\n  const availableCards = getListOfAvailableEntity(selectedExpansions, \"cards\")\n\n  if (!isCardArray(availableCards)) {\n    return { gems: { result: [] }, relics: { result: [] }, spells: { result: [] } }\n  }\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\n","import { createAction, ActionsUnion } from '@martin_hotell/rex-tils'\nimport { LoopReducer } from 'redux-loop'\nimport { createSelector } from 'reselect'\n\nimport config from '../../../../config'\nimport * as types from '../../../../types'\nimport { RootState } from '../../'\n\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Predefined: types.IMarketSetups,\n  Custom: types.IMarketSetups,\n}\nexport const initialState: State = {\n  Predefined: config.MARKETSETUPS,\n  Custom: {},\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport enum ActionTypes { }\n\nexport const actions = {\n  noOp: () => createAction('NOOP')\n}\n\nexport type Action = ActionsUnion<typeof actions>\n\n  /////////////\n  // REDUCER //\n  /////////////\n\n  export const Reducer: LoopReducer<State, Action> = (\n    state: State = initialState,\n    action: Action\n  ) => {\n    switch (action.type) {\n      default: {\n        return state\n      }\n    }\n  }\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getPredefined = (state: RootState) => state.Settings.SupplySetups.Predefined\nconst getCustom = (state: RootState) => state.Settings.SupplySetups.Custom\nconst getCustomAndPredefined = createSelector(\n  [ getPredefined, getCustom ],\n  (predefined, custom) => ({ ...predefined, ...custom })\n)\nconst getActiveSetups = createSelector(\n  [ getCustomAndPredefined ],\n  (customAndPredefined) => Object\n    .values(customAndPredefined)\n    .filter(setup => setup.active)\n)\n\nexport const selectors = {\n  getPredefined,\n  getCustom,\n  getCustomAndPredefined,\n  getActiveSetups,\n}\n","import React, { useState } from 'react'\n\nconst useExpandedHandling = () => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState<boolean |  string>(false)\n\n  const createExpansionHandler = (panel: string) => (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, createExpansionHandler, setExpanded }\n}\n\nexport default useExpandedHandling\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n\nconst StyledExpansionPanel = withStyles({\n  root: {\n    borderRadius: 4,\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {\n    margin: 'auto',\n  },\n})(ExpansionPanel);\n\nexport default StyledExpansionPanel\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nconst StyledExpansionPanelSummary = withStyles({\n  root: {\n    minHeight: 48,\n    '&$expanded': {\n      minHeight: 48,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(ExpansionPanelSummary);\n\nexport default StyledExpansionPanelSummary\n","import { createStyles } from '@material-ui/core'\n\nconst supplyStyles = (theme: any) => createStyles({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  card: {\n    minWidth: 30,\n    minHeight: 148,\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardName: {\n    fontWeight: 'bold',\n  },\n  cardInfoListItem: {\n    padding: 0,\n  },\n  label: {\n    marginRight: 8,\n    display: 'inline-block',\n  },\n  infoText: {\n    display: 'inline-block',\n  },\n  gem: {\n    background: '#EDE7F6',\n  },\n  relic: {\n    background: '#E3F2FD',\n  },\n  spell: {\n    background: '#FFF3E0',\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2\n  },\n  gemIcon: {\n    color: '#B39DDB',\n  },\n  relicIcon: {\n    color: '#90CAF9',\n  },\n  spellIcon: {\n    color: '#FFCC80',\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nconst CardTypeIcon = React.memo(({type, classes}: {\n  type: string,\n  classes: any,\n}) => {\n  const typeClass = classes[`${type}Icon`]\n\n  switch (type) {\n    case 'gem': {\n      return <i className={`ra ra-lg ra-crystals ${classes.cardIcon} ${typeClass}`} />\n    }\n    case 'relic': {\n      return <i className={`ra ra-lg ra-crystal-wand ${classes.cardIcon} ${typeClass}`} /> \n    }\n    case 'spell': {\n      return <i className={`ra ra-lg ra-scroll-unfurled ${classes.cardIcon} ${typeClass}`} /> \n    }\n    default: {\n      return null\n    }\n  }\n})\n\nexport default CardTypeIcon\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport {\n  Slot,\n  ICard,\n  isCard,\n  Operation,\n} from '../../../types'\n\nimport CardTypeIcon from './CardTypeIcon'\n\n\nconst getOperationString = (\n  operation: Operation,\n  values?: number[], \n  threshold?: number\n) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}\n\nconst MarketTile = React.memo(({ tileSetup, card, classes, ...rest }: {\n  tileSetup: Slot,\n  card: Slot | ICard,\n  classes: any\n}) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card className={`${classes.card} ${classes[type.toLowerCase()]}`}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography className={classes.cardName} component=\"p\">\n            { isCard(card)\n                ? card.name\n                : \"-\"\n            }\n          </Typography>\n          <List>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Set:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { (isCard(card) && config.DATA[card.expansion] !== undefined)\n                    ? config.DATA[card.expansion].name\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Cost:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { isCard(card)\n                    ? card.cost\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} classes={classes} />\n      </Card>\n    </Grid>\n  )\n})\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport {\n  IMarketSetup,\n  ICard,\n  Slot\n} from '../../../types'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (\n  marketSetup: IMarketSetup, \n  cards: ReadonlyArray<Slot | ICard>, \n  classes: any\n) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        card={cards[i]}\n        classes={classes}\n      />\n    )\n  )\n}\n\nconst SupplyList = React.memo(({marketSetup, cards, classes}: {\n  marketSetup: IMarketSetup,\n  cards: ReadonlyArray<Slot | ICard>,\n  classes: any\n}) => (\n  <ListWrapper>\n    <Grid\n      container\n      spacing={16}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </Grid>\n  </ListWrapper>\n))\n\nexport default SupplyList\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nimport { IMarketSetup, IMarketSetups } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as SupplySelection from '../../../Redux/Store/Supply/Selection'\nimport * as SupplySetups from '../../../Redux/Store/Settings/SupplySetups'\n\n\nconst renderMarketOptions = (activeMarketSetups: ReadonlyArray<IMarketSetup>) =>\n  activeMarketSetups\n    .map(setup => (\n      <FormControlLabel\n        key={setup.id}\n        value={setup.id}\n        control={<Radio />}\n        label={setup.name}\n      />\n    ))\n\nconst MarketOptions = React.memo(({\n  activeMarketSetups,\n  allMarketSetups,\n  expansionHandler,\n  marketSetupId,\n  selectSetup,\n}: {\n  activeMarketSetups: ReadonlyArray<IMarketSetup>,\n  allMarketSetups: IMarketSetups,\n  expansionHandler: (\n    event: React.ChangeEvent<any> | undefined,\n    expanded: boolean | string\n  ) => void,\n  marketSetupId: string,\n  selectSetup: (setup: Readonly<IMarketSetup>) => SupplySelection.Action\n}) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={(event: React.ChangeEvent<any>) => {\n      expansionHandler(undefined, false)\n      selectSetup(allMarketSetups[event.currentTarget.value])\n    }}\n  >\n    { renderMarketOptions(activeMarketSetups) }\n  </RadioGroup>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  activeMarketSetups: SupplySetups.selectors.getActiveSetups(state),\n  allMarketSetups: SupplySetups.selectors.getCustomAndPredefined(state),\n})\n\nconst mapDispatchToProps = {\n  selectSetup: SupplySelection.actions.selectSetup,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketOptions)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../../../Redux/Store'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\nimport * as SupplySelection from '../../../Redux/Store/Supply/Selection'\nimport * as SupplySetups from '../../../Redux/Store/Settings/SupplySetups'\nimport * as RandomSupply from '../../../Redux/Store/Supply/RandomSetup'\n\nimport useExpandedHandling from '../../../hooks/useExpansionHandling'\nimport { ICard, Slot, IMarketSetup } from '../../../types'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\nimport ShuffleButton from '../../ShuffleButton'\nimport NoSelectedExpansions from '../../NoSelectedExpansions'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\n\n\nconst Supply = React.memo(({\n  classes,\n  cards,\n  createMarket,\n  hasStandaloneExpansionSelected,\n  marketSetup,\n  selectedExpansions,\n}: {\n  classes: any,\n  cards: ReadonlyArray<Slot | ICard>,\n  createMarket: (expansions: ReadonlyArray<string>, tiles: ReadonlyArray<Slot>) => RandomSupply.Action,\n  hasStandaloneExpansionSelected: boolean,\n  marketSetup: IMarketSetup,\n  selectedExpansions: ReadonlyArray<string>,\n}) => {\n  const { expanded, createExpansionHandler } = useExpandedHandling()\n  const expansionHandler = createExpansionHandler('setup')\n\n  if (!hasStandaloneExpansionSelected) {\n    return <NoSelectedExpansions />\n  }\n\n  const handleShuffle = () => {\n    createMarket(selectedExpansions, marketSetup.tiles)\n  }\n\n  return (\n    <React.Fragment>\n      <StyledExpansionPanel expanded={expanded === 'setup'} onChange={expansionHandler}>\n        <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            expansionHandler={expansionHandler}\n          />\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nconst mapStateToProps = (state: RootState) => ({\n  hasStandaloneExpansionSelected: SelectedExpansions.selectors.getHasStandaloneSet(state),\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansionsArray(state),\n  marketSetup: SupplySelection.selectors.getSelectedSetup(state),\n  cards: RandomSupply.selectors.getCards(state)\n})\nconst mapDispatchToProps = {\n  createMarket: RandomSupply.actions.createMarket,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(supplyStyles)(Supply))\n","const settingStyles = (theme: any) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import { combineReducers } from 'redux-loop'\n\nimport config from '../../../../config'\nimport * as Selected from './Selected'\n\n\n///////////\n// STATE //\n///////////\n\nexport type State = {\n  Selected: Selected.State\n}\n\nexport const initialState = {\n  Selected: Selected.initialState\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nexport type Action = Selected.Action\n\n/////////////\n// REDUCER //\n/////////////\n\nexport const Reducer = combineReducers<State, Action>({\n  Selected: Selected.Reducer\n})\n\n///////////////\n// SELECTORS //\n///////////////\n\nconst getExpansionNamesByType = (type: string) => config.EXPANSIONS\n  .filter((expansion) => config.DATA[expansion].type === type)\n\nexport const selectors = {\n  getStandaloneExpansions: getExpansionNamesByType(\"standalone\").sort(),\n  getMiniExpansions: getExpansionNamesByType(\"mini\").sort(),\n  getPromos: getExpansionNamesByType(\"promo\")\n    .sort((a, b) => {\n      const promoA = config.DATA[a].name\n      const promoB = config.DATA[b].name\n\n      if (promoA < promoB) {\n        return -1;\n      }\n\n      if (promoA > promoB) {\n        return 1;\n      }\n\n      return 0;\n    }),\n}\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport config from '../../../config'\n\nconst ConfiguredSet = React.memo(({\n  set,\n  configurationOfSets,\n  handleChange\n}: {\n  set: string,\n  configurationOfSets: { [key: string]: boolean },\n  handleChange: (set: string) => void\n}) => (\n  <FormControlLabel\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={config.DATA[set].name}\n  />\n))\n\nexport default ConfiguredSet\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport ConfiguredSet from './ConfiguredSet'\n\n\nconst renderConfiguredSets = (\n  configurationOfSets: { [key: string]: boolean },\n  sets: ReadonlyArray<string>,\n  handleChange: (set: string) => void\n) => sets.map(set => (\n  <ConfiguredSet\n    key={set}\n    set={set}\n    configurationOfSets={configurationOfSets}\n    handleChange={handleChange}\n  />\n))\n\nconst CheckboxList = React.memo(({\n    label,\n    setConfig,\n    expansions,\n    changeHandler,\n    ...rest\n}: {\n    label: string,\n    setConfig: { [key: string]: boolean },\n    expansions: ReadonlyArray<string>,\n    changeHandler: (set: string) => void\n}) => (\n    <React.Fragment>\n        <FormLabel {...rest}>{label}</FormLabel>\n        <FormGroup {...rest} style={{ marginBottom: '20px' }}>\n        {\n            renderConfiguredSets(setConfig, expansions, changeHandler)\n        }\n        </FormGroup>\n    </React.Fragment>\n))\n\nexport default CheckboxList\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport config from '../../../config'\nimport { RootState } from '../../../Redux/Store'\nimport * as Expansions from '../../../Redux/Store/Settings/Expansions'\nimport * as SelectedExpansions from '../../../Redux/Store/Settings/Expansions/Selected'\n\nimport CheckboxList from './CheckboxList'\n\n\nconst ActiveSets = React.memo(({\n  allSetsSelected,\n  handleSelectAll,\n  standalones,\n  miniExpansions,\n  promos,\n  selectedExpansions,\n  handleChange\n}: {\n  allSetsSelected: boolean,\n  handleSelectAll: () => void,\n  standalones: ReadonlyArray<string>,\n  miniExpansions: ReadonlyArray<string>,\n  promos: ReadonlyArray<string>,\n  selectedExpansions: SelectedExpansions.State,\n  handleChange: (set: string) => void\n}) => (\n  <FormControl component={\"fieldset\" as \"div\"}>\n    <FormLabel/>\n    <FormGroup style={{ marginBottom: '20px' }}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={allSetsSelected}\n            onChange={handleSelectAll}\n            value={ allSetsSelected\n              ? \"Deselect All\"\n              : \"Select All\"\n            }\n          />\n        }\n        label={ allSetsSelected\n          ? \"Deselect All\"\n          : \"Select All\"\n        }\n      />\n    </FormGroup>\n    <CheckboxList\n      label=\"Standalone Sets\"\n      setConfig={selectedExpansions}\n      expansions={standalones}\n      changeHandler={handleChange}\n    />\n    <CheckboxList\n      label=\"Mini Expansions\"\n      setConfig={selectedExpansions}\n      expansions={miniExpansions}\n      changeHandler={handleChange}\n    />\n    <CheckboxList\n      label=\"Promos\"\n      setConfig={selectedExpansions}\n      expansions={promos}\n      changeHandler={handleChange}\n    />\n  </FormControl>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  standalones: Expansions.selectors.getStandaloneExpansions,\n  miniExpansions: Expansions.selectors.getMiniExpansions,\n  promos: Expansions.selectors.getPromos,\n  selectedExpansions: SelectedExpansions.selectors.getSelectedExpansions(state),\n  allSetsSelected: SelectedExpansions.selectors.getAllSetsSelected(state)\n})\n\nexport default connect(mapStateToProps, {\n  handleSelectAll: SelectedExpansions.actions.toggleAll,\n  handleChange: SelectedExpansions.actions.toggleExpansion\n})(ActiveSets)\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\n\nimport useExpansionHandling from '../../../hooks/useExpansionHandling'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = React.memo(({ classes }: { classes: any }) => {\n  const { expanded, createExpansionHandler } = useExpansionHandling()\n\n  return (\n    <StyledExpansionPanel expanded={expanded === 'sets'} onChange={createExpansionHandler('sets')}>\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Expansions</Typography>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets />\n      </ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n})\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport MuiTableCell from '@material-ui/core/TableCell'\n\nconst TableCell = withStyles({\n    root: {\n      padding: '4px 8px',\n      '&:first-child': {\n        paddingLeft: 16\n      },\n      '&:last-child': {\n        paddingRight: 8\n      },\n    }\n})(MuiTableCell)\n\nexport default TableCell\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport MuiTableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport { ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport TableCell from './TableCell'\n\n\nconst TableRow = React.memo(({\n  card,\n  addToTop,\n  addToBottom,\n  shuffleIntoDeck,\n  classes\n}: {\n  card: ITurnOrderCard,\n  addToTop: (cardId: string) => TurnOrderGame.Action,\n  addToBottom: (cardId: string) => TurnOrderGame.Action,\n  shuffleIntoDeck: (cardId: string) => TurnOrderGame.Action,\n  classes: any\n}) => (\n  <MuiTableRow className={`${classes.cardRow} ${classes[card.cssClass]}`}>\n    <TableCell>\n      <Typography component='p'>{card.name}</Typography>\n    </TableCell>\n    <TableCell align=\"right\">\n      <IconButton\n        aria-label=\"Add to top\" \n        title=\"Add to top\" \n        onClick={() => addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </TableCell>\n    <TableCell align=\"right\">\n      <IconButton \n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </TableCell>\n    <TableCell align=\"right\">\n      <IconButton \n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </TableCell>\n  </MuiTableRow>\n))\n\nconst mapStateToProps = (state: RootState) => ({ })\n\nconst mapDispatchToProps = {\n  addToTop: TurnOrderGame.actions.addToTop,\n  addToBottom: TurnOrderGame.actions.addToBottom,\n  shuffleIntoDeck: TurnOrderGame.actions.shuffleIntoDeck,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow)\n","import { createStyles } from '@material-ui/core'\n\nconst turnOrderStyles = (theme: any) => createStyles({\n  cardDeck: {\n    marginTop: 24,\n  },\n  cardTable: {\n    marginTop: 24,\n    borderCollapse: 'collapse',\n  },\n  cardRow: {\n    borderBottom: '4px solid #fafafa',\n    '&:first-child': {\n      '& *': {\n        color: '#fff',\n      },\n    },\n  },\n  player1: {\n    background: '#F1F8E9',\n    '& td': {\n      borderColor: '#F1F8E9',\n    },\n    '&:first-child': {\n      background: '#8BC34A',\n      '& td': {\n        borderColor: '#8BC34A',\n      },\n    },\n  },\n  player2: {\n    background: '#FFF3E0',\n    '& td': {\n      borderColor: '#FFF3E0',\n    },\n    '&:first-child': {\n      background: '#FF9800',\n      '& td': {\n        borderColor: '#FF9800',\n      },\n    },\n  },\n  player3: {\n    background: '#E3F2FD',\n    '& td': {\n      borderColor: '#E3F2FD',\n    },\n    '&:first-child': {\n      background: '#2196F3',\n      '& td': {\n        borderColor: '#2196F3',\n      },\n    },\n  },\n  player4: {\n    background: '#F3E5F5',\n    '& td': {\n      borderColor: '#F3E5F5',\n    },\n    '&:first-child': {\n      background: '#9C27B0',\n      '& td': {\n        borderColor: '#9C27B0',\n      },\n    },\n  },\n  nemesis: {\n    background: '#ffebee',\n    '& td': {\n      borderColor: '#ffebee',\n    },\n    '&:first-child': {\n      background: '#f44336',\n      '& td': {\n        borderColor: '#f44336',\n      },\n    },\n  },\n  wild: {\n    background: '#FAFAFA',\n    '& td': {\n      borderColor: '#FAFAFA',\n    },\n    '&:first-child': {\n      background: '#9E9E9E',\n      '& td': {\n        borderColor: '#9E9E9E',\n      },\n    },\n  },\n  maelstrom: {\n    background: '#EFEBE9',\n    '& td': {\n      borderColor: '#EFEBE9',\n    },\n    '&:first-child': {\n      background: '#795548',\n      '& td': {\n        borderColor: '#795548',\n      },\n    },\n  }\n})\n\nexport default turnOrderStyles\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport MuiTable from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport TableRow from './TableRow'\nimport styles from './styles'\n\n\nconst renderTableRows = (\n  discard: ITurnOrderCard[],\n  classes: any\n) => discard.map((card, i) => (\n  <TableRow\n    key={i}\n    card={card}\n    classes={classes}\n  />\n))\n\nconst DiscardTable = React.memo(({\n  discard,\n  classes,\n}: {\n  discard: ITurnOrderCard[],\n  classes: any,\n}) => (\n <MuiTable className={classes.cardTable}>\n   <TableBody>\n     { renderTableRows(discard, classes) }\n   </TableBody>\n </MuiTable>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  discard: TurnOrderGame.selectors.getDiscard(state),\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DiscardTable))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport { ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\nimport * as TurnOrderConfig from '../../../Redux/Store/TurnOrder/Configuration'\n\nimport ShuffleButton from '../../ShuffleButton'\n\nimport DiscardTable from './DiscardTable'\n\nconst ActiveTurnOrder = React.memo(({\n  availableCards,\n  deck,\n  resetGame,\n  newRound,\n  drawCard,\n}: {\n  availableCards: ITurnOrderCard[],\n  deck: ITurnOrderCard[],\n  resetGame: () => TurnOrderGame.Action,\n  newRound: (availableCards: ITurnOrderCard[]) => TurnOrderGame.Action,\n  drawCard: () => TurnOrderGame.Action,\n}) => (\n  <React.Fragment>\n    {\n      deck.length === 0\n        ? (\n          <Button\n            size='large' \n            variant='contained' \n            color='secondary' \n            onClick={() => newRound(availableCards)}\n          >\n            New Round\n          </Button>\n        )\n        : (\n          <Button\n            size='large'\n            variant='contained'\n            color='secondary' \n            onClick={drawCard}\n          >\n            Draw a card\n          </Button>\n        )\n    }\n\n    <DiscardTable />\n\n    <ShuffleButton \n      color='primary'\n      variant='extended'\n      onClick={resetGame}\n    >\n        Reset Game\n    </ShuffleButton>\n  </React.Fragment>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  deck: TurnOrderGame.selectors.getDeck(state),\n  availableCards: TurnOrderConfig.selectors.getAvailableCards(state),\n})\n\nconst mapDispatchToProps = {\n  resetGame: TurnOrderGame.actions.resetGame,\n  drawCard: TurnOrderGame.actions.draw,\n  newRound: TurnOrderGame.actions.newRound\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveTurnOrder)\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\n\nimport {\n  ITurnOrderSetup\n} from '../../../types'\n\n\nconst renderCardNames = (turnOrderSetup: ITurnOrderSetup) => turnOrderSetup\n  .turnOrderCards\n  .map(\n    (card, i) => (\n      <Typography component='p' key={i}>\n        {card.name}\n      </Typography>\n    )\n  )\n\nconst CardNameDisplay = React.memo(({ classes, turnOrderSetup }: {\n  classes: any,\n  turnOrderSetup: ITurnOrderSetup\n}) => (\n  <Card className={classes.cardDeck}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>Turn order cards</Typography>\n      { renderCardNames(turnOrderSetup) }\n    </CardContent>\n  </Card>\n))\n\nexport default CardNameDisplay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\n\nimport { MODES, Mode } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderConfiguration from '../../../Redux/Store/TurnOrder/Configuration'\n\nconst renderModeOptions = () => MODES.map(mode => (\n  <FormControlLabel\n    key={mode}\n    value={mode}\n    control={<Radio />}\n    label={mode}\n  />\n))\n\nconst ModeSelection = React.memo(({\n  classes,\n  mode,\n  setMode,\n}: {\n  classes: any,\n  mode: Mode,\n  setMode: (mode: Mode) => TurnOrderConfiguration.Action\n}) => (\n  <Card className={classes.cardDeck}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>Mode</Typography>\n      <RadioGroup\n        aria-label='mode'\n        name='turnOrderMode'\n        value={mode}\n        onChange={\n          (event: React.ChangeEvent<any>) => setMode(event.currentTarget.value)\n        }\n      >\n       { renderModeOptions() }\n      </RadioGroup>\n    </CardContent>\n  </Card>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  mode: TurnOrderConfiguration.selectors.getMode(state),\n})\n\nconst mapDispatchToProps = {\n  setMode: TurnOrderConfiguration.actions.setMode\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModeSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport useExpansionHandling from '../../../hooks/useExpansionHandling'\nimport { ITurnOrderSetup } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderConfiguration from '../../../Redux/Store/TurnOrder/Configuration'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\n\nconst renderSetupOptions = () => Object.values(config.TURNORDERSETUPS).map(setup => (\n  <FormControlLabel\n    key={setup.id}\n    value={setup.id}\n    control={<Radio />}\n    label={setup.name}\n  />\n))\n\nconst SetupSelection = React.memo(({\n  selectSetup,\n  selectedSetup,\n}: {\n  selectSetup: (setupId: string) => TurnOrderConfiguration.Action,\n  selectedSetup: ITurnOrderSetup,\n}) => {\n  const { expanded, createExpansionHandler, setExpanded } = useExpansionHandling()\n\n  return (\n    <StyledExpansionPanel\n      expanded={expanded === 'setup'}\n      onChange={createExpansionHandler('setup')}\n    >\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>{selectedSetup.name}</Typography>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <RadioGroup\n          aria-label='Players'\n          name='turnOrderOptions'\n          value={selectedSetup.id}\n          onChange={\n            (event: React.ChangeEvent<any>) => {\n              selectSetup(event.currentTarget.value)\n              setExpanded(false)\n            }\n          }\n        >\n          {renderSetupOptions()}\n        </RadioGroup>\n      </ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )}\n)\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedSetup: TurnOrderConfiguration.selectors.getSelectedSetup(state)\n})\n\nconst mapDispatchToProps = {\n  selectSetup: TurnOrderConfiguration.actions.selectSetup\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetupSelection)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ITurnOrderSetup, ITurnOrderCard } from '../../../types'\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderConfig from '../../../Redux/Store/TurnOrder/Configuration'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport turnOrderStyles from './styles'\nimport CardNameDisplay from './CardNameDisplay'\nimport ModeSelection from './ModeSelection'\nimport SetupSelection from './SetupSelection'\n\nconst TurnOrderConfiguration = React.memo(({\n  currentConfiguration,\n  startGame,\n  classes\n}: {\n  currentConfiguration: ITurnOrderSetup,\n  startGame: (deck: ITurnOrderCard[]) => TurnOrderGame.Action,\n  classes: any\n}) => (\n  <React.Fragment>\n    <SetupSelection />\n    <ModeSelection classes={classes} />\n    <CardNameDisplay classes={classes} turnOrderSetup={currentConfiguration} />\n    <ShuffleButton\n      color='primary'\n      variant='extended'\n      onClick={() => startGame(currentConfiguration.turnOrderCards)}\n    >\n      Start Game\n    </ShuffleButton>\n  </React.Fragment>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  currentConfiguration: TurnOrderConfig.selectors.getConfiguration(state)\n})\n\nconst mapDispatchToProps = {\n  startGame: TurnOrderGame.actions.startGame\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(turnOrderStyles)(TurnOrderConfiguration))\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { RootState } from '../../../Redux/Store'\nimport * as TurnOrderGame from '../../../Redux/Store/TurnOrder/ActiveGame'\n\nimport ActiveGame from './ActiveGame'\nimport TurnOrderConfiguration from './TurnOrderConfiguration'\n\n\nconst TurnOrder = React.memo(({\n  gameHasStarted,\n}: {\n  gameHasStarted: boolean,\n}) => (\n  <React.Fragment>\n    {gameHasStarted\n        ? <ActiveGame />\n        : <TurnOrderConfiguration />\n    }\n  </React.Fragment>\n))\n\nconst mapStateToProps = (state: RootState) => ({\n  gameHasStarted: TurnOrderGame.selectors.getHasStarted(state),\n})\n\nconst mapDispatchToProps = { }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TurnOrder)\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Nemeses from './pages/Nemeses'\nimport Mages from './pages/Mages'\nimport Supply from './pages/Supply'\nimport Settings from './pages/Settings'\nimport TurnOrder from './pages/TurnOrder'\n\nimport { ROUTES } from '../routes'\n\n\nconst Content = React.memo(({ classes, route, isLoading, ...rest }: {\n  classes: any,\n  route: string,\n  isLoading: boolean,\n  className: string\n}) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      isLoading\n        ? <CircularProgress />\n        : {\n          [ROUTES.nemeses]: <Nemeses />,\n          [ROUTES.mages]: <Mages />,\n          [ROUTES.supply]: <Supply />,\n          [ROUTES.turnOrder]: <TurnOrder />,\n          [ROUTES.settings]: <Settings />\n        }[route]\n    }\n  </div>\n))\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = React.memo(({ classes, drawerIsOpen, currentLocation, toggleDrawer }: {\n  classes: any,\n  drawerIsOpen: boolean,\n  currentLocation: string,\n  toggleDrawer: () => void\n}) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n))\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = React.memo(({ route, clickhandler, children }: {\n  route: string,\n  clickhandler: (route: string) => any,\n  children: any\n}) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n))\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes'\nimport RouteItem from './RouteItem'\n\nconst Routes = React.memo(({ locationhandler }: {\n  locationhandler: (route: string) => void\n}) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n))\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport Routes from '../Routes'\n\n\nconst DrawerMenu = React.memo(({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}: {\n  drawerIsOpen: boolean,\n  toggleDrawer: () => void,\n  classes: any,\n  moveTo: (route: string) => void\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography className={classes.appInfo}>\n      Version: {process.env.REACT_APP_VERSION}\n      <Link href=\"https://github.com/on3iro/aeons-end-randomizer\" color=\"inherit\" className={classes.githubLink} target=\"_blank\">\n        <img src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" className={classes.githubLogo} />Github\n      </Link>\n    </Typography>\n  </Drawer>\n))\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport classNames from 'classnames'\n\nimport { RootState } from '../../Redux/Store'\nimport * as MainContentLoading from '../../Redux/Store/MainContentLoading'\nimport * as SelectedExpansions from '../../Redux/Store/Settings/Expansions/Selected'\nimport * as TurnOrderConfig from '../../Redux/Store/TurnOrder/Configuration'\nimport { ROUTES } from '../../routes'\nimport Content from '../Content'\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\nconst MainApp = ({\n  classes,\n  fetchExpansionsFromDB,\n  fetchTurnOrderConfigFromDB,\n  isLoading,\n}: {\n  classes: any,\n  fetchExpansionsFromDB: () => SelectedExpansions.Action,\n  fetchTurnOrderConfigFromDB: () => TurnOrderConfig.Action,\n  isLoading: boolean,\n}) => {\n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route: string) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    fetchExpansionsFromDB()\n    fetchTurnOrderConfigFromDB()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <Content\n        isLoading={isLoading}\n        route={currentLocation}\n        classes={classes}\n        className={\n          classNames(\n            classes.content,\n            { [classes.contentShift]: drawerIsOpen },\n            { [classes.loading]: isLoading }\n          )\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoading: MainContentLoading.selectors.getIsLoading(state)\n})\nconst mapDispatchToProps = {\n  fetchExpansionsFromDB: SelectedExpansions.actions.fetchFromDB,\n  fetchTurnOrderConfigFromDB: TurnOrderConfig.actions.fetchFromDB,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainApp)\n","import React, { useState, useEffect } from 'react';\n\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport axios from 'axios'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport blue from '@material-ui/core/colors/blue';\nimport pink from '@material-ui/core/colors/pink';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles'\n\nimport UpdateScreen from './UpdateScreen'\nimport MainApp from './MainApp'\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\ntype UpdateInformation = {\n  updateAvailable: boolean,\n  newVersion: string\n}\n\nconst App = React.memo(({ classes }: { classes: any }) => {\n  const [ updateInformation, setUpdateAvailable ] = useState<UpdateInformation>({\n    updateAvailable: false,\n    newVersion: ''\n  })\n\n  useEffect(() => {\n    axios.get('https://api.github.com/repos/on3iro/aeons-end-randomizer/releases')\n      .then(response => {\n        const newestRelease = response.data[0]\n        const localAppVersion = process.env.REACT_APP_VERSION\n        const newVersion = newestRelease['tag_name']\n        if (newVersion !== `v${localAppVersion}`) {\n          setUpdateAvailable({\n            updateAvailable: true,\n            newVersion\n          })\n        }\n      })\n  }, [])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        {\n          updateInformation.updateAvailable\n            ? <UpdateScreen newVersion={updateInformation.newVersion} />\n            : <MainApp classes={classes} />\n        }\n      </div>\n    </MuiThemeProvider>\n  );\n})\n\nexport default withStyles(styles, { withTheme: true })(App)\n","import { createStyles } from '@material-ui/core'\n\nconst drawerWidth = 240;\n\nexport const styles = (theme: any) => createStyles({\n  root: {\n    height: '100%',\n    display: 'flex',\n    paddingBottom: 72\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  appInfo: {\n    margin: theme.spacing.unit * 2\n  },\n  githubLink: {\n    display: 'block',\n    lineHeight: '24px',\n    marginTop: theme.spacing.unit * 2\n  },\n  githubLogo: {\n    width: '24px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing.unit\n  },\n  loading: {\n    textAlign: 'center',\n    paddingTop: '150px'\n  }\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Expansions from './Expansions'\nimport * as SupplySetups from './SupplySetups'\n\nexport type State = {\n  Expansions: Expansions.State,\n  SupplySetups: SupplySetups.State,\n}\n\nexport type Action =\n  Expansions.Action\n  | SupplySetups.Action\n\nexport const initialState = {\n  Expansions: Expansions.initialState,\n  SupplySetups: SupplySetups.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Expansions: Expansions.Reducer,\n  SupplySetups: SupplySetups.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Count from './Count'\nimport * as Recruited from './Recruited'\n\n\nexport type State = {\n  Count: Count.State,\n  Recruited: Recruited.State,\n}\n\nexport type Action =\n  Count.Action\n  | Recruited.Action\n\n  export const initialState = {\n    Count: Count.initialState,\n    Recruited: Recruited.initialState,\n  }\n\nexport const Reducer = combineReducers<State, Action>({\n  Count: Count.Reducer,\n  Recruited: Recruited.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Selection from './Selection'\nimport * as RandomSetup from './RandomSetup'\n\n\nexport type State = {\n  Selection: Selection.State,\n  RandomSetup: RandomSetup.State,\n}\n\nexport type Action =\n  Selection.Action\n  | RandomSetup.Action\n\nexport const initialState = {\n  Selection: Selection.initialState,\n  RandomSetup: RandomSetup.initialState,\n}\n\nexport const Reducer = combineReducers<State, Action>({\n  Selection: Selection.Reducer,\n  RandomSetup: RandomSetup.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as Configuration from './Configuration'\nimport * as ActiveGame from './ActiveGame'\n\n\nexport type State = {\n  Configuration: Configuration.State,\n  ActiveGame: ActiveGame.State,\n}\n\nexport type Action =\n  Configuration.Action\n  | ActiveGame.Action\n\nexport const initialState = {\n  Configuration: Configuration.initialState,\n  ActiveGame: ActiveGame.initialState,\n}\n\n// TODO extract initial fetch from subReducers and use here\n// (i am not yet sure of how to actually do that, but it would be neat =D)\nexport const Reducer = combineReducers<State, Action>({\n  Configuration: Configuration.Reducer,\n  ActiveGame: ActiveGame.Reducer,\n})\n","import { combineReducers } from 'redux-loop'\n\nimport * as MainContentLoading from './MainContentLoading'\nimport * as Settings from './Settings'\nimport * as Nemesis from './Nemesis'\nimport * as Mages from './Mages'\nimport * as Supply from './Supply'\nimport * as TurnOrder from './TurnOrder'\n\nexport type RootState = {\n  Settings: Settings.State,\n  MainContentLoading: MainContentLoading.State,\n  Nemesis: Nemesis.State,\n  Mages: Mages.State,\n  Supply: Supply.State,\n  TurnOrder: TurnOrder.State,\n}\n\nexport type RootAction =\n  Settings.Action\n  | MainContentLoading.Action\n  | Nemesis.Action\n  | Mages.Action\n  | Supply.Action\n  | TurnOrder.Action\n\nexport const initialState = {\n  Settings: Settings.initialState,\n  MainContentLoading: MainContentLoading.initialState,\n  Nemesis: Nemesis.initialState,\n  Mages: Mages.initialState,\n  Supply: Supply.initialState,\n  TurnOrder: TurnOrder.initialState,\n}\n\nexport const RootReducer = combineReducers<RootState, RootAction>({\n  Settings: Settings.Reducer,\n  MainContentLoading: MainContentLoading.Reducer,\n  Nemesis: Nemesis.Reducer,\n  Mages: Mages.Reducer,\n  Supply: Supply.Reducer,\n  TurnOrder: TurnOrder.Reducer,\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './Redux/configureStore'\nimport { initialState } from './Redux/Store'\n\nconst store = configureStore(initialState)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// @ts-ignore\nserviceWorker.register();\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { install, StoreCreator } from 'redux-loop'\n\nimport { RootReducer, RootState } from './Store'\n\nconst configureStore = (initialState: RootState) => {\n  // Add middleware to this array if necessary\n  const middleWares: any[] = [ ]\n\n  const enhancers = [\n    applyMiddleware(...middleWares),\n    install<RootState>()\n  ]\n\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      // @ts-ignore\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : compose\n\n  const enhancedCreateStore = createStore as StoreCreator\n  const store = enhancedCreateStore(\n    RootReducer,\n    initialState,\n    composeEnhancers(...enhancers)\n  )\n\n  return store\n}\n\nexport {\n  configureStore as default\n}\n"],"sourceRoot":""}