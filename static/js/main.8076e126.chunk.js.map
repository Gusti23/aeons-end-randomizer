{"version":3,"sources":["components/App/UpdateScreen.tsx","routes.ts","config/aeonsData.ts","config/index.ts","config/marketSetups.ts","config/turnOrderSetups.ts","config/types.ts","globalContexts.ts","hooks/useSelectedSets.tsx","components/ShuffleButton.tsx","components/pages/helpers.ts","components/pages/Nemeses/nemesesStyles.ts","components/pages/Nemeses/index.tsx","components/pages/Mages/MageCountPicker.tsx","components/pages/Mages/MageGridWrapper.tsx","components/pages/Mages/MageCard.tsx","components/pages/Mages/mageStyles.tsx","components/pages/Mages/MageList.tsx","components/pages/Mages/EmptyMageListHint.tsx","components/pages/Mages/index.tsx","components/pages/Mages/helpers.ts","hooks/useExpansionHandling.tsx","components/StyledExpansionPanel.tsx","components/StyledExpansionPanelSummary.tsx","components/pages/Supply/supplyStyles.ts","components/pages/Supply/ListWrapper.tsx","components/pages/Supply/CardTypeIcon.tsx","components/pages/Supply/helpers.ts","components/pages/Supply/MarketTile.tsx","components/pages/Supply/SupplyList.tsx","components/pages/Supply/MarketOptions.tsx","components/pages/Supply/index.tsx","components/pages/Supply/hooks.ts","components/pages/Settings/settingStyles.ts","components/pages/Settings/ConfiguredSet.tsx","components/pages/Settings/CheckboxList.tsx","components/pages/Settings/ActiveSets.tsx","components/pages/Settings/index.tsx","components/pages/TurnOrder/TurnOrderTableCell.tsx","components/pages/TurnOrder/TurnOrderTableRow.tsx","components/pages/TurnOrder/turnOrderStyles.ts","components/pages/TurnOrder/TurnOrderTable.tsx","components/pages/TurnOrder/ActiveTurnOrder.tsx","components/pages/TurnOrder/TurnOrderSetup.tsx","components/pages/TurnOrder/hooks.ts","components/pages/TurnOrder/index.tsx","components/Content.tsx","components/App/TopBar.tsx","components/RouteItem.tsx","components/Routes.tsx","components/App/DrawerMenu.tsx","components/App/MainApp.tsx","components/App/index.tsx","components/App/appStyles.ts","serviceWorker.js","index.tsx"],"names":["Wrapper","styled","withConfig","displayName","componentId","ButtonWrapper","StyledHeadline","Typography","StyledCard","Card","UpdateScreen","React","memo","_ref","newVersion","react_default","a","createElement","CardContent_default","variant","component","Typography_default","paragraph","Link_default","href","target","Button_default","onClick","window","location","reload","color","className","ROUTES","DATA","WE","id","name","type","nemeses","expansion","mages","cards","cost","TV","OD","Nameless","Legacy","Depths","BS","AE","p-1","p-2","p-3","p-4","p-5","config","EXPANSIONS","Object","keys","MARKETSETUPS","market1Inc","tiles","operation","threshold","market1","market2","market3","values","market4","market5","market6","random","TURNORDERSETUPS","onePlayerThreeToc","turnOrderCards","cssClass","onePlayerFourToc","twoPlayers","threePlayers","fourPlayers","isCard","card","undefined","SetConfigurationContext","createContext","NoSelectedExpansions","useSelectedExpansions","expansionContext","useContext","selectedSets","NoSelectedExpansionsComponent","configurationOfSets","filter","key","hasStandaloneSet","some","set","ShuffleButton","withStyles","root","position","bottom","right","zIndex","Fab","createSlotList","amount","Array","from","length","getListOfAvailableEntity","entity","reduce","acc","concat","toConsumableArray","getRandomEntity","availableEntities","Math","floor","nemesesStyles","theme","createStyles","cardContent","cardIcon","fontSize","opacity","Nemeses","classes","_useSelectedExpansion","_useState","useState","_useState2","slicedToArray","nemesis","setNemesis","availableNemeses","Fragment","Card_default","components_ShuffleButton","MageCountPicker","selectedValue","handleAmountChange","FormControl_default","FormLabel_default","RadioGroup_default","aria-label","value","onChange","row","FormControlLabel_default","control","Radio_default","label","MageGridWrapper","MageCard","mage","Grid_default","item","xs","md","mageStyles","MageList","Mages_MageGridWrapper","container","spacing","map","Mages_MageCard","EmptyMageListHint","marginTop","Mages","setMages","_useState3","_useState4","setAmount","availableMages","noMagesGeneratedYet","Mages_MageCountPicker","toString","e","parseInt","currentTarget","Mages_EmptyMageListHint","Mages_MageList","slotList","result","slots","getEntity","slot","i","createMageList","useExpandedHandling","expanded","setExpanded","handleExpansion","panel","event","StyledExpansionPanel","borderRadius","&:before","display","margin","ExpansionPanel","StyledExpansionPanelSummary","minHeight","&$expanded","content","ExpansionPanelSummary","supplyStyles","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","minWidth","cardName","fontWeight","cardInfoListItem","padding","marginRight","infoText","gem","background","relic","spell","gemIcon","relicIcon","spellIcon","ListWrapper","CardTypeIcon","typeClass","getRandomCardsByType","availableCards","tileSetups","cardType","cardSlots","blueprints","blueprint","filteredByCost","setupBlueprint","indexOf","filterByCost","createCardList","_ref2","MarketTile","tileSetup","rest","objectWithoutProperties","assign","toLowerCase","title","join","thresholdValue","getOperationString","List_default","ListItem_default","Supply_CardTypeIcon","SupplyList","marketSetup","Supply_ListWrapper","Supply_MarketTile","renderTiles","MarketOptions","marketSetupId","changeHandler","setup","Supply","_useExpandedHandling","_useSetHandling","emptySlotList","setCards","useSetHandling","_useMarketSetup","setMarketSetup","handleMarketSetup","useMarketSetup","components_StyledExpansionPanel","components_StyledExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Supply_MarketOptions","Supply_SupplyList","_createSupply","selectedExpansions","gems","relics","spells","createSupply","settingStyles","ConfiguredSet","handleChange","Checkbox_default","checked","CheckboxList","setConfig","expansions","FormGroup_default","style","marginBottom","Settings_ConfiguredSet","ActiveSets","allSetsSelected","handleSelectAll","setsAndPromos","standalones","sort","promos","b","promoA","promoB","miniExpansions","Settings_CheckboxList","Settings","_useExpansionHandling","useExpansionHandling","sets","setSets","every","val","Settings_ActiveSets","newSets","objectSpread","defineProperty","setToDb","DiscardTableCell","&:first-child","paddingLeft","&:last-child","paddingRight","TableCell","TurnOrderTableRow","handlers","TableRow_default","cardRow","TurnOrderTableCell","align","IconButton_default","addToTop","index_es","addToBottom","shuffleIntoDeck","turnOrderStyles","cardDeck","cardTable","borderCollapse","borderBottom","& *","player1","& td","borderColor","player2","player3","player4","wild","TurnOrderTable","Table_default","TableBody_default","TurnOrder_TurnOrderTableRow","renderTableRows","ActiveTurnOrder","deckIsEmpty","discard","startNewRound","drawTurnOrderCard","handleResetGame","otherHandlers","TurnOrder_TurnOrderTable","TurnOrderSetup","turnOrderSetup","startGame","chooseSetup","gutterBottom","renderTurnOrderSetups","shuffleDeck","deck","TurnOrder","_useTurnOrderSetup","setTurnOrderSetup","useEffect","getFromDb","then","handleTurnOrderSetupChange","useTurnOrderSetup","_useGameState","turnOrderState","setTurnOrderState","_useState5","started","_useState6","gameState","setGameState","state","isValidTurnOrderState","isValidGameState","cardId","cardToAdd","find","newState","cardDrawn","deckAndDiscardState","handleStartGame","cardToShuffle","newDeck","useGameState","TurnOrder_ActiveTurnOrder","TurnOrder_TurnOrderSetup","Content","_ROUTES$nemeses$ROUTE","route","isLoading","drawerHeader","CircularProgress_default","pages_Nemeses","pages_Mages","pages_Supply","pages_TurnOrder","pages_Settings","TopBar","drawerIsOpen","currentLocation","toggleDrawer","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","grow","RouteItem","clickhandler","children","button","ListItemIcon_default","ListItemText_default","primary","Routes","locationhandler","components_RouteItem","Build_default","width","DrawerMenu","moveTo","Drawer_default","open","onClose","drawer","anchor","paper","drawerPaper","ChevronLeft_default","Divider_default","components_Routes","appInfo","process","githubLink","src","alt","githubLogo","MainApp","setCurrentLocation","setLoading","setDrawerIsOpen","defaultSets","_useState7","_useState8","catch","App_TopBar","App_DrawerMenu","Provider","components_Content","contentShift","loading","createMuiTheme","blue","pink","useNextVariants","App","updateAvailable","updateInformation","setUpdateAvailable","axios","get","response","data","core_styles","CssBaseline_default","App_UpdateScreen","App_MainApp","height","paddingBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","alignItems","mixins","toolbar","justifyContent","flexGrow","unit","lineHeight","verticalAlign","textAlign","paddingTop","withTheme","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8076e126.chunk.js","sourcesContent":["import React from 'react'\n\nimport styled from 'styled-components/macro'\n\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nconst Wrapper = styled('div')`\n  display: flex;\n  justify-content: center;\n  flex-flow: column nowrap;\n  width: 100%;\n`\n\nconst ButtonWrapper = styled('div')`\n  text-align: center;\n  width: 100%;\n\n  .update-button {\n    margin-top: 24px;\n  }\n`\n\nconst StyledHeadline = styled(Typography)`\n  padding-bottom: 16px;\n`\n\nconst StyledCard = styled(Card)`\n  width: auto;\n  max-width: 320px;\n  margin: 56px auto 0;\n  text-align: center;\n`\n\nconst UpdateScreen = React.memo(({ newVersion }: {\n  newVersion: string\n}) => {\n  return (\n    <Wrapper>\n      <StyledCard>\n        <CardContent>\n          <StyledHeadline variant=\"h6\" component=\"h1\">\n            New Version: { newVersion }\n          </StyledHeadline>\n          <Typography paragraph>\n            Good news, a new Version of Aeons End Randomizer is available :)\n          </Typography>\n          <Typography paragraph>\n            <Link href=\"https://github.com/on3iro/aeons-end-randomizer/releases\" target=\"_blank\">Changelog</Link>\n          </Typography>\n          <ButtonWrapper>\n            <Button\n              onClick={() => window.location.reload(true)}\n              variant=\"contained\"\n              color=\"secondary\"\n              className=\"update-button\"\n            >\n              Update Now!\n            </Button>\n          </ButtonWrapper>\n        </CardContent>\n      </StyledCard>\n    </Wrapper>\n  )\n})\n\nexport default UpdateScreen\n","export const ROUTES = {\n  nemeses: \"Nemeses\",\n  mages: \"Mages\",\n  supply: \"Supply\",\n  turnOrder: \"Turn Order\",\n  settings: \"Settings\"\n}\n","import { IExpansionData } from './types'\n\nexport const DATA: IExpansionData = {\n  \"WE\": {\n    \"id\": \"WE\",\n    \"name\": \"War Eternal\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Gate Witch\",\n        \"id\": \"GateWitch\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Hollow Crown\",\n        \"id\": \"HollowCrown\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Magus Of Cloaks\",\n        \"id\": \"MagusOfCloaks\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Umbra Titan\",\n        \"id\": \"UmbraTitan\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Dezmodia\",\n        \"id\": \"Dezmodia\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Garu\",\n        \"id\": \"Garu\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Gex\",\n        \"id\": \"Gex\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Mazahaedron\",\n        \"id\": \"Mazahaedron\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"MistWE\",\n        \"id\": \"MistWE\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Quilius\",\n        \"id\": \"Quilius\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Ulgimor\",\n        \"id\": \"Ulgimor\"\n      },\n      {\n        \"expansion\": \"WE\",\n        \"name\": \"Yan Magda\",\n        \"id\": \"YanMagda\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Erratic Ingot\",\n        \"id\": \"ErraticIngot\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Reduce To Ash\",\n        \"id\": \"ReduceToAsh\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Vortex Gauntlet\",\n        \"id\": \"VortexGauntlet\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Carbonize\",\n        \"id\": \"Carbonize\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Equilibrium\",\n        \"id\": \"Equilibrium\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Volcanic Glass\",\n        \"id\": \"VolcanicGlass\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Convection Field\",\n        \"id\": \"ConvectionField\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Jagged Lightning\",\n        \"id\": \"JaggedLightning\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Bloodstone Jewel\",\n        \"id\": \"BloodstoneJewel\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Kindle\",\n        \"id\": \"Kindle\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Thoughtform Familiar\",\n        \"id\": \"ThoughtformFamiliar\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Crystallize\",\n        \"id\": \"Crystallize\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Fiery Torrent\",\n        \"id\": \"FieryTorrent\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Celestial Spire\",\n        \"id\": \"CelestialSpire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Conjure The Lost\",\n        \"id\": \"ConjureTheLost\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Nova Forge\",\n        \"id\": \"NovaForge\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Dread Diamond\",\n        \"id\": \"DreadDiamond\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Cairn Compass\",\n        \"id\": \"CairnCompass\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Scoria Slag\",\n        \"id\": \"ScoriaSlag\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Breach Ore\",\n        \"id\": \"BreachOre\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Fiend Catcher\",\n        \"id\": \"FiendCatcher\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Pyrotechnic Surge\",\n        \"id\": \"PyrotechnicSurge\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"WE\",\n        \"name\": \"Aurora\",\n        \"id\": \"Aurora\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Conclave Scroll\",\n        \"id\": \"ConclaveScroll\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Primordial Fetish\",\n        \"id\": \"PrimordialFetish\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"WE\",\n        \"name\": \"Frozen Magmite\",\n        \"id\": \"FrozenMagmite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"WE\",\n        \"name\": \"Mages Totem\",\n        \"id\": \"MagesTotem\",\n        \"cost\": 2\n      }\n    ]\n  },\n  \"TV\": {\n    \"id\": \"TV\",\n    \"name\": \"Void\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Knight Of Shackles\",\n        \"id\": \"KnightOfShackles\"\n      },\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Maiden Of Thorns\",\n        \"id\": \"MaidenOfThorns\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"Sparrow\",\n        \"id\": \"Sparrow\"\n      },\n      {\n        \"expansion\": \"TV\",\n        \"name\": \"XaxosTV\",\n        \"id\": \"XaxosTV\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"TV\",\n        \"name\": \"Fossilized Scarab\",\n        \"id\": \"FossilizedScarab\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Thermal Dart\",\n        \"id\": \"ThermalDart\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Resonate\",\n        \"id\": \"Resonate\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Conflagration\",\n        \"id\": \"Conflagration\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"TV\",\n        \"name\": \"Dimensional Key\",\n        \"id\": \"DimensionalKey\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Inner Fire\",\n        \"id\": \"InnerFire\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"TV\",\n        \"name\": \"Fulminate\",\n        \"id\": \"Fulminate\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"TV\",\n        \"name\": \"Eternity Charm\",\n        \"id\": \"EternityCharm\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"OD\": {\n    \"id\": \"OD\",\n    \"name\": \"Outer Dark\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Thrice Dead Prophet\",\n        \"id\": \"ThriceDeadProphet\"\n      },\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Wraithmonger\",\n        \"id\": \"Wraithmonger\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Indira\",\n        \"id\": \"Indira\"\n      },\n      {\n        \"expansion\": \"OD\",\n        \"name\": \"Remnant\",\n        \"id\": \"Remnant\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Char\",\n        \"id\": \"Char\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Alien Element\",\n        \"id\": \"AlienElement\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Scorch\",\n        \"id\": \"Scorch\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Pyromancy\",\n        \"id\": \"Pyromancy\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Feedback Aura\",\n        \"id\": \"FeedbackAura\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Catalyst\",\n        \"id\": \"Catalyst\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Pain Stone\",\n        \"id\": \"PainStone\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"OD\",\n        \"name\": \"Astral Cube\",\n        \"id\": \"AstralCube\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"OD\",\n        \"name\": \"Riddle Sphere\",\n        \"id\": \"RiddleSphere\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"OD\",\n        \"name\": \"Nether Conduit\",\n        \"id\": \"NetherConduit\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"OD\",\n        \"name\": \"Haunted Berylite\",\n        \"id\": \"HauntedBerylite\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"Nameless\": {\n    \"id\": \"Nameless\",\n    \"name\": \"Nameless\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Blight Lord\",\n        \"id\": \"BlightLord\"\n      },\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Wayward One\",\n        \"id\": \"WaywardOne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"Nameless\",\n        \"name\": \"Malastar\",\n        \"id\": \"Malastar\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Molten Hammer\",\n        \"id\": \"MoltenHammer\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Radiance\",\n        \"id\": \"Radiance\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Blaze\",\n        \"id\": \"Blaze\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Scrying Bolt\",\n        \"id\": \"ScryingBolt\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Sages Brand\",\n        \"id\": \"SagesBrand\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Leeching Agate\",\n        \"id\": \"LeechingAgate\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Nameless\",\n        \"name\": \"Temporal Helix\",\n        \"id\": \"TemporalHelix\",\n        \"cost\": 7\n      }\n    ]\n  },\n  \"Legacy\": {\n    \"id\": \"Legacy\",\n    \"name\": \"Legacy\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Bladius\",\n        \"id\": \"Bladius\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Deathmind\",\n        \"id\": \"Deathmind\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fungal Mesh\",\n        \"id\": \"FungalMesh\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Maelstrom Risen\",\n        \"id\": \"MaelstromRisen\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Spawning Horror\",\n        \"id\": \"SpawningHorror\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Xaxos Ascended\",\n        \"id\": \"XaxosAscended\"\n      }\n    ],\n    \"mages\": [ \n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy 1\",\n        \"id\": \"Legacy1\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy 2\",\n        \"id\": \"Legacy2\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy 3\",\n        \"id\": \"Legacy3\"\n      },\n      {\n        \"expansion\": \"Legacy\",\n        \"name\": \"Legacy 4\",\n        \"id\": \"Legacy4\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Branching Radite\",\n        \"id\": \"BranchingRadite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fire Chakram\",\n        \"id\": \"FireChakram\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Brane Knife\",\n        \"id\": \"BraneKnife\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fulmite Slab\",\n        \"id\": \"FulmiteSlab\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Gilded Marble\",\n        \"id\": \"GildedMarble\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Voltaic Relay\",\n        \"id\": \"VoltaicRelay\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Sparking Siphon\",\n        \"id\": \"SparkingSiphon\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Communion\",\n        \"id\": \"BreachCommunion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Infernal Mirror\",\n        \"id\": \"InfernalMirror\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Geophage\",\n        \"id\": \"Geophage\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Force Transfusion\",\n        \"id\": \"ForceTransfusion\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Conductive Grit\",\n        \"id\": \"ConductiveGrit\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Ancient Cyanolith\",\n        \"id\": \"AncientCyanolith\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Ethereal Hand\",\n        \"id\": \"EtherealHand\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Bending Beam\",\n        \"id\": \"BendingBeam\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Entangled Shard\",\n        \"id\": \"EntangledShard\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Arcane Salvo\",\n        \"id\": \"ArcaneSalvo\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Phased Portalite\",\n        \"id\": \"PhasedPortalite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Pyro Geist\",\n        \"id\": \"PyroGeist\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Flare\",\n        \"id\": \"BreachFlare\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Thunderous Oath\",\n        \"id\": \"ThunderousOath\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Soothing Torporene\",\n        \"id\": \"SoothingTorporene\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Arcing Silicate\",\n        \"id\": \"ArcingSilicate\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Warping Haze\",\n        \"id\": \"WarpingHaze\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Incinerating Fist\",\n        \"id\": \"IncineratingFist\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Reality Stabilizer\",\n        \"id\": \"RealityStabilizer\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Breach Collision\",\n        \"id\": \"BreachCollision\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Fiery Conclusion\",\n        \"id\": \"FieryConclusion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Starfire Frenzy\",\n        \"id\": \"StarfireFrenzy\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Crumbling Compound\",\n        \"id\": \"CrumblingCompound\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Prophetic Lens\",\n        \"id\": \"PropheticLens\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Adrenal Batteries\",\n        \"id\": \"AdrenalBatteries\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Refined Lumenium\",\n        \"id\": \"RefinedLumenium\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Void Mill\",\n        \"id\": \"VoidMill\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Gravity Node\",\n        \"id\": \"GravityNode\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Neural Wreath\",\n        \"id\": \"NeuralWreath\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Legacy\",\n        \"name\": \"Sphere OfInversion\",\n        \"id\": \"SphereOfInversion\",\n        \"cost\": 9\n      }\n    ]\n  },\n  \"Depths\": {\n    \"id\": \"Depths\",\n    \"name\": \"Depths\",\n    \"type\": \"mini\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Horde Crone\",\n        \"id\": \"HordeCrone\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Nym\",\n        \"id\": \"Nym\"\n      },\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Reeve\",\n        \"id\": \"Reeve\"\n      },\n      {\n        \"expansion\": \"Depths\",\n        \"name\": \"Zhana\",\n        \"id\": \"Zhana\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Void Bond\",\n        \"id\": \"VoidBond\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Combustion\",\n        \"id\": \"Combustion\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Vim Dynamo\",\n        \"id\": \"VimDynamo\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Disintegrating Scythe\",\n        \"id\": \"DisintegratingScythe\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Monstrous Inferno\",\n        \"id\": \"MonstrousInferno\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Devouring Shadow\",\n        \"id\": \"DevouringShadow\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Banishing Topaz\",\n        \"id\": \"BanishingTopaz\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"Depths\",\n        \"name\": \"Transmogrifier\",\n        \"id\": \"Transmogrifier\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"BS\": {\n    \"id\": \"BS\",\n    \"name\": \"Buried Secrets\",\n    \"type\": \"mini\",\n    \"nemeses\": [],\n    \"mages\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Triplite Core\",\n        \"id\": \"TripliteCore\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Nerve Jab\",\n        \"id\": \"NerveJab\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Double Tap\",\n        \"id\": \"DoubleTap\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Oblivium Resin\",\n        \"id\": \"ObliviumResin\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Summonite\",\n        \"id\": \"Summonite\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Manifold Container\",\n        \"id\": \"ManifoldContainer\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Draining Touch\",\n        \"id\": \"DrainingTouch\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Jolting Crust\",\n        \"id\": \"JoltingCrust\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Mentite Chunk\",\n        \"id\": \"MentiteChunk\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Soul Cords\",\n        \"id\": \"SoulCords\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Voidium Spike\",\n        \"id\": \"VoidiumSpike\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Precision Shot\",\n        \"id\": \"PrecisionShot\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Muted Lacosite\",\n        \"id\": \"MutedLacosite\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Blade Of Wisdom\",\n        \"id\": \"BladeOfWisdom\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Stunning Force\",\n        \"id\": \"StunningForce\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Flash Of Intellect\",\n        \"id\": \"FlashOfIntellect\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Scholars Opus\",\n        \"id\": \"ScholarsOpus\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Bottled Star\",\n        \"id\": \"BottledStar\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Burning Current\",\n        \"id\": \"BurningCurrent\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"BS\",\n        \"name\": \"Psychic Eruption\",\n        \"id\": \"PsychicEruption\",\n        \"cost\": 8\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"BS\",\n        \"name\": \"Living Gauntlet\",\n        \"id\": \"LivingGauntlet\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"BS\",\n        \"name\": \"Shining Tetrite\",\n        \"id\": \"ShiningTetrite\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"AE\": {\n    \"id\": \"AE\",\n    \"name\": \"Aeons End\",\n    \"type\": \"standalone\",\n    \"nemeses\": [\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Carapace Queen\",\n        \"id\": \"CarapaceQueen\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Crooked Mask\",\n        \"id\": \"CrookedMask\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Prince Of Gluttons\",\n        \"id\": \"PrinceOfGluttons\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Rageborne\",\n        \"id\": \"RageBorne\"\n      }\n    ],\n    \"mages\": [\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Adelheim\",\n        \"id\": \"Adelheim\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Brama\",\n        \"id\": \"Brama\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Jian\",\n        \"id\": \"Jian\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Kadir\",\n        \"id\": \"Kadir\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Lash\",\n        \"id\": \"Lash\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Mist\",\n        \"id\": \"Mist\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Phaedraxa\",\n        \"id\": \"Phaedraxa\"\n      },\n      {\n        \"expansion\": \"AE\",\n        \"name\": \"Xaxos\",\n        \"id\": \"Xaxos\"\n      }\n    ],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Diamond Cluster\",\n        \"id\": \"DiamondCluster\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Chaos Arc\",\n        \"id\": \"ChaosArc\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Ignite\",\n        \"id\": \"Ignite\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Essence Theft\",\n        \"id\": \"EssenceTheft\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Searing Ruby\",\n        \"id\": \"SearingRuby\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Feral Lightning\",\n        \"id\": \"FeralLightning\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Planar Insight\",\n        \"id\": \"PlanarInsight\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Spectral Echo\",\n        \"id\": \"SpectralEcho\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Burning Opal\",\n        \"id\": \"BurningOpal\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Consuming Void\",\n        \"id\": \"ConsumingVoid\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Unstable Prism\",\n        \"id\": \"UnstablePrism\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Clouded Sapphire\",\n        \"id\": \"CloudedSapphire\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Mages Talisman\",\n        \"id\": \"MagesTalisman\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Flexing Dagger\",\n        \"id\": \"FlexingDagger\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Lava Tendril\",\n        \"id\": \"LavaTendril\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Bottled Vortex\",\n        \"id\": \"BottledVortex\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Arcane Nexus\",\n        \"id\": \"ArcaneNexus\",\n        \"cost\": 7\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Dark Fire\",\n        \"id\": \"DarkFire\",\n        \"cost\": 5\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Phoenix Flame\",\n        \"id\": \"PhoenixFlame\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Jade\",\n        \"id\": \"Jade\",\n        \"cost\": 2\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Amplify Vision\",\n        \"id\": \"AmplifyVision\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Vriswood Amber\",\n        \"id\": \"VriswoodAmber\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Blasting Staff\",\n        \"id\": \"BlastingStaff\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"AE\",\n        \"name\": \"Sifters Pearl\",\n        \"id\": \"SiftersPearl\",\n        \"cost\": 3\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Wildfire Whip\",\n        \"id\": \"WildfireWhip\",\n        \"cost\": 6\n      },\n      {\n        \"type\": \"Relic\",\n        \"expansion\": \"AE\",\n        \"name\": \"Focusing Orb\",\n        \"id\": \"FocusingOrb\",\n        \"cost\": 4\n      },\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"AE\",\n        \"name\": \"Oblivion Swell\",\n        \"id\": \"OblivionSwell\",\n        \"cost\": 5\n      }\n    ]\n  },\n  \"p-1\": {\n    \"id\": \"p-1\",\n    \"name\": \"Drown in Flames\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-1\",\n        \"name\": \"Drown in Flames\",\n        \"id\": \"DrownInFlames\",\n        \"cost\": 6\n      }\n    ]\n  },\n  \"p-2\": {\n    \"id\": \"p-2\",\n    \"name\": \"Fleeting Vision\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-2\",\n        \"name\": \"Fleeting Vision\",\n        \"id\": \"FleetingVision\",\n        \"cost\": 3\n      }\n    ]\n  },\n  \"p-3\": {\n    \"id\": \"p-3\",\n    \"name\": \"Splinter Missile\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-3\",\n        \"name\": \"Splinter Missile\",\n        \"id\": \"SplinterMissile\",\n        \"cost\": 5\n      }\n    ]\n  },\n  \"p-4\": {\n    \"id\": \"p-4\",\n    \"name\": \"Echo Stone\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Gem\",\n        \"expansion\": \"p-4\",\n        \"name\": \"Echo Stone\",\n        \"id\": \"EchoStone\",\n        \"cost\": 4\n      }\n    ]\n  },\n  \"p-5\": {\n    \"id\": \"p-5\",\n    \"name\": \"Thieving Spirit\",\n    \"type\": \"promo\",\n    \"mages\": [],\n    \"nemeses\": [],\n    \"cards\": [\n      {\n        \"type\": \"Spell\",\n        \"expansion\": \"p-5\",\n        \"name\": \"Thieving Spirit\",\n        \"id\": \"ThievingSpirit\",\n        \"cost\": 5\n      }\n    ]\n  }\n}\n","import { DATA } from './aeonsData'\nimport { MARKETSETUPS } from './marketSetups'\nimport { TURNORDERSETUPS } from './turnOrderSetups'\n\nconst EXPANSIONS = Object.keys(DATA)\n\nexport default {\n  DATA,\n  EXPANSIONS,\n  MARKETSETUPS,\n  TURNORDERSETUPS\n}\n","import { IMarketSetups } from './types'\n\nexport const MARKETSETUPS: IMarketSetups = {\n  \"market1Inc\": {\n    id: \"market1Inc\",\n    name: \"Market Setup 1 (inclusive)\",\n    type: \"custom\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<=\", threshold: 5 },\n      { type: \"Spell\", operation: \"<=\", threshold: 5 },\n      { type: \"Spell\", operation: \">=\", threshold: 5 },\n      { type: \"Spell\", operation: \">=\", threshold: 5 },\n    ]\n  },\n  \"market1\": {\n    id: \"market1\",\n    name: \"Market Setup 1\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market2\": {\n    id: \"market2\",\n    name: \"Market Setup 2\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Gem\", operation: \">\", threshold: 3 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \"<\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market3\": {\n    id: \"market3\",\n    name: \"Market Setup 3\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \"<\", threshold: 4 },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Gem\", operation: \"OR\", values: [4, 5] },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 3 },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n    ]\n  },\n  \"market4\": {\n    id: \"market4\",\n    name: \"Market Setup 4\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \">\", threshold: 4 },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"<\", threshold: 5 },\n      { type: \"Spell\", operation: \">\", threshold: 5 },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  },\n  \"market5\": {\n    id: \"market5\",\n    name: \"Market Setup 5\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 2 },\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Gem\", operation: \"=\", threshold: 5 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"=\", threshold: 4 },\n      { type: \"Spell\", operation: \"=\", threshold: 5 },\n      { type: \"Spell\", operation: \"=\", threshold: 6 },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"market6\": {\n    id: \"market6\",\n    name: \"Market Setup 6\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \"=\", threshold: 3 },\n      { type: \"Gem\", operation: \"=\", threshold: 4 },\n      { type: \"Relic\", operation: \"<\", threshold: 4 },\n      { type: \"Relic\", operation: \">\", threshold: 4 },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"OR\", values: [3, 4] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \"OR\", values: [5, 6] },\n      { type: \"Spell\", operation: \">\", threshold: 6 },\n    ]\n  },\n  \"random\": {\n    id: \"random\",\n    name: \"Random Setup\",\n    type: \"official\",\n    tiles: [\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Gem\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Relic\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n      { type: \"Spell\", operation: \"ANY\" },\n    ]\n  }\n}\n\n","import { ITurnOrderSetups } from './types'\n\nexport const TURNORDERSETUPS: ITurnOrderSetups = {\n  'onePlayerThreeToc': {\n    id: 'onePlayerThreeToc',\n    name: '1 Player (3 toc)',\n    turnOrderCards: [\n      { id: \"1\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"2\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"3\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"4\", name: 'Nemesis', cssClass: 'nemesis' },\n      { id: \"5\", name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'onePlayerFourToc': {\n    id: 'onePlayerFourToc',\n    name: '1 Player (4 toc)',\n    turnOrderCards: [\n      { id: \"1\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"2\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"3\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"4\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"5\", name: 'Nemesis', cssClass: 'nemesis' },\n      { id: \"6\", name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'twoPlayers': {\n    id: 'twoPlayers',\n    name: '2 Players',\n    turnOrderCards: [\n      { id: \"1\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"2\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"3\", name: 'Player 2', cssClass: 'player2' },\n      { id: \"4\", name: 'Player 2', cssClass: 'player2' },\n      { id: \"5\", name: 'Nemesis', cssClass: 'nemesis' },\n      { id: \"6\", name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'threePlayers': {\n    id: 'threePlayers',\n    name: '3 Players',\n    turnOrderCards: [\n      { id: \"1\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"2\", name: 'Player 2', cssClass: 'player2' },\n      { id: \"3\", name: 'Player 3', cssClass: 'player3' },\n      { id: \"4\", name: 'Wild', cssClass: 'wild' },\n      { id: \"5\", name: 'Nemesis', cssClass: 'nemesis' },\n      { id: \"6\", name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  },\n  'fourPlayers': {\n    id: 'fourPlayers',\n    name: '4 Players',\n    turnOrderCards: [\n      { id: \"1\", name: 'Player 1', cssClass: 'player1' },\n      { id: \"2\", name: 'Player 2', cssClass: 'player2' },\n      { id: \"3\", name: 'Player 3', cssClass: 'player3' },\n      { id: \"4\", name: 'Player 4', cssClass: 'player4' },\n      { id: \"5\", name: 'Nemesis', cssClass: 'nemesis' },\n      { id: \"6\", name: 'Nemesis', cssClass: 'nemesis' }\n    ]\n  }\n}\n","// DATA\n\nexport interface ICreature {\n  expansion: string;\n  name: string;\n  id: string;\n}\n\nexport type CardType = \"Gem\" | \"Relic\" | \"Spell\" | \"EMPTY\"\n\nexport interface ICard {\n  type: CardType;\n  expansion: string;\n  name: string;\n  id: string;\n  cost: number;\n}\n\nexport type ExpansionType = \"standalone\" | \"mini\" | \"promo\"\n\nexport type EntityType = \"nemeses\" | \"mages\" | \"cards\"\nexport type Entity = ICard | ICreature\n\nexport interface IExpansion {\n  id: string;\n  name: string;\n  type: ExpansionType;\n  nemeses: Array<ICreature>;\n  mages: Array<ICreature>;\n  cards: Array<ICard>;\n}\n\nexport interface IExpansionData {\n  [key: string]: IExpansion;\n}\n\n// Market\n\nexport type MarketType = \"official\" | \"custom\"\nexport type Operation =\n  \"<\"\n  | \">\"\n  | \"=\"\n  | \"<=\"\n  | \">=\"\n  | \"ANY\"\n  | \"OR\"\n  | \"NoOp\"\n\nexport interface IBluePrint {\n  type: CardType;\n  operation: Operation;\n  threshold?: number;\n  values?: Array<number>;\n}\n\nexport interface IEmptyBluePrint extends IBluePrint {\n  type: \"EMPTY\";\n  operation: \"NoOp\";\n}\nexport type Slot = IBluePrint | IEmptyBluePrint\n\nexport interface IMarketSetup {\n  id: string;\n  name: string;\n  type: MarketType;\n  tiles: Array<Slot>;\n}\n\nexport interface IMarketSetups {\n  [key: string]: IMarketSetup\n}\n\n// TurnOrder\n\nexport type Player =\n  \"Player 1\"\n  | \"Player 2\"\n  | \"Player 3\"\n  | \"Player 4\"\n  | \"Nemesis\"\n  | \"Wild\"\n\nexport interface ITurnOrderCard {\n  id: string;\n  name: Player;\n  cssClass: string;\n}\n\nexport interface ITurnOrderSetup {\n  id: string;\n  name: string;\n  turnOrderCards: Array<ITurnOrderCard>\n}\n\nexport interface ITurnOrderSetups {\n  [key: string]: ITurnOrderSetup\n}\n\nexport const isCard = (card: ICard | Slot): card is ICard => {\n  return (<ICard>card).name !== undefined\n}\n","import React from 'react'\nimport {\n\n} from './config/types'\n\ninterface ISetConfiguration {\n  configurationOfSets: { [key: string]: boolean };\n  setSets(newSets: { [key: string]: boolean }): void;\n  sets: string[];\n}\n\nexport const SetConfigurationContext = React.createContext<ISetConfiguration | null>(null)\n\n","import React, { useContext } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { SetConfigurationContext } from '../globalContexts'\nimport config from '../config'\n\nconst NoSelectedExpansions = React.memo(() => (\n  <Typography paragraph>\n    There is currently no standalone set selected. Please activate at least one standalone set in the settings.\n  </Typography>\n))\n\n/**\n * Custom hook to make the users configured sets available to a component.\n * If no sets have been selected a simple noSelectedSetsComponent will\n * be created, which can be rendered to warn the user. (this component will otherwise be null)\n *\n * returns { selectedSets, noSelectedSetsComponent }\n  */\nconst useSelectedExpansions = () => {\n  const expansionContext = useContext(SetConfigurationContext)\n\n  if (expansionContext === null) {\n    return {\n      selectedSets: [],\n      NoSelectedExpansionsComponent: NoSelectedExpansions\n    }\n  }\n\n  const { configurationOfSets } = expansionContext\n\n  const selectedSets = Object\n    .keys(configurationOfSets)\n    .filter(key => configurationOfSets[key])\n  const hasStandaloneSet = selectedSets.some(set => config.DATA[set].type === \"standalone\")\n\n  const NoSelectedExpansionsComponent = hasStandaloneSet\n    ? null\n    : NoSelectedExpansions\n\n  return {\n    selectedSets,\n    NoSelectedExpansionsComponent\n  }\n}\n\nexport default useSelectedExpansions\n","import { withStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\n\nconst ShuffleButton = withStyles({\n  root: {\n    position: 'fixed',\n    bottom: '24px',\n    right: '24px',\n    zIndex: 10,\n  }\n})(Fab)\n\nexport default ShuffleButton\n","import config from '../../config'\nimport * as types from '../../config/types'\n\n\nexport const createSlotList = (amount: number): Array<types.IEmptyBluePrint> => {\n  return Array.from({ length: amount }, (): types.IEmptyBluePrint => ({ type: \"EMPTY\", operation: \"NoOp\" }))\n}\n\n\n/**\n * Collects lists of entities (like \"cards\", \"mages\", \"nemeses\") for each\n * set the user has configured inside the application settings and combines them into one.\n * Example:\n *  const selSets = [ \"AE\", \"WE\" ]\n *\n *  getListOfAvailableEntity(selSets, \"mages\") // => [ {...}, ...]\n  */\nexport const getListOfAvailableEntity = (\n  selectedSets: Array<string>,\n  entity: types.EntityType\n) => selectedSets.reduce(\n  (acc: Array<types.ICard | types.ICreature >, expansion: string): Array<any> => {\n    return [ ...acc, ...config.DATA[expansion][entity] ]\n  },\n  []\n)\n\nexport const isCardArray = (entityList: Array<types.ICard | types.ICreature>): entityList is Array<types.ICard> => {\n  return (<types.ICard>entityList[0]).name !== undefined\n}\n\n/**\n  * Gets a random value from a list. (The wording of entities is just used for semantic context)\n  */\nexport const getRandomEntity = (availableEntities: Array<any>) => availableEntities[Math.floor(Math.random() * availableEntities.length)]","import { createStyles } from '@material-ui/core'\n\nconst nemesesStyles = (theme: any) => createStyles({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default nemesesStyles\n","import React, { useState } from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useSelectedExpansions from '../../../hooks/useSelectedSets'\nimport config from '../../../config'\nimport { ICreature } from '../../../config/types'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity\n} from '../helpers'\n\nimport nemesesStyles from './nemesesStyles'\n\nconst Nemeses = React.memo(({classes}: { classes: any }) => {\n  const { selectedSets, NoSelectedExpansionsComponent } = useSelectedExpansions()\n  const [nemesis, setNemesis] = useState<ICreature | null>(null)\n\n  if (NoSelectedExpansionsComponent) {\n    return <NoSelectedExpansionsComponent />\n  }\n\n  const availableNemeses = getListOfAvailableEntity(selectedSets, \"nemeses\")\n  const handleShuffle = () => {\n    setNemesis(getRandomEntity(availableNemeses))\n  }\n\n  return (\n    <React.Fragment>\n      {\n        nemesis\n          ? (\n            <React.Fragment>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography color=\"textSecondary\">{config.DATA[nemesis.expansion].name}</Typography>\n                  <Typography variant=\"h6\" component=\"h2\">{nemesis['name']}</Typography>\n                </CardContent>\n                <i className={`ra ra-lg ra-broken-skull ${classes.cardIcon}`} />\n              </Card>\n\n            </React.Fragment>\n          )\n          : <Typography>Tab button to spawn new nemesis!</Typography>\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Open Breach\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(nemesesStyles)(Nemeses)\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst MageCountPicker = React.memo(({ selectedValue, handleAmountChange }:{\n  selectedValue: string,\n  handleAmountChange: (e: React.ChangeEvent<any>) => void\n}) => (\n  <Card>\n    <CardContent>\n      <FormControl component={\"fieldset\" as \"div\"}>\n        <FormLabel>Amount of Mages</FormLabel>\n        <RadioGroup\n          aria-label=\"Amount of Mages\"\n          name=\"mageAmount\"\n          value={selectedValue}\n          onChange={handleAmountChange}\n          row={true}\n        >\n          <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n          <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n          <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n          <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n        </RadioGroup>\n      </FormControl>\n    </CardContent>\n  </Card>\n))\n\nexport default MageCountPicker\n","import styled from 'styled-components/macro'\n\nconst MageGridWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default MageGridWrapper\n","import React from 'react'\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport { ICreature } from '../../../config/types'\n\nconst MageCard = React.memo(({mage, classes}: {\n  mage: ICreature,\n  classes: any\n}) => (\n  <Grid item xs={6} md={3}>\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography color=\"textSecondary\">{config.DATA[mage.expansion].name}</Typography>\n        <Typography variant=\"h6\" component=\"h2\">{mage.name}</Typography>\n      </CardContent>\n      <i className={`ra ra-lg ra-fluffy-swirl ${classes.cardIcon}`} />\n    </Card>\n  </Grid>\n))\n\nexport default MageCard\n","import { createStyles } from '@material-ui/core'\n\nconst mageStyles = (theme: any) => createStyles({\n  card: {\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2,\n    color: '#E0E0E0',\n  },\n})\n\nexport default mageStyles\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport MageGridWrapper from './MageGridWrapper'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { ICreature } from '../../../config/types'\n\nimport MageCard from './MageCard'\nimport mageStyles from './mageStyles'\n\nconst MageList = React.memo(({ mages, classes }: {\n  mages: Array<ICreature>,\n  classes: any\n}) => (\n  <MageGridWrapper>\n    <Grid container spacing={16}>\n      {\n        mages.map(mage => (\n          <MageCard\n            classes={classes}\n            mage={mage}\n            key={mage.name}\n          />\n        ))\n      }\n    </Grid>\n  </MageGridWrapper>\n))\n\nexport default withStyles(mageStyles)(MageList)\n","import { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst EmptyMageListHint = withStyles({\n  root: {\n    marginTop: 24\n  }\n})(Typography)\n\nexport default EmptyMageListHint\n","import React, { useState } from 'react'\n\nimport useSelectedExpansions from '../../../hooks/useSelectedSets'\n\nimport ShuffleButton from '../../ShuffleButton'\nimport {\n  createSlotList,\n  getListOfAvailableEntity,\n  getRandomEntity\n} from '../helpers'\n\nimport MageCountPicker from './MageCountPicker'\nimport MageList from './MageList'\nimport EmptyMageListHint from './EmptyMageListHint'\nimport { createMageList } from './helpers'\nimport { ICreature } from '../../../config/types'\n\n\nconst Mages = React.memo(() => {\n  const { selectedSets, NoSelectedExpansionsComponent } = useSelectedExpansions()\n  const [mages, setMages] = useState<Array<ICreature>>([])\n  const [amount, setAmount] = useState(1)\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAmount(parseInt(e.currentTarget.value))\n  }\n\n  if (NoSelectedExpansionsComponent) {\n    return <NoSelectedExpansionsComponent />\n  }\n\n  const availableMages = getListOfAvailableEntity(selectedSets, \"mages\")\n  const handleShuffle = () => {\n    const slotList = createSlotList(amount)\n    const { result } = createMageList(availableMages, slotList, getRandomEntity)\n    setMages(result)\n  }\n\n  const noMagesGeneratedYet = mages.length === 0\n\n  return (\n    <React.Fragment>\n      <MageCountPicker\n        selectedValue={amount.toString()}\n        handleAmountChange={handleAmountChange}\n      />\n      {\n        noMagesGeneratedYet\n          ? <EmptyMageListHint>Tap button to recruit mages</EmptyMageListHint>\n          : <MageList mages={mages} />\n      }\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Recruit Mages\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default Mages\n","import { ICreature, Slot } from '../../../config/types'\n\ntype MageListReductionResult = {\n  availableMages: ICreature[],\n  result: ICreature[]\n}\n\nexport const createMageList = (\n  availableMages: ICreature[],\n  slots: Array<Slot>,\n  getEntity: <T>(list: Array<T>) => T\n): MageListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: MageListReductionResult,\n      slot: Slot,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const mage = getEntity(acc.availableMages) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingMages = acc.availableMages.filter(\n        entity => entity.id !== mage.id\n      )\n\n      return {\n        availableMages: remainingMages,\n        result: [ ...acc.result, mage ]\n      }\n  }, { availableMages, result: [] })\n\n  return result\n}\n","import React, { useState } from 'react'\n\nconst useExpandedHandling = () => {\n  // Expansion handling\n  const [ expanded, setExpanded ] = useState<boolean |  string>(false)\n\n  const handleExpansion = (panel: string) => (\n    event: React.ChangeEvent<any>,\n    expanded: boolean | string\n  ) => {\n    const panelExpanded = expanded\n      ? panel\n      : false\n    setExpanded(panelExpanded)\n  }\n\n  return { expanded, handleExpansion, setExpanded }\n}\n\nexport default useExpandedHandling\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n\nconst StyledExpansionPanel = withStyles({\n  root: {\n    borderRadius: 4,\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {\n    margin: 'auto',\n  },\n})(ExpansionPanel);\n\nexport default StyledExpansionPanel\n","import { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nconst StyledExpansionPanelSummary = withStyles({\n  root: {\n    minHeight: 48,\n    '&$expanded': {\n      minHeight: 48,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(ExpansionPanelSummary);\n\nexport default StyledExpansionPanelSummary\n","import { createStyles } from '@material-ui/core'\n\nconst supplyStyles = (theme: any) => createStyles({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '51%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  card: {\n    minWidth: 30,\n    minHeight: 148,\n    position: 'relative',\n  },\n  cardContent: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  cardName: {\n    fontWeight: 'bold',\n  },\n  cardInfoListItem: {\n    padding: 0,\n  },\n  label: {\n    marginRight: 8,\n    display: 'inline-block',\n  },\n  infoText: {\n    display: 'inline-block',\n  },\n  gem: {\n    background: '#EDE7F6',\n  },\n  relic: {\n    background: '#E3F2FD',\n  },\n  spell: {\n    background: '#FFF3E0',\n  },\n  cardIcon: {\n    position: 'absolute',\n    right: 8,\n    bottom: -8,\n    fontSize: 120,\n    zIndex: 0,\n    opacity: .2\n  },\n  gemIcon: {\n    color: '#B39DDB',\n  },\n  relicIcon: {\n    color: '#90CAF9',\n  },\n  spellIcon: {\n    color: '#FFCC80',\n  },\n})\n\nexport default supplyStyles\n","import styled from 'styled-components/macro'\n\nconst ListWrapper = styled('div')`\n  margin-top: 24px;\n`\n\nexport default ListWrapper\n","import React from 'react'\n\nconst CardTypeIcon = React.memo(({type, classes}: {\n  type: string\n  classes: any,\n}) => {\n  const typeClass = classes[`${type}Icon`]\n\n  switch (type) {\n    case 'gem': {\n      return <i className={`ra ra-lg ra-crystals ${classes.cardIcon} ${typeClass}`} />\n    }\n    case 'relic': {\n      return <i className={`ra ra-lg ra-crystal-wand ${classes.cardIcon} ${typeClass}`} /> \n    }\n    case 'spell': {\n      return <i className={`ra ra-lg ra-scroll-unfurled ${classes.cardIcon} ${typeClass}`} /> \n    }\n    default: {\n      return null\n    }\n  }\n})\n\nexport default CardTypeIcon\n","import {\n   ICard, \n   IBluePrint, \n   CardType,\n   Operation\n} from '../../../config/types'\nimport {\n  getListOfAvailableEntity,\n  getRandomEntity,\n  isCardArray\n} from '../helpers'\n\n\ntype CardListReduceResult = {\n  availableCards: ICard[],\n  result: ICard[]\n}\n\n/**\n * Given a card object and a setupBlueprint this returns either\n * true or false, depending on the cost of the card and the expectation set by\n * the blueprints operation and cost.\n  */\nconst filterByCost = (\n  card: ICard,\n  setupBlueprint: IBluePrint\n) => {\n  switch (setupBlueprint.operation) {\n    case \"<\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost < setupBlueprint.threshold\n    }\n    case \">\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost > setupBlueprint.threshold\n    }\n    case \"<=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost <= setupBlueprint.threshold\n    }\n    case \">=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost >= setupBlueprint.threshold\n    }\n    case \"=\": {\n      if (!setupBlueprint.threshold) return true\n      return card.cost === setupBlueprint.threshold\n    }\n    case \"OR\": {\n      if (!setupBlueprint.values) return true\n      return setupBlueprint.values.indexOf(card.cost) !== -1\n    }\n    default: {\n      return true\n    }\n  }\n}\n\nconst createCardList = (\n  availableCards: ICard[],\n  blueprints: Array<IBluePrint>,\n  getEntity: <T>(list: Array<T>) => T\n): CardListReduceResult => {\n  const result = blueprints.reduce(\n    (\n      acc: CardListReduceResult,\n      blueprint: IBluePrint,\n      i: number\n    ) => {\n      const filteredByCost = acc.availableCards.filter(card => filterByCost(card, blueprint))\n\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(filteredByCost) || blueprint\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [ ...acc.result, card ]\n      }\n  }, { availableCards, result: [] })\n\n  return result\n}\n\n/**\n  * Creates a list of randomly selected cards from a given pool of cards by a specific type.\n  * The amount of cards generated is determined by the amount of tileSetups matching\n  * the given cardType. E.g. if 2 out of 9 tileSetups have the type=\"Gem\" and the\n  * specified type is \"Gem\" as well, a list of two cards will be created.\n  *\n  * return List<Card>\n  */\nconst getRandomCardsByType = (\n    availableCards: ICard[],\n    tileSetups: IBluePrint[],\n    cardType: CardType\n) => {\n    const cardSlots = tileSetups.filter(({ type }) => type === cardType)\n    const availableCardsOfType = availableCards.filter(({ type }) => type === cardType)\n    return createCardList(availableCardsOfType, cardSlots, getRandomEntity)\n}\n\n/**\n * Creates a supply object, containing gems, relics and spells with meta information.\n * The pool of available cards will be determined by the sets the user has selected\n * inside the application settings. The supply will be created via the blueprint\n * of the given tileSetups.\n *\n * return { gems, relics, spells }\n  */\nexport const createSupply = (\n    selectedExpansions: string[],\n    tileSetups: IBluePrint[]\n) => {\n  const availableCards = getListOfAvailableEntity(selectedExpansions, \"cards\")\n\n  if (!isCardArray(availableCards)) {\n    return { gems: { result: [] }, relics: { result: [] }, spells: { result: [] } }\n  }\n\n  const gems = getRandomCardsByType(availableCards, tileSetups, \"Gem\")\n  const relics = getRandomCardsByType(availableCards, tileSetups, \"Relic\")\n  const spells = getRandomCardsByType(availableCards, tileSetups, \"Spell\")\n\n  return { gems, relics, spells }\n}\n\nexport const getOperationString = (\n  operation: Operation, \n  values?: number[], \n  threshold?: number\n) => {\n  if (operation === \"OR\" && values) {\n    return values.join(\"/\")\n  }\n\n  const thresholdValue = threshold\n    ? threshold\n    : \"\"\n\n  return `${operation} ${thresholdValue}`\n}","import React from 'react'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\n\nimport config from '../../../config'\nimport {\n   Slot, \n   ICard,\n   isCard\n} from '../../../config/types'\n\nimport CardTypeIcon from './CardTypeIcon'\nimport { getOperationString } from './helpers'\n\nconst MarketTile = React.memo(({ tileSetup, card, classes, ...rest }: {\n  tileSetup: Slot,\n  card: Slot | ICard,\n  classes: any\n}) => {\n  const { type, operation, values, threshold } = tileSetup\n\n  return (\n    <Grid item xs={6} md={4} {...rest}>\n      <Card className={`${classes.card} ${classes[type.toLowerCase()]}`}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {type} { getOperationString(operation, values, threshold) }\n          </Typography>\n          <Typography className={classes.cardName} component=\"p\">\n            { isCard(card)\n                ? card.name\n                : \"-\"\n            }\n          </Typography>\n          <List>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Set:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { (isCard(card) && config.DATA[card.expansion] !== undefined)\n                    ? config.DATA[card.expansion].name\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n            <ListItem className={classes.cardInfoListItem}>\n              <Typography className={classes.label} color=\"textSecondary\">\n                Cost:\n              </Typography>\n              <Typography className={classes.infoText} component=\"span\">\n                { isCard(card)\n                    ? card.cost\n                    : \"-\"\n                }\n              </Typography>\n            </ListItem>\n          </List>\n        </CardContent>\n        <CardTypeIcon type={type.toLowerCase()} classes={classes} />\n      </Card>\n    </Grid>\n  )\n})\n\nexport default MarketTile\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport {\n  IMarketSetup,\n  ICard,\n  Slot\n} from '../../../config/types'\n\nimport ListWrapper from './ListWrapper'\nimport MarketTile from './MarketTile'\n\nconst renderTiles = (\n  marketSetup: IMarketSetup, \n  cards: Array<Slot | ICard>, \n  classes: any\n) => {\n  return marketSetup.tiles.map(\n    (tileSetup, i) => (\n      <MarketTile\n        key={i}\n        tileSetup={tileSetup}\n        card={cards[i]}\n        classes={classes}\n      />\n    )\n  )\n}\n\nconst SupplyList = React.memo(({marketSetup, cards, classes}: {\n  marketSetup: IMarketSetup,\n  cards: Array<Slot | ICard>,\n  classes: any\n}) => (\n  <ListWrapper>\n    <Grid\n      container\n      spacing={16}\n    >\n      { renderTiles(marketSetup, cards, classes) }\n    </Grid>\n  </ListWrapper>\n))\n\nexport default SupplyList\n","import React from 'react'\n\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n\nimport config from '../../../config'\n\n\nconst renderMarketOptions = () => Object\n  .values(config.MARKETSETUPS)\n  .map(setup => ( \n    <FormControlLabel\n      key={setup.id}\n      value={setup.id}\n      control={<Radio />}\n      label={setup.name}\n    />\n  ))\n\nconst MarketOptions = React.memo(({ marketSetupId, changeHandler }: {\n  marketSetupId: string,\n  changeHandler: (event: React.ChangeEvent<any>) => void\n}) => (\n  <RadioGroup\n    aria-label=\"Market Setup Options\"\n    name=\"marketOptions\"\n    value={marketSetupId}\n    onChange={changeHandler}\n  >\n    { renderMarketOptions() }\n  </RadioGroup>\n))\n\nexport default MarketOptions\n","import React from 'react'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useExpandedHandling from '../../../hooks/useExpansionHandling'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\nimport ShuffleButton from '../../ShuffleButton'\n\nimport supplyStyles from './supplyStyles'\nimport SupplyList from './SupplyList'\nimport MarketOptions from './MarketOptions'\nimport {\n  useMarketSetup,\n  useSetHandling\n} from './hooks'\nimport {\n  createSupply\n} from './helpers'\n\n\nconst Supply = React.memo(({ classes }: { classes: any }) => {\n  const { expanded, handleExpansion, setExpanded } = useExpandedHandling()\n  const {\n    selectedSets,\n    NoSelectedExpansionsComponent,\n    cards,\n    setCards\n  } = useSetHandling()\n  const { marketSetup, handleMarketSetup } = useMarketSetup(setExpanded, setCards)\n\n  if (NoSelectedExpansionsComponent) {\n    return <NoSelectedExpansionsComponent />\n  }\n\n  const handleShuffle = () => {\n    const { gems, relics, spells } = createSupply(selectedSets, marketSetup.tiles)\n    setCards([...gems.result, ...relics.result, ...spells.result])\n  }\n\n  return (\n    <React.Fragment>\n      <StyledExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>{marketSetup.name}</Typography>\n        </StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <MarketOptions\n            marketSetupId={marketSetup.id}\n            changeHandler={handleMarketSetup}\n          />\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n      <SupplyList\n        marketSetup={marketSetup}\n        cards={cards}\n        classes={classes}\n      />\n      <ShuffleButton\n        onClick={handleShuffle}\n        color=\"primary\" \n        variant=\"extended\"\n      >\n        Create Market\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(supplyStyles)(Supply)\n","import { useState } from 'react'\n\nimport useSelectedExpansions from '../../../hooks/useSelectedSets'\n\nimport config from '../../../config'\nimport {\n  ICard,\n  Slot\n} from '../../../config/types'\n\nimport { createSlotList } from '../helpers'\n\n\nconst DEFAULTSUPPLYCOUNT = 9\n\nexport const useMarketSetup = (\n  setExpanded: (expanded: boolean) => void,\n  setCards: (slots: Array<ICard | Slot>) => void\n) => {\n  const [ marketSetup, setMarketSetup ] = useState(config.MARKETSETUPS['market1Inc'])\n  const handleMarketSetup = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMarketSetup(config.MARKETSETUPS[event.target.value])\n    setExpanded(false)\n    setCards(createSlotList(DEFAULTSUPPLYCOUNT))\n  }\n\n  return { marketSetup, handleMarketSetup }\n}\n\nexport const useSetHandling = () => {\n  const { selectedSets, NoSelectedExpansionsComponent } = useSelectedExpansions()\n  const emptySlotList = createSlotList(DEFAULTSUPPLYCOUNT)\n  const [cards, setCards] = useState<Array<Slot | ICard>>(emptySlotList)\n\n  return { selectedSets, NoSelectedExpansionsComponent, cards, setCards }\n}\n","const settingStyles = (theme: any) => ({\n   heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport default settingStyles\n","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport config from '../../../config'\n\nconst ConfiguredSet = React.memo(({\n  set,\n  configurationOfSets,\n  handleChange\n}: {\n  set: string,\n  configurationOfSets: { [key: string]: boolean },\n  handleChange: (set: string) => void\n}) => (\n  <FormControlLabel\n    control={\n      <Checkbox\n        checked={configurationOfSets[set]}\n        onChange={() => handleChange(set)}\n        value={set}\n      />\n    }\n    label={config.DATA[set].name}\n  />\n))\n\nexport default ConfiguredSet\n","import React from 'react'\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport ConfiguredSet from './ConfiguredSet'\n\n\nconst renderConfiguredSets = (\n  configurationOfSets: { [key: string]: boolean },\n  sets: string[],\n  handleChange: (set: string) => void\n) => sets.map(set => (\n  <ConfiguredSet\n    key={set}\n    set={set}\n    configurationOfSets={configurationOfSets}\n    handleChange={handleChange}\n  />\n))\n\nconst CheckboxList = React.memo(({\n    label,\n    setConfig,\n    expansions,\n    changeHandler,\n    ...rest\n}: {\n    label: string,\n    setConfig: { [key: string]: boolean },\n    expansions: string[],\n    changeHandler: (set: string) => void\n}) => (\n    <React.Fragment>\n        <FormLabel {...rest}>{label}</FormLabel>\n        <FormGroup {...rest} style={{ marginBottom: '20px' }}>\n        {\n            renderConfiguredSets(setConfig, expansions, changeHandler)\n        }\n        </FormGroup>\n    </React.Fragment>\n))\n\nexport default CheckboxList","import React from 'react'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nimport config from '../../../config'\n\nimport CheckboxList from './CheckboxList'\n\n\nconst ActiveSets = React.memo(({\n  allSetsSelected,\n  handleSelectAll,\n  setsAndPromos,\n  configurationOfSets,\n  handleChange\n}: {\n  allSetsSelected: boolean,\n  handleSelectAll: () => void,\n  setsAndPromos: string[],\n  configurationOfSets: { [key: string]: boolean },\n  handleChange: (set: string) => void\n}) => {\n  const standalones = setsAndPromos\n    .filter((set) => config.DATA[set].type === \"standalone\")\n    .sort()\n  const promos = setsAndPromos\n    .filter((set) => config.DATA[set].type === \"promo\")\n    .sort((a, b) => {\n      const promoA = config.DATA[a].name\n      const promoB = config.DATA[b].name\n\n      if (promoA < promoB) {\n        return -1;\n      }\n\n      if (promoA > promoB) {\n        return 1;\n      }\n\n      return 0;\n    })\n  const miniExpansions = setsAndPromos\n    .filter((set) => config.DATA[set].type === \"mini\")\n    .sort()\n\n  return (\n    <FormControl component={\"fieldset\" as \"div\"}>\n      <FormLabel/>\n      <FormGroup style={{ marginBottom: '20px' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={allSetsSelected}\n              onChange={handleSelectAll}\n              value={ allSetsSelected\n                ? \"Deselect All\"\n                : \"Select All\"\n              }\n            />\n          }\n          label={ allSetsSelected\n            ? \"Deselect All\"\n            : \"Select All\"\n          }\n        />\n      </FormGroup>\n      <CheckboxList\n        label=\"Standalone Sets\"\n        setConfig={configurationOfSets}\n        expansions={standalones}\n        changeHandler={handleChange}\n      />\n      <CheckboxList\n        label=\"Mini Expansions\"\n        setConfig={configurationOfSets}\n        expansions={miniExpansions}\n        changeHandler={handleChange}\n      />\n      <CheckboxList\n        label=\"Promos\"\n        setConfig={configurationOfSets}\n        expansions={promos}\n        changeHandler={handleChange}\n      />\n    </FormControl>\n  )\n})\n\nexport default ActiveSets\n","import React, { useContext } from 'react'\n\nimport { set as setToDb } from 'idb-keyval'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\n\nimport useExpansionHandling from '../../../hooks/useExpansionHandling'\nimport { SetConfigurationContext } from '../../../globalContexts'\n\nimport settingStyles from './settingStyles'\nimport ActiveSets from './ActiveSets'\n\n\nconst Settings = React.memo(({ classes }: { classes: any }) => {\n  const { expanded, handleExpansion } = useExpansionHandling()\n\n  // TODO: globally rename sets to expansion (be careful not to break code referring to indexedDB, so that users are unaffected!)\n\n  // Expansions\n  const expansionContext = useContext(SetConfigurationContext)\n  if (expansionContext === null) {\n    return <Typography paragraph>Error: Set configuration could not be loaded!</Typography>\n  }\n\n  const { configurationOfSets, sets, setSets } = expansionContext\n\n  const handleChange = (set: string) => {\n    const newSets = { ...configurationOfSets, [set]: !configurationOfSets[set] }\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  const allSetsSelected = Object.values(configurationOfSets).every(val => val === true)\n  const handleSelectAll = () => {\n    const newSets = sets.reduce((acc, set) => {\n      return { ...acc, [set]: !allSetsSelected }\n    }, {})\n    setSets(newSets)\n    setToDb('sets', newSets)\n  }\n\n  return (\n    <StyledExpansionPanel expanded={expanded === 'sets'} onChange={handleExpansion('sets')}>\n      <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>Configured Sets</Typography>\n      </StyledExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <ActiveSets\n          allSetsSelected={allSetsSelected}\n          handleSelectAll={handleSelectAll}\n          setsAndPromos={sets}\n          configurationOfSets={configurationOfSets}\n          handleChange={handleChange}\n        />\n      </ExpansionPanelDetails>\n    </StyledExpansionPanel>\n  )\n})\n\nexport default withStyles(settingStyles)(Settings)\n","import { withStyles } from '@material-ui/core/styles'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst DiscardTableCell = withStyles({\n    root: {\n      padding: '4px 8px',\n      '&:first-child': {\n        paddingLeft: 16\n      },\n      '&:last-child': {\n        paddingRight: 8\n      },\n    }\n})(TableCell)\n\nexport default DiscardTableCell\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport { Loop, Publish, GetApp } from '@material-ui/icons'\n\nimport {\n  ITurnOrderCard\n} from '../../../config/types'\n\nimport TurnOrderTableCell from './TurnOrderTableCell'\n\nconst TurnOrderTableRow = React.memo(({\n  card,\n  handlers,\n  classes\n}: {\n  card: ITurnOrderCard,\n  handlers: {\n    addToTop: (id: string) => void,\n    addToBottom: (id: string) => void,\n    shuffleIntoDeck: (id: string) => void\n  },\n  classes: any\n}) => (\n  <TableRow className={`${classes.cardRow} ${classes[card.cssClass]}`}>\n    <TurnOrderTableCell>\n      <Typography component='p'>{card.name}</Typography>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"right\">\n      <IconButton\n        aria-label=\"Add to top\" \n        title=\"Add to top\" \n        onClick={() => handlers.addToTop(card.id)}\n      >\n        <Publish fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"right\">\n      <IconButton \n        aria-label=\"Add to bottom\"\n        title=\"Add to bottom\"\n        onClick={() => handlers.addToBottom(card.id)}\n      >\n        <GetApp fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n    <TurnOrderTableCell align=\"right\">\n      <IconButton \n        aria-label=\"Shuffle into Turn Order Deck\"\n        title=\"Shuffle into Turn Order Deck\"\n        onClick={() => handlers.shuffleIntoDeck(card.id)}\n      >\n        <Loop fontSize=\"small\" />\n      </IconButton>\n    </TurnOrderTableCell>\n  </TableRow>\n))\n\nexport default TurnOrderTableRow\n","import { createStyles } from '@material-ui/core'\n\nconst turnOrderStyles = (theme: any) => createStyles({\n  cardDeck: {\n    marginTop: 24,\n  },\n  cardTable: {\n    marginTop: 24,\n    borderCollapse: 'collapse',\n  },\n  cardRow: {\n    borderBottom: '4px solid #fafafa',\n    '&:first-child': {\n      '& *': {\n        color: '#fff',\n      },\n    },\n  },\n  player1: {\n    background: '#F1F8E9',\n    '& td': {\n      borderColor: '#F1F8E9',\n    },\n    '&:first-child': {\n      background: '#8BC34A',\n      '& td': {\n        borderColor: '#8BC34A',\n      },\n    },\n  },\n  player2: {\n    background: '#FFF3E0',\n    '& td': {\n      borderColor: '#FFF3E0',\n    },\n    '&:first-child': {\n      background: '#FF9800',\n      '& td': {\n        borderColor: '#FF9800',\n      },\n    },\n  },\n  player3: {\n    background: '#E3F2FD',\n    '& td': {\n      borderColor: '#E3F2FD',\n    },\n    '&:first-child': {\n      background: '#2196F3',\n      '& td': {\n        borderColor: '#2196F3',\n      },\n    },\n  },\n  player4: {\n    background: '#F3E5F5',\n    '& td': {\n      borderColor: '#F3E5F5',\n    },\n    '&:first-child': {\n      background: '#9C27B0',\n      '& td': {\n        borderColor: '#9C27B0',\n      },\n    },\n  },\n  nemesis: {\n    background: '#ffebee',\n    '& td': {\n      borderColor: '#ffebee',\n    },\n    '&:first-child': {\n      background: '#f44336',\n      '& td': {\n        borderColor: '#f44336',\n      },\n    },\n  },\n  wild: {\n    background: '#FAFAFA',\n    '& td': {\n      borderColor: '#FAFAFA',\n    },\n    '&:first-child': {\n      background: '#9E9E9E',\n      '& td': {\n        borderColor: '#9E9E9E',\n      },\n    },\n  },\n})\n\nexport default turnOrderStyles\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport {\n  ITurnOrderCard\n} from '../../../config/types'\n\nimport TurnOrderTableRow from './TurnOrderTableRow'\nimport turnOrderStyles from './turnOrderStyles'\n\n\nconst renderTableRows = (\n  cards: ITurnOrderCard[],\n  handlers: {\n    addToTop: (id: string) => void,\n    addToBottom: (id: string) => void,\n    shuffleIntoDeck: (id: string) => void\n  },\n  classes: any\n) => cards.map((card, i) => (\n  <TurnOrderTableRow \n    key={i}\n    card={card}\n    handlers={handlers}\n    classes={classes}\n  />\n))\n\nconst TurnOrderTable = React.memo(({ cards, handlers, classes }: {\n  cards: ITurnOrderCard[],\n  handlers: {\n    addToTop: (id: string) => void,\n    addToBottom: (id: string) => void,\n    shuffleIntoDeck: (id: string) => void\n  },\n  classes: any\n}) => (\n <Table className={classes.cardTable}>\n   <TableBody>\n     { renderTableRows(cards, handlers, classes) }\n   </TableBody>\n </Table>\n))\n\nexport default withStyles(turnOrderStyles)(TurnOrderTable)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\nimport {\n  ITurnOrderCard\n} from '../../../config/types'\n\nimport ShuffleButton from '../../ShuffleButton'\n\nimport TurnOrderTable from './TurnOrderTable'\n\nconst ActiveTurnOrder = React.memo(({\n  deckIsEmpty,\n  discard,\n  handlers\n}: {\n  deckIsEmpty: boolean,\n  discard: ITurnOrderCard[],\n  handlers: {\n    addToTop: (id: string) => void,\n    addToBottom: (id: string) => void,\n    shuffleIntoDeck: (id: string) => void,\n    startNewRound: () => void,\n    drawTurnOrderCard: () => void,\n    handleResetGame: () => void\n  }\n}) => {\n  const { startNewRound, drawTurnOrderCard, handleResetGame, ...otherHandlers } = handlers\n\n  return (\n    <React.Fragment>\n      {\n        deckIsEmpty\n          ? (<Button color='secondary' onClick={startNewRound}>New Round</Button>)\n          : (\n            <Button\n              color='secondary' \n              onClick={drawTurnOrderCard}\n            >\n              Draw a card\n            </Button>\n          )\n      }\n\n      <TurnOrderTable\n        cards={discard}\n        handlers={otherHandlers}\n      />\n\n    <ShuffleButton \n      color='primary'\n      variant='extended'\n      onClick={handleResetGame}\n    >\n          Reset Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default ActiveTurnOrder\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport useExpansionHandling from '../../../hooks/useExpansionHandling'\nimport config from '../../../config'\nimport {\n  ITurnOrderSetup\n} from '../../../config/types'\n\nimport StyledExpansionPanel from '../../StyledExpansionPanel'\nimport StyledExpansionPanelSummary from '../../StyledExpansionPanelSummary'\nimport ShuffleButton from '../../ShuffleButton'\n\nimport turnOrderStyles from './turnOrderStyles'\n\nconst renderSetupOptions = () => Object.values(config.TURNORDERSETUPS).map(setup => (\n  <FormControlLabel\n    key={setup.id}\n    value={setup.id}\n    control={<Radio />}\n    label={setup.name} />\n))\n\nconst renderTurnOrderSetups = (turnOrderSetup: ITurnOrderSetup) => turnOrderSetup\n  .turnOrderCards\n  .map(\n    (card, i) => (\n      <Typography component='p' key={i}>\n        {card.name}\n      </Typography>\n    )\n  )\n\nconst TurnOrderSetup = React.memo(({\n  turnOrderSetup,\n  startGame,\n  chooseSetup,\n  classes\n}: {\n  turnOrderSetup: ITurnOrderSetup,\n  startGame: () => void,\n  chooseSetup: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  classes: any\n}) => {\n  const { expanded, handleExpansion, setExpanded } = useExpansionHandling()\n  const handleSetupChange = (event: React.ChangeEvent<any>) => {\n    chooseSetup(event)\n    setExpanded(false)\n  }\n\n  return (\n    <React.Fragment>\n      <StyledExpansionPanel expanded={expanded === 'setup'} onChange={handleExpansion('setup')}>\n        <StyledExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{turnOrderSetup.name}</Typography>\n        </StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <RadioGroup\n            aria-label='Players'\n            name='turnOrderOptions'\n            value={turnOrderSetup.id}\n            onChange={handleSetupChange}>\n            {renderSetupOptions()}\n          </RadioGroup>\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n      <Card className={classes.cardDeck}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>Turn order cards</Typography>\n          { renderTurnOrderSetups(turnOrderSetup) }\n        </CardContent>\n      </Card>\n      <ShuffleButton color='primary' variant='extended' onClick={startGame}>\n        Start Game\n      </ShuffleButton>\n    </React.Fragment>\n  )\n})\n\nexport default withStyles(turnOrderStyles)(TurnOrderSetup)\n","import React, { useState, useEffect } from 'react'\n\nimport {\n  get as getFromDb,\n  set as setToDb\n} from 'idb-keyval'\n\nimport config from '../../../config'\nimport {\n  ITurnOrderCard,\n  ITurnOrderSetup\n} from '../../../config/types'\n\nimport {\n  getRandomEntity\n} from '../helpers'\n\ntype TurnOrderListReductionResult = {\n  availableCards: ITurnOrderCard[],\n  result: ITurnOrderCard[]\n}\n\nconst isValidTurnOrderState = (state: TurnOrderState): state is TurnOrderState => {\n  return (\n    (<TurnOrderState>state) !== undefined &&\n    (<TurnOrderState>state).deck !== undefined &&\n    (<TurnOrderState>state).discard !== undefined\n  )\n}\n\ntype GameState = {\n  started: boolean\n}\n\nconst isValidGameState = (state: GameState): state is GameState => (<GameState>state).started !== undefined\n\nconst createTurnOrderCardList = (\n  availableCards: ITurnOrderCard[],\n  slots: ITurnOrderCard[],\n  getEntity: <T>(list: Array<T>) => T\n): TurnOrderListReductionResult => {\n  const result = slots.reduce(\n    (\n      acc: TurnOrderListReductionResult,\n      slot: ITurnOrderCard,\n      i: number\n    ) => {\n      // If no entity is left, simply return the actual empty slot\n      const card = getEntity(acc.availableCards) || slot\n\n      // Make sure each entity will only be added to the result list once\n      const remainingCards = acc.availableCards.filter(\n        entity => entity.id !== card.id\n      )\n\n      return {\n        availableCards: remainingCards,\n        result: [ ...acc.result, card ]\n      }\n  }, { availableCards, result: [] })\n\n  return result\n}\n\n\nconst shuffleDeck = (deck: ITurnOrderCard[]): ITurnOrderCard[] => {\n  return createTurnOrderCardList(deck, deck, getRandomEntity).result\n}\n\nexport const useTurnOrderSetup = () => {\n  const [turnOrderSetup, setTurnOrderSetup] = useState(\n    config.TURNORDERSETUPS['onePlayerThreeToc']\n  )\n  const handleTurnOrderSetupChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const setup = config.TURNORDERSETUPS[event.currentTarget.value]\n    setTurnOrderSetup(setup)\n    setToDb('turnOrderSetup', setup)\n  }\n\n  useEffect(() => {\n    getFromDb('turnOrderSetup').then((setup) => {\n      if (setup !== undefined) {\n        setTurnOrderSetup(setup as ITurnOrderSetup)\n      }\n    })\n  }, [])\n\n  return {\n    turnOrderSetup,\n    handleTurnOrderSetupChange\n  }\n}\n\ntype TurnOrderState = {\n  deck: ITurnOrderCard[],\n  discard: ITurnOrderCard[]\n}\n\nexport const useGameState = (turnOrderSetup: ITurnOrderSetup) => {\n  const TURNORDERSTATE = 'turnOrderState'\n\n  const [turnOrderState, setTurnOrderState] = useState<TurnOrderState>({\n    deck: [],\n    discard: []\n  })\n\n  const [gameState, setGameState] = useState<GameState>({\n    started: false\n  })\n\n  const drawTurnOrderCard = () => {\n    const { deck } = turnOrderState\n\n    if(deck.length === 0) return\n\n    const cardDrawn = deck[deck.length - 1];\n\n    const newState = {\n      deck: deck.filter(card => card.id !== cardDrawn.id),\n      discard: [cardDrawn, ...turnOrderState.discard ]\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const startNewRound = () => {\n    const newState = {\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards),\n      discard: []\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToTop = (cardId: string) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    if (!cardToAdd) return;\n\n    const newState = {\n      deck: [...turnOrderState.deck, cardToAdd],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const addToBottom = (cardId: string) => {\n    const cardToAdd = turnOrderState.discard.find(card => card.id === cardId)\n\n    if (!cardToAdd) return;\n\n    const newState = {\n      deck: [cardToAdd, ...turnOrderState.deck],\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  const shuffleIntoDeck = (cardId: string) => {\n    const cardToShuffle = turnOrderState.discard.find(card => card.id === cardId)\n\n    if (!cardToShuffle) return;\n\n    const newDeck = [...turnOrderState.deck, cardToShuffle]\n    const shuffledDeck = shuffleDeck(newDeck)\n\n    const newState = {\n      deck: shuffledDeck,\n      discard: turnOrderState.discard.filter(card => card.id !== cardId)\n    }\n\n    setTurnOrderState(newState)\n    setToDb(TURNORDERSTATE, {\n      turnOrderState: newState,\n      gameState\n    })\n  }\n\n  // Game state handling\n  const handleStartGame = () => {\n    const gameState = { started: true }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = {\n      ...turnOrderState,\n      deck: shuffleDeck(turnOrderSetup.turnOrderCards)\n    }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  const handleResetGame = () => {\n    const gameState = { started: false }\n\n    setGameState(gameState)\n\n    const deckAndDiscardState = { ...turnOrderState, discard: [] }\n\n    setTurnOrderState(deckAndDiscardState)\n\n    setToDb(TURNORDERSTATE, { gameState, deckAndDiscardState })\n  }\n\n  useEffect(() => {\n    getFromDb(TURNORDERSTATE).then((state: any) => {\n      if (!state) return;\n\n      const { turnOrderState, gameState } = state\n\n      const isValidState = (\n       isValidTurnOrderState(turnOrderState) &&\n       isValidGameState(gameState)\n      )\n      if (isValidState) {\n        setGameState(gameState)\n        setTurnOrderState(turnOrderState)\n      }\n    })\n  }, [])\n\n  return {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  }\n}\n","import React from 'react'\n\nimport ActiveTurnOrder from './ActiveTurnOrder'\nimport TurnOrderSetup from './TurnOrderSetup'\nimport {\n  useTurnOrderSetup,\n  useGameState\n} from './hooks'\n\n\nconst TurnOrder = React.memo(() => {\n  const { turnOrderSetup, handleTurnOrderSetupChange } = useTurnOrderSetup()\n\n  const {\n    addToBottom,\n    addToTop,\n    drawTurnOrderCard,\n    gameState,\n    handleResetGame,\n    handleStartGame,\n    shuffleIntoDeck,\n    startNewRound,\n    turnOrderState\n  } = useGameState(turnOrderSetup)\n\n  return (\n    <React.Fragment>\n      {gameState.started\n          ? (\n            <ActiveTurnOrder\n              deckIsEmpty={turnOrderState.deck.length === 0}\n              discard={turnOrderState.discard}\n              handlers={{\n                addToBottom,\n                addToTop,\n                drawTurnOrderCard,\n                handleResetGame,\n                shuffleIntoDeck,\n                startNewRound\n              }}\n            />\n          )\n          : (\n            <TurnOrderSetup\n              turnOrderSetup={turnOrderSetup}\n              startGame={handleStartGame}\n              chooseSetup={handleTurnOrderSetupChange}\n            />\n          )}\n    </React.Fragment>\n  )\n})\n\nexport default TurnOrder\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Nemeses from './pages/Nemeses'\nimport Mages from './pages/Mages'\nimport Supply from './pages/Supply'\nimport Settings from './pages/Settings'\nimport TurnOrder from './pages/TurnOrder'\n\nimport { ROUTES } from '../routes'\n\n\nconst Content = React.memo(({ classes, route, isLoading, ...rest }: {\n  classes: any,\n  route: string,\n  isLoading: boolean,\n  className: string\n}) => (\n  <div {...rest}>\n    <div className={classes.drawerHeader} />\n    {\n      isLoading\n        ? <CircularProgress />\n        : {\n          [ROUTES.nemeses]: <Nemeses />,\n          [ROUTES.mages]: <Mages />,\n          [ROUTES.supply]: <Supply />,\n          [ROUTES.turnOrder]: <TurnOrder />,\n          [ROUTES.settings]: <Settings />\n        }[route]\n    }\n  </div>\n))\n\nexport default Content\n","import React from 'react'\n\nimport classNames from 'classnames'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst TopBar = React.memo(({ classes, drawerIsOpen, currentLocation, toggleDrawer }: {\n  classes: any,\n  drawerIsOpen: boolean,\n  currentLocation: string,\n  toggleDrawer: () => void\n}) => (\n  <AppBar\n    position=\"fixed\"\n    className={classNames(classes.appBar, {\n      [classes.appBarShift]: drawerIsOpen,\n    })}\n  >\n    <Toolbar disableGutters={!drawerIsOpen}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={toggleDrawer}\n        className={classNames(classes.menuButton, drawerIsOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {currentLocation}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n))\n\nexport default TopBar\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nconst RouteItem = React.memo(({ route, clickhandler, children }: {\n  route: string,\n  clickhandler: (route: string) => any,\n  children: any\n}) => (\n  <ListItem button key={route} onClick={() => clickhandler(route)}>\n    <ListItemIcon>{children}</ListItemIcon>\n    <ListItemText primary={route} />\n  </ListItem>\n))\n\nexport default RouteItem\n","import React from 'react'\n\nimport BuildIcon from '@material-ui/icons/Build'\nimport List from '@material-ui/core/List'\n\nimport { ROUTES } from '../routes'\nimport RouteItem from './RouteItem'\n\nconst Routes = React.memo(({ locationhandler }: {\n  locationhandler: (route: string) => void\n}) => (\n  <List>\n    <RouteItem route={ROUTES.nemeses} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-broken-skull' />\n    </RouteItem>\n    <RouteItem route={ROUTES.mages} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-crystal-wand' />\n    </RouteItem>\n    <RouteItem route={ROUTES.supply} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-campfire' />\n    </RouteItem>\n    <RouteItem route={ROUTES.turnOrder} clickhandler={locationhandler}>\n      <i className='ra ra-lg ra-player-lift' />\n    </RouteItem>\n    <RouteItem route={ROUTES.settings} clickhandler={locationhandler}>\n      <BuildIcon style={{\n width: '0.9em'\n }} />\n    </RouteItem>\n  </List>\n))\n\nexport default Routes\n","import React from 'react'\n\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport Routes from '../Routes'\n\n\nconst DrawerMenu = React.memo(({\n  drawerIsOpen,\n  toggleDrawer,\n  classes,\n  moveTo\n}: {\n  drawerIsOpen: boolean,\n  toggleDrawer: () => void,\n  classes: any,\n  moveTo: (route: string) => void\n}) => (\n  <Drawer\n    open={drawerIsOpen}\n    onClose={toggleDrawer}\n    variant=\"persistent\"\n    className={classes.drawer}\n    anchor=\"left\"\n    classes={{\n      paper: classes.drawerPaper\n    }}\n  >\n    <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n    </div>\n    <Divider />\n    <Routes locationhandler={moveTo} />\n    <Divider />\n    <Typography className={classes.appInfo}>\n      Version: {process.env.REACT_APP_VERSION}\n      <Link href=\"https://github.com/on3iro/aeons-end-randomizer\" color=\"inherit\" className={classes.githubLink} target=\"_blank\">\n        <img src=\"images/github-logo.svg\" alt=\"SVG: Github logo\" className={classes.githubLogo} />Github\n      </Link>\n    </Typography>\n  </Drawer>\n))\n\nexport default DrawerMenu\n","import React, { useState, useEffect } from 'react'\n\nimport { get as getFromDb } from 'idb-keyval'\nimport classNames from 'classnames'\n\nimport { ROUTES } from '../../routes'\nimport config from '../../config'\nimport { SetConfigurationContext } from '../../globalContexts'\n\nimport Content from '../Content'\n\nimport TopBar from './TopBar'\nimport DrawerMenu from './DrawerMenu'\n\nconst MainApp = ({ classes }: { classes: any }) => { \n  const [ currentLocation, setCurrentLocation ] = useState(ROUTES.nemeses)\n  const moveTo = (route: string) => {\n    toggleDrawer()\n    setCurrentLocation(route)\n  }\n\n  const [ isLoading, setLoading ] = useState<boolean>(true)\n\n  const [ drawerIsOpen, setDrawerIsOpen ] = useState(false)\n  const toggleDrawer = () => setDrawerIsOpen(!drawerIsOpen)\n\n  const setsAndPromos = config.EXPANSIONS\n  const defaultSets = setsAndPromos.reduce(\n    (acc, set) => ({ ...acc, [set]: false }) , {}\n  )\n  const [ configurationOfSets, setSets ] = useState<{[key: string]: boolean}>(defaultSets)\n\n  // Get sets from indexedDB\n  useEffect(() => {\n    getFromDb('sets')\n      .then(sets => {\n        if (sets !== undefined) {\n          setSets((sets as {[key: string]: boolean}))\n        }\n        setLoading(false)\n      }).catch(() => {\n        setLoading(false)\n      })\n\n    // Effect clean up, used if the component unmounts before the effect is\n    // fully resolved. In this case just ignore the incoming promise result.\n    return () => { return /* NoOp */ }\n  }, [])\n\n  return (\n    <React.Fragment>\n      <TopBar\n        classes={classes}\n        drawerIsOpen={drawerIsOpen}\n        currentLocation={currentLocation}\n        toggleDrawer={toggleDrawer}\n      />\n      <DrawerMenu\n        drawerIsOpen={drawerIsOpen}\n        toggleDrawer={toggleDrawer}\n        classes={classes}\n        moveTo={moveTo}\n      />\n      <SetConfigurationContext.Provider\n        value={{ configurationOfSets, setSets, sets: setsAndPromos }}\n      >\n        <Content\n          isLoading={isLoading}\n          route={currentLocation}\n          classes={classes}\n          className={\n            classNames(\n              classes.content,\n              { [classes.contentShift]: drawerIsOpen },\n              { [classes.loading]: isLoading }\n            )\n          }\n        />\n      </SetConfigurationContext.Provider>\n    </React.Fragment>\n  )\n}\n\nexport default MainApp\n","import React, { useState, useEffect } from 'react';\n\nimport 'rpg-awesome/css/rpg-awesome.min.css'\n\nimport axios from 'axios'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport blue from '@material-ui/core/colors/blue';\nimport pink from '@material-ui/core/colors/pink';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { styles } from './appStyles'\n\nimport UpdateScreen from './UpdateScreen'\nimport MainApp from './MainApp'\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\ntype UpdateInformation = {\n  updateAvailable: boolean,\n  newVersion: string\n}\n\nconst App = React.memo(({ classes }: { classes: any }) => {\n  const [ updateInformation, setUpdateAvailable ] = useState<UpdateInformation>({\n    updateAvailable: false,\n    newVersion: ''\n  })\n\n  useEffect(() => {\n    axios.get('https://api.github.com/repos/on3iro/aeons-end-randomizer/releases')\n      .then(response => {\n        const newestRelease = response.data[0]\n        const localAppVersion = process.env.REACT_APP_VERSION\n        const newVersion = newestRelease['tag_name']\n        if (newVersion !== `v${localAppVersion}`) {\n          setUpdateAvailable({\n            updateAvailable: true,\n            newVersion\n          })\n        }\n      })\n  }, [])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        {\n          updateInformation.updateAvailable\n            ? <UpdateScreen newVersion={updateInformation.newVersion} />\n            : <MainApp classes={classes} />\n        }\n      </div>\n    </MuiThemeProvider>\n  );\n})\n\nexport default withStyles(styles, { withTheme: true })(App)\n","import { createStyles } from '@material-ui/core'\n\nconst drawerWidth = 240;\n\nexport const styles = (theme: any) => createStyles({\n  root: {\n    height: '100%',\n    display: 'flex',\n    paddingBottom: 72\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  appInfo: {\n    margin: theme.spacing.unit * 2\n  },\n  githubLink: {\n    display: 'block',\n    lineHeight: '24px',\n    marginTop: theme.spacing.unit * 2\n  },\n  githubLogo: {\n    width: '24px',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing.unit\n  },\n  loading: {\n    textAlign: 'center',\n    paddingTop: '150px'\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// @ts-ignore\nserviceWorker.register();\n"],"sourceRoot":""}